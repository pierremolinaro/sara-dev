//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'include_C_equalExpression.h'                     *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     january 21th, 2007, at 20h49'48"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_C_equalExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_C_equalExpression : public cPtr_AC_boolExpression {
  private : typedef cPtr_AC_boolExpression inherited ;
//--- START OF USER ZONE 2

  public : virtual C_BDD computeBDD (C_Lexique & inLexique,
                                     const TC_Array <C_saraMachine> & inSaraSystemArray,
                                     const uint16 inVariablesCount,
                                     const uint16 inBDDslotOffset) const ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_C_equalExpression (const GGS_AC_boolExpression & ,
                                const GGS_AC_boolExpression &  COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virual desstructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_C_equalExpression (void) {}
  #endif

  public : GGS_AC_boolExpression  mLeftExpression ;
  public : GGS_AC_boolExpression  mRightExpression ;
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Lexique & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;
//--- Comparison
  public : virtual bool isEqualToObject (const C_GGS_Object * inOperand) const ;
} ;

//---------------------------------------------------------------------------*

