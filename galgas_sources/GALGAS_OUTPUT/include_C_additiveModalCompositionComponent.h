//---------------------------------------------------------------------------*
//                                                                           *
//           File 'include_C_additiveModalCompositionComponent.h'            *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       may 28th, 2006, at 19h38'58"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'cPtr_C_additiveModalCompositionComponent'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_C_additiveModalCompositionComponent : public cPtr_AC_machineDefinition {
  private : typedef cPtr_AC_machineDefinition inherited ;
//--- START OF USER ZONE 2

  public : virtual void computeFromExpression (C_Lexique & inLexique,
                                               const TC_Array <C_saraMachine> & inSaraSystemArray,
                                               const uint16 inVariablesCount,
                                               C_BDD & outInitialStatesBDD,
                                               C_BDD & outTerminalStatesBDD,
                                               C_BDD & outAccessibilityRelationBDD) const ;

//--- END OF USER ZONE 2

  public : cPtr_C_additiveModalCompositionComponent (const GGS_M_modesMap & ,
                                const GGS_ListForModes &  COMMA_LOCATION_ARGS) ;
  public : GGS_M_modesMap  mModeMap ;
  public : GGS_ListForModes  mInclusionList ;
  public : virtual void appendForDescription (C_Lexique & _inLexique, C_String & ioString COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

