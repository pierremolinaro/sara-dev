//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'sara_semantics.cpp'                          *
//             Generated by version version GALGAS_BETA_VERSION              *
//                      july 10th, 2011, at 15h17'27"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "sara_semantics.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "sara_semantics.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

cMapElement_M_5F_variablesMap::cMapElement_M_5F_variablesMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_uint & in_mIndex
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIndex (in_mIndex) {
}

//---------------------------------------------------------------------------*

bool cMapElement_M_5F_variablesMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_M_5F_variablesMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_M_5F_variablesMap (mAttribute_lkey, mAttribute_mIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_M_5F_variablesMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIndex" ":" ;
  mAttribute_mIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_M_5F_variablesMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_M_5F_variablesMap * operand = (cMapElement_M_5F_variablesMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIndex.objectCompare (operand->mAttribute_mIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap::GALGAS_M_5F_variablesMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap::GALGAS_M_5F_variablesMap (const GALGAS_M_5F_variablesMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap & GALGAS_M_5F_variablesMap::operator = (const GALGAS_M_5F_variablesMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap GALGAS_M_5F_variablesMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_M_5F_variablesMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap GALGAS_M_5F_variablesMap::constructor_mapWithMapToOverride (const GALGAS_M_5F_variablesMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_M_5F_variablesMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap GALGAS_M_5F_variablesMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_variablesMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_M_5F_variablesMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_uint inArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_M_5F_variablesMap * p = NULL ;
  macroMyNew (p, cMapElement_M_5F_variablesMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' variable has been already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_M_5F_variablesMap_searchKey = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_M_5F_variablesMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_uint & outArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_M_5F_variablesMap * p = (const cMapElement_M_5F_variablesMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_M_5F_variablesMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_M_5F_variablesMap) ;
    outArgument0 = p->mAttribute_mIndex ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_M_5F_variablesMap::reader_mIndexForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_M_5F_variablesMap * p = (const cMapElement_M_5F_variablesMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_M_5F_variablesMap) ;
    result = p->mAttribute_mIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_variablesMap::modifier_setMIndexForKey (GALGAS_uint inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_variablesMap * p = (cMapElement_M_5F_variablesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_M_5F_variablesMap) ;
    p->mAttribute_mIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_variablesMap * GALGAS_M_5F_variablesMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                    const GALGAS_string & inKey
                                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_variablesMap * result = (cMapElement_M_5F_variablesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_M_5F_variablesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_variablesMap * GALGAS_M_5F_variablesMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                       const GALGAS_lstring & inKey
                                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_M_5F_variablesMap_searchKey COMMA_THERE) ;
  cMapElement_M_5F_variablesMap * result = (cMapElement_M_5F_variablesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_M_5F_variablesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_M_5F_variablesMap::cEnumerator_M_5F_variablesMap (const GALGAS_M_5F_variablesMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_M_5F_variablesMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_M_5F_variablesMap::current_mIndex (LOCATION_ARGS) const {
  const cMapElement_M_5F_variablesMap * p = (const cMapElement_M_5F_variablesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_M_5F_variablesMap) ;
  return p->mAttribute_mIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @M_variablesMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_M_5F_variablesMap ("M_variablesMap",
                                          NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_M_5F_variablesMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_M_5F_variablesMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_M_5F_variablesMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_M_5F_variablesMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap GALGAS_M_5F_variablesMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler,
                                                                  const GALGAS_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_M_5F_variablesMap result ;
  const GALGAS_M_5F_variablesMap * p = (const GALGAS_M_5F_variablesMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_M_5F_variablesMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "M_variablesMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_stateMap::cMapElement_M_5F_stateMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_uint & in_mIndex
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIndex (in_mIndex) {
}

//---------------------------------------------------------------------------*

bool cMapElement_M_5F_stateMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_M_5F_stateMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_M_5F_stateMap (mAttribute_lkey, mAttribute_mIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_M_5F_stateMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIndex" ":" ;
  mAttribute_mIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_M_5F_stateMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_M_5F_stateMap * operand = (cMapElement_M_5F_stateMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIndex.objectCompare (operand->mAttribute_mIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_stateMap::GALGAS_M_5F_stateMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_stateMap::GALGAS_M_5F_stateMap (const GALGAS_M_5F_stateMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_stateMap & GALGAS_M_5F_stateMap::operator = (const GALGAS_M_5F_stateMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_stateMap GALGAS_M_5F_stateMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_M_5F_stateMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_stateMap GALGAS_M_5F_stateMap::constructor_mapWithMapToOverride (const GALGAS_M_5F_stateMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_M_5F_stateMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_stateMap GALGAS_M_5F_stateMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_stateMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_M_5F_stateMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_uint inArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_M_5F_stateMap * p = NULL ;
  macroMyNew (p, cMapElement_M_5F_stateMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' state has been already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_stateMap::modifier_defineState (GALGAS_lstring inKey,
                                                 GALGAS_uint inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_M_5F_stateMap * p = NULL ;
  macroMyNew (p, cMapElement_M_5F_stateMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' state has been already defined" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_M_5F_stateMap_searchKey = "the '%K' state is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_M_5F_stateMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_uint & outArgument0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_M_5F_stateMap * p = (const cMapElement_M_5F_stateMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_M_5F_stateMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_M_5F_stateMap) ;
    outArgument0 = p->mAttribute_mIndex ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_M_5F_stateMap::reader_mIndexForKey (const GALGAS_string & inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_M_5F_stateMap * p = (const cMapElement_M_5F_stateMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_M_5F_stateMap) ;
    result = p->mAttribute_mIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_stateMap::modifier_setMIndexForKey (GALGAS_uint inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_stateMap * p = (cMapElement_M_5F_stateMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_M_5F_stateMap) ;
    p->mAttribute_mIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_stateMap * GALGAS_M_5F_stateMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                            const GALGAS_string & inKey
                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_stateMap * result = (cMapElement_M_5F_stateMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_M_5F_stateMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_stateMap * GALGAS_M_5F_stateMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                               const GALGAS_lstring & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_M_5F_stateMap_searchKey COMMA_THERE) ;
  cMapElement_M_5F_stateMap * result = (cMapElement_M_5F_stateMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_M_5F_stateMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_M_5F_stateMap::cEnumerator_M_5F_stateMap (const GALGAS_M_5F_stateMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_M_5F_stateMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_M_5F_stateMap::current_mIndex (LOCATION_ARGS) const {
  const cMapElement_M_5F_stateMap * p = (const cMapElement_M_5F_stateMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_M_5F_stateMap) ;
  return p->mAttribute_mIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @M_stateMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_M_5F_stateMap ("M_stateMap",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_M_5F_stateMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_M_5F_stateMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_M_5F_stateMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_M_5F_stateMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_stateMap GALGAS_M_5F_stateMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler,
                                                          const GALGAS_location & inErrorLocation
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_M_5F_stateMap result ;
  const GALGAS_M_5F_stateMap * p = (const GALGAS_M_5F_stateMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_M_5F_stateMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "M_stateMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Class for element of '@L_5F_translationVector' list            *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_L_5F_translationVector : public cCollectionElement {
//--- List attributes
  public : GALGAS_uint mAttribute_mTargetSlot ;

//--- Constructor
  public : cCollectionElement_L_5F_translationVector (const GALGAS_uint & in_mTargetSlot
                                                      COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_L_5F_translationVector::cCollectionElement_L_5F_translationVector (const GALGAS_uint & in_mTargetSlot
                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mTargetSlot (in_mTargetSlot) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_L_5F_translationVector::isValid (void) const {
  return mAttribute_mTargetSlot.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_L_5F_translationVector::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_L_5F_translationVector (mAttribute_mTargetSlot COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_L_5F_translationVector::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTargetSlot" ":" ;
  mAttribute_mTargetSlot.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_L_5F_translationVector::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_L_5F_translationVector * operand = (cCollectionElement_L_5F_translationVector *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mTargetSlot.objectCompare (operand->mAttribute_mTargetSlot) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector::GALGAS_L_5F_translationVector (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector::GALGAS_L_5F_translationVector (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector GALGAS_L_5F_translationVector::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_L_5F_translationVector result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector GALGAS_L_5F_translationVector::constructor_listWithValue (const GALGAS_uint & inOperand0
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_translationVector result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_L_5F_translationVector::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_translationVector::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                               const GALGAS_uint & in_mTargetSlot
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_L_5F_translationVector * p = NULL ;
  macroMyNew (p, cCollectionElement_L_5F_translationVector (in_mTargetSlot COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_translationVector::addAssign_operation (const GALGAS_uint & inOperand0
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_translationVector (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_translationVector::modifier_prependValue (GALGAS_uint inOperand0
                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_translationVector (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_translationVector::modifier_popFirst (GALGAS_uint & outOperand0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_translationVector * p = (cCollectionElement_L_5F_translationVector *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_translationVector) ;
    outOperand0 = p->mAttribute_mTargetSlot ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_translationVector::modifier_popLast (GALGAS_uint & outOperand0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_translationVector * p = (cCollectionElement_L_5F_translationVector *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_translationVector) ;
    outOperand0 = p->mAttribute_mTargetSlot ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_translationVector::method_first (GALGAS_uint & outOperand0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_translationVector * p = (cCollectionElement_L_5F_translationVector *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_translationVector) ;
    outOperand0 = p->mAttribute_mTargetSlot ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_translationVector::method_last (GALGAS_uint & outOperand0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_translationVector * p = (cCollectionElement_L_5F_translationVector *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_translationVector) ;
    outOperand0 = p->mAttribute_mTargetSlot ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector GALGAS_L_5F_translationVector::operator_concat (const GALGAS_L_5F_translationVector & inOperand
                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_translationVector result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector GALGAS_L_5F_translationVector::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                      const GALGAS_uint & inLength,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_translationVector result = GALGAS_L_5F_translationVector::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector GALGAS_L_5F_translationVector::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_translationVector result = GALGAS_L_5F_translationVector::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_translationVector::dotAssign_operation (const GALGAS_L_5F_translationVector inOperand
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_L_5F_translationVector::reader_mTargetSlotAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_translationVector * p = (cCollectionElement_L_5F_translationVector *) attributes.ptr () ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_translationVector) ;
    result = p->mAttribute_mTargetSlot ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_L_5F_translationVector::cEnumerator_L_5F_translationVector (const GALGAS_L_5F_translationVector & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_L_5F_translationVector::current_mTargetSlot (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_translationVector * p = (const cCollectionElement_L_5F_translationVector *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_translationVector) ;
  return p->mAttribute_mTargetSlot ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                         @L_translationVector type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_L_5F_translationVector ("L_translationVector",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_L_5F_translationVector::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_L_5F_translationVector ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_L_5F_translationVector::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_L_5F_translationVector (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector GALGAS_L_5F_translationVector::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_translationVector result ;
  const GALGAS_L_5F_translationVector * p = (const GALGAS_L_5F_translationVector *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_L_5F_translationVector *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "L_translationVector", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Class for element of '@L_5F_transitionDefinition' list           *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_L_5F_transitionDefinition : public cCollectionElement {
//--- List attributes
  public : GALGAS_AC_5F_boolExpression mAttribute_mActionExpression ;
  public : GALGAS_location mAttribute_mEndOfExpression ;
  public : GALGAS_uint mAttribute_mTargetStateIndex ;

//--- Constructor
  public : cCollectionElement_L_5F_transitionDefinition (const GALGAS_AC_5F_boolExpression & in_mActionExpression,
                                                         const GALGAS_location & in_mEndOfExpression,
                                                         const GALGAS_uint & in_mTargetStateIndex
                                                         COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_L_5F_transitionDefinition::cCollectionElement_L_5F_transitionDefinition (const GALGAS_AC_5F_boolExpression & in_mActionExpression,
                                                                                            const GALGAS_location & in_mEndOfExpression,
                                                                                            const GALGAS_uint & in_mTargetStateIndex
                                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mActionExpression (in_mActionExpression),
mAttribute_mEndOfExpression (in_mEndOfExpression),
mAttribute_mTargetStateIndex (in_mTargetStateIndex) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_L_5F_transitionDefinition::isValid (void) const {
  return mAttribute_mActionExpression.isValid () && mAttribute_mEndOfExpression.isValid () && mAttribute_mTargetStateIndex.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_L_5F_transitionDefinition::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_L_5F_transitionDefinition (mAttribute_mActionExpression, mAttribute_mEndOfExpression, mAttribute_mTargetStateIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_L_5F_transitionDefinition::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionExpression" ":" ;
  mAttribute_mActionExpression.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfExpression" ":" ;
  mAttribute_mEndOfExpression.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTargetStateIndex" ":" ;
  mAttribute_mTargetStateIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_L_5F_transitionDefinition::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_L_5F_transitionDefinition * operand = (cCollectionElement_L_5F_transitionDefinition *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mActionExpression.objectCompare (operand->mAttribute_mActionExpression) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEndOfExpression.objectCompare (operand->mAttribute_mEndOfExpression) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTargetStateIndex.objectCompare (operand->mAttribute_mTargetStateIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition::GALGAS_L_5F_transitionDefinition (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition::GALGAS_L_5F_transitionDefinition (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition GALGAS_L_5F_transitionDefinition::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_L_5F_transitionDefinition result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition GALGAS_L_5F_transitionDefinition::constructor_listWithValue (const GALGAS_AC_5F_boolExpression & inOperand0,
                                                                                              const GALGAS_location & inOperand1,
                                                                                              const GALGAS_uint & inOperand2
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_transitionDefinition result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_L_5F_transitionDefinition::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_transitionDefinition::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                  const GALGAS_AC_5F_boolExpression & in_mActionExpression,
                                                                  const GALGAS_location & in_mEndOfExpression,
                                                                  const GALGAS_uint & in_mTargetStateIndex
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_L_5F_transitionDefinition * p = NULL ;
  macroMyNew (p, cCollectionElement_L_5F_transitionDefinition (in_mActionExpression,
                                                                  in_mEndOfExpression,
                                                                  in_mTargetStateIndex COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_transitionDefinition::addAssign_operation (const GALGAS_AC_5F_boolExpression & inOperand0,
                                                            const GALGAS_location & inOperand1,
                                                            const GALGAS_uint & inOperand2
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_transitionDefinition (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_transitionDefinition::modifier_prependValue (GALGAS_AC_5F_boolExpression inOperand0,
                                                              GALGAS_location inOperand1,
                                                              GALGAS_uint inOperand2
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_transitionDefinition (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_transitionDefinition::modifier_popFirst (GALGAS_AC_5F_boolExpression & outOperand0,
                                                          GALGAS_location & outOperand1,
                                                          GALGAS_uint & outOperand2,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_transitionDefinition * p = (cCollectionElement_L_5F_transitionDefinition *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_transitionDefinition) ;
    outOperand0 = p->mAttribute_mActionExpression ;
    outOperand1 = p->mAttribute_mEndOfExpression ;
    outOperand2 = p->mAttribute_mTargetStateIndex ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_transitionDefinition::modifier_popLast (GALGAS_AC_5F_boolExpression & outOperand0,
                                                         GALGAS_location & outOperand1,
                                                         GALGAS_uint & outOperand2,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_transitionDefinition * p = (cCollectionElement_L_5F_transitionDefinition *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_transitionDefinition) ;
    outOperand0 = p->mAttribute_mActionExpression ;
    outOperand1 = p->mAttribute_mEndOfExpression ;
    outOperand2 = p->mAttribute_mTargetStateIndex ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_transitionDefinition::method_first (GALGAS_AC_5F_boolExpression & outOperand0,
                                                     GALGAS_location & outOperand1,
                                                     GALGAS_uint & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_transitionDefinition * p = (cCollectionElement_L_5F_transitionDefinition *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_transitionDefinition) ;
    outOperand0 = p->mAttribute_mActionExpression ;
    outOperand1 = p->mAttribute_mEndOfExpression ;
    outOperand2 = p->mAttribute_mTargetStateIndex ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_transitionDefinition::method_last (GALGAS_AC_5F_boolExpression & outOperand0,
                                                    GALGAS_location & outOperand1,
                                                    GALGAS_uint & outOperand2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_transitionDefinition * p = (cCollectionElement_L_5F_transitionDefinition *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_transitionDefinition) ;
    outOperand0 = p->mAttribute_mActionExpression ;
    outOperand1 = p->mAttribute_mEndOfExpression ;
    outOperand2 = p->mAttribute_mTargetStateIndex ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition GALGAS_L_5F_transitionDefinition::operator_concat (const GALGAS_L_5F_transitionDefinition & inOperand
                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_transitionDefinition result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition GALGAS_L_5F_transitionDefinition::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                            const GALGAS_uint & inLength,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_transitionDefinition result = GALGAS_L_5F_transitionDefinition::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition GALGAS_L_5F_transitionDefinition::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_transitionDefinition result = GALGAS_L_5F_transitionDefinition::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_transitionDefinition::dotAssign_operation (const GALGAS_L_5F_transitionDefinition inOperand
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_L_5F_transitionDefinition::reader_mActionExpressionAtIndex (const GALGAS_uint & inIndex,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_transitionDefinition * p = (cCollectionElement_L_5F_transitionDefinition *) attributes.ptr () ;
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_transitionDefinition) ;
    result = p->mAttribute_mActionExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_L_5F_transitionDefinition::reader_mEndOfExpressionAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_transitionDefinition * p = (cCollectionElement_L_5F_transitionDefinition *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_transitionDefinition) ;
    result = p->mAttribute_mEndOfExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_L_5F_transitionDefinition::reader_mTargetStateIndexAtIndex (const GALGAS_uint & inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_transitionDefinition * p = (cCollectionElement_L_5F_transitionDefinition *) attributes.ptr () ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_transitionDefinition) ;
    result = p->mAttribute_mTargetStateIndex ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_L_5F_transitionDefinition::cEnumerator_L_5F_transitionDefinition (const GALGAS_L_5F_transitionDefinition & inEnumeratedObject,
                                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression cEnumerator_L_5F_transitionDefinition::current_mActionExpression (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_transitionDefinition * p = (const cCollectionElement_L_5F_transitionDefinition *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_transitionDefinition) ;
  return p->mAttribute_mActionExpression ;
}

//---------------------------------------------------------------------------*

GALGAS_location cEnumerator_L_5F_transitionDefinition::current_mEndOfExpression (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_transitionDefinition * p = (const cCollectionElement_L_5F_transitionDefinition *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_transitionDefinition) ;
  return p->mAttribute_mEndOfExpression ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_L_5F_transitionDefinition::current_mTargetStateIndex (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_transitionDefinition * p = (const cCollectionElement_L_5F_transitionDefinition *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_transitionDefinition) ;
  return p->mAttribute_mTargetStateIndex ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                       @L_transitionDefinition type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_L_5F_transitionDefinition ("L_transitionDefinition",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_L_5F_transitionDefinition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_L_5F_transitionDefinition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_L_5F_transitionDefinition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_L_5F_transitionDefinition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition GALGAS_L_5F_transitionDefinition::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_transitionDefinition result ;
  const GALGAS_L_5F_transitionDefinition * p = (const GALGAS_L_5F_transitionDefinition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_L_5F_transitionDefinition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "L_transitionDefinition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@L_5F_stateDefinition' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_L_5F_stateDefinition : public cCollectionElement {
//--- List attributes
  public : GALGAS_uint mAttribute_mStateIndex ;
  public : GALGAS_AC_5F_boolExpression mAttribute_mStateExpression ;
  public : GALGAS_location mAttribute_mEndOfStateExpression ;
  public : GALGAS_L_5F_transitionDefinition mAttribute_mTransitionsList ;

//--- Constructor
  public : cCollectionElement_L_5F_stateDefinition (const GALGAS_uint & in_mStateIndex,
                                                    const GALGAS_AC_5F_boolExpression & in_mStateExpression,
                                                    const GALGAS_location & in_mEndOfStateExpression,
                                                    const GALGAS_L_5F_transitionDefinition & in_mTransitionsList
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_L_5F_stateDefinition::cCollectionElement_L_5F_stateDefinition (const GALGAS_uint & in_mStateIndex,
                                                                                  const GALGAS_AC_5F_boolExpression & in_mStateExpression,
                                                                                  const GALGAS_location & in_mEndOfStateExpression,
                                                                                  const GALGAS_L_5F_transitionDefinition & in_mTransitionsList
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mStateIndex (in_mStateIndex),
mAttribute_mStateExpression (in_mStateExpression),
mAttribute_mEndOfStateExpression (in_mEndOfStateExpression),
mAttribute_mTransitionsList (in_mTransitionsList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_L_5F_stateDefinition::isValid (void) const {
  return mAttribute_mStateIndex.isValid () && mAttribute_mStateExpression.isValid () && mAttribute_mEndOfStateExpression.isValid () && mAttribute_mTransitionsList.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_L_5F_stateDefinition::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_L_5F_stateDefinition (mAttribute_mStateIndex, mAttribute_mStateExpression, mAttribute_mEndOfStateExpression, mAttribute_mTransitionsList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_L_5F_stateDefinition::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mStateIndex" ":" ;
  mAttribute_mStateIndex.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mStateExpression" ":" ;
  mAttribute_mStateExpression.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfStateExpression" ":" ;
  mAttribute_mEndOfStateExpression.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransitionsList" ":" ;
  mAttribute_mTransitionsList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_L_5F_stateDefinition::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_L_5F_stateDefinition * operand = (cCollectionElement_L_5F_stateDefinition *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mStateIndex.objectCompare (operand->mAttribute_mStateIndex) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mStateExpression.objectCompare (operand->mAttribute_mStateExpression) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEndOfStateExpression.objectCompare (operand->mAttribute_mEndOfStateExpression) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransitionsList.objectCompare (operand->mAttribute_mTransitionsList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_stateDefinition::GALGAS_L_5F_stateDefinition (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_stateDefinition::GALGAS_L_5F_stateDefinition (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_stateDefinition GALGAS_L_5F_stateDefinition::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_L_5F_stateDefinition result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_stateDefinition GALGAS_L_5F_stateDefinition::constructor_listWithValue (const GALGAS_uint & inOperand0,
                                                                                    const GALGAS_AC_5F_boolExpression & inOperand1,
                                                                                    const GALGAS_location & inOperand2,
                                                                                    const GALGAS_L_5F_transitionDefinition & inOperand3
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_stateDefinition result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_L_5F_stateDefinition::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_stateDefinition::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_uint & in_mStateIndex,
                                                             const GALGAS_AC_5F_boolExpression & in_mStateExpression,
                                                             const GALGAS_location & in_mEndOfStateExpression,
                                                             const GALGAS_L_5F_transitionDefinition & in_mTransitionsList
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_L_5F_stateDefinition * p = NULL ;
  macroMyNew (p, cCollectionElement_L_5F_stateDefinition (in_mStateIndex,
                                                             in_mStateExpression,
                                                             in_mEndOfStateExpression,
                                                             in_mTransitionsList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_stateDefinition::addAssign_operation (const GALGAS_uint & inOperand0,
                                                       const GALGAS_AC_5F_boolExpression & inOperand1,
                                                       const GALGAS_location & inOperand2,
                                                       const GALGAS_L_5F_transitionDefinition & inOperand3
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_stateDefinition (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_stateDefinition::modifier_prependValue (GALGAS_uint inOperand0,
                                                         GALGAS_AC_5F_boolExpression inOperand1,
                                                         GALGAS_location inOperand2,
                                                         GALGAS_L_5F_transitionDefinition inOperand3
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_stateDefinition (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_stateDefinition::modifier_popFirst (GALGAS_uint & outOperand0,
                                                     GALGAS_AC_5F_boolExpression & outOperand1,
                                                     GALGAS_location & outOperand2,
                                                     GALGAS_L_5F_transitionDefinition & outOperand3,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_stateDefinition * p = (cCollectionElement_L_5F_stateDefinition *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_stateDefinition) ;
    outOperand0 = p->mAttribute_mStateIndex ;
    outOperand1 = p->mAttribute_mStateExpression ;
    outOperand2 = p->mAttribute_mEndOfStateExpression ;
    outOperand3 = p->mAttribute_mTransitionsList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_stateDefinition::modifier_popLast (GALGAS_uint & outOperand0,
                                                    GALGAS_AC_5F_boolExpression & outOperand1,
                                                    GALGAS_location & outOperand2,
                                                    GALGAS_L_5F_transitionDefinition & outOperand3,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_stateDefinition * p = (cCollectionElement_L_5F_stateDefinition *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_stateDefinition) ;
    outOperand0 = p->mAttribute_mStateIndex ;
    outOperand1 = p->mAttribute_mStateExpression ;
    outOperand2 = p->mAttribute_mEndOfStateExpression ;
    outOperand3 = p->mAttribute_mTransitionsList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_stateDefinition::method_first (GALGAS_uint & outOperand0,
                                                GALGAS_AC_5F_boolExpression & outOperand1,
                                                GALGAS_location & outOperand2,
                                                GALGAS_L_5F_transitionDefinition & outOperand3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_stateDefinition * p = (cCollectionElement_L_5F_stateDefinition *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_stateDefinition) ;
    outOperand0 = p->mAttribute_mStateIndex ;
    outOperand1 = p->mAttribute_mStateExpression ;
    outOperand2 = p->mAttribute_mEndOfStateExpression ;
    outOperand3 = p->mAttribute_mTransitionsList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_stateDefinition::method_last (GALGAS_uint & outOperand0,
                                               GALGAS_AC_5F_boolExpression & outOperand1,
                                               GALGAS_location & outOperand2,
                                               GALGAS_L_5F_transitionDefinition & outOperand3,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_stateDefinition * p = (cCollectionElement_L_5F_stateDefinition *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_stateDefinition) ;
    outOperand0 = p->mAttribute_mStateIndex ;
    outOperand1 = p->mAttribute_mStateExpression ;
    outOperand2 = p->mAttribute_mEndOfStateExpression ;
    outOperand3 = p->mAttribute_mTransitionsList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_stateDefinition GALGAS_L_5F_stateDefinition::operator_concat (const GALGAS_L_5F_stateDefinition & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_stateDefinition result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_stateDefinition GALGAS_L_5F_stateDefinition::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                  const GALGAS_uint & inLength,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_stateDefinition result = GALGAS_L_5F_stateDefinition::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_stateDefinition GALGAS_L_5F_stateDefinition::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_stateDefinition result = GALGAS_L_5F_stateDefinition::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_stateDefinition::dotAssign_operation (const GALGAS_L_5F_stateDefinition inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_L_5F_stateDefinition::reader_mStateIndexAtIndex (const GALGAS_uint & inIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_stateDefinition * p = (cCollectionElement_L_5F_stateDefinition *) attributes.ptr () ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_stateDefinition) ;
    result = p->mAttribute_mStateIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_L_5F_stateDefinition::reader_mStateExpressionAtIndex (const GALGAS_uint & inIndex,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_stateDefinition * p = (cCollectionElement_L_5F_stateDefinition *) attributes.ptr () ;
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_stateDefinition) ;
    result = p->mAttribute_mStateExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_L_5F_stateDefinition::reader_mEndOfStateExpressionAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_stateDefinition * p = (cCollectionElement_L_5F_stateDefinition *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_stateDefinition) ;
    result = p->mAttribute_mEndOfStateExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition GALGAS_L_5F_stateDefinition::reader_mTransitionsListAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_stateDefinition * p = (cCollectionElement_L_5F_stateDefinition *) attributes.ptr () ;
  GALGAS_L_5F_transitionDefinition result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_stateDefinition) ;
    result = p->mAttribute_mTransitionsList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_L_5F_stateDefinition::cEnumerator_L_5F_stateDefinition (const GALGAS_L_5F_stateDefinition & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_L_5F_stateDefinition::current_mStateIndex (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_stateDefinition * p = (const cCollectionElement_L_5F_stateDefinition *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_stateDefinition) ;
  return p->mAttribute_mStateIndex ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression cEnumerator_L_5F_stateDefinition::current_mStateExpression (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_stateDefinition * p = (const cCollectionElement_L_5F_stateDefinition *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_stateDefinition) ;
  return p->mAttribute_mStateExpression ;
}

//---------------------------------------------------------------------------*

GALGAS_location cEnumerator_L_5F_stateDefinition::current_mEndOfStateExpression (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_stateDefinition * p = (const cCollectionElement_L_5F_stateDefinition *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_stateDefinition) ;
  return p->mAttribute_mEndOfStateExpression ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_transitionDefinition cEnumerator_L_5F_stateDefinition::current_mTransitionsList (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_stateDefinition * p = (const cCollectionElement_L_5F_stateDefinition *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_stateDefinition) ;
  return p->mAttribute_mTransitionsList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                          @L_stateDefinition type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_L_5F_stateDefinition ("L_stateDefinition",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_L_5F_stateDefinition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_L_5F_stateDefinition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_L_5F_stateDefinition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_L_5F_stateDefinition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_stateDefinition GALGAS_L_5F_stateDefinition::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_stateDefinition result ;
  const GALGAS_L_5F_stateDefinition * p = (const GALGAS_L_5F_stateDefinition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_L_5F_stateDefinition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "L_stateDefinition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Class for element of '@L_5F_statesDefinitionList' list           *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_L_5F_statesDefinitionList : public cCollectionElement {
//--- List attributes
  public : GALGAS_uint mAttribute_mStateIndex ;
  public : GALGAS_location mAttribute_mStateLocation ;

//--- Constructor
  public : cCollectionElement_L_5F_statesDefinitionList (const GALGAS_uint & in_mStateIndex,
                                                         const GALGAS_location & in_mStateLocation
                                                         COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_L_5F_statesDefinitionList::cCollectionElement_L_5F_statesDefinitionList (const GALGAS_uint & in_mStateIndex,
                                                                                            const GALGAS_location & in_mStateLocation
                                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mStateIndex (in_mStateIndex),
mAttribute_mStateLocation (in_mStateLocation) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_L_5F_statesDefinitionList::isValid (void) const {
  return mAttribute_mStateIndex.isValid () && mAttribute_mStateLocation.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_L_5F_statesDefinitionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_L_5F_statesDefinitionList (mAttribute_mStateIndex, mAttribute_mStateLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_L_5F_statesDefinitionList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mStateIndex" ":" ;
  mAttribute_mStateIndex.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mStateLocation" ":" ;
  mAttribute_mStateLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_L_5F_statesDefinitionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_L_5F_statesDefinitionList * operand = (cCollectionElement_L_5F_statesDefinitionList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mStateIndex.objectCompare (operand->mAttribute_mStateIndex) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mStateLocation.objectCompare (operand->mAttribute_mStateLocation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList::GALGAS_L_5F_statesDefinitionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList::GALGAS_L_5F_statesDefinitionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList GALGAS_L_5F_statesDefinitionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_L_5F_statesDefinitionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList GALGAS_L_5F_statesDefinitionList::constructor_listWithValue (const GALGAS_uint & inOperand0,
                                                                                              const GALGAS_location & inOperand1
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_statesDefinitionList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_L_5F_statesDefinitionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_statesDefinitionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                  const GALGAS_uint & in_mStateIndex,
                                                                  const GALGAS_location & in_mStateLocation
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_L_5F_statesDefinitionList * p = NULL ;
  macroMyNew (p, cCollectionElement_L_5F_statesDefinitionList (in_mStateIndex,
                                                                  in_mStateLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_statesDefinitionList::addAssign_operation (const GALGAS_uint & inOperand0,
                                                            const GALGAS_location & inOperand1
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_statesDefinitionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_statesDefinitionList::modifier_prependValue (GALGAS_uint inOperand0,
                                                              GALGAS_location inOperand1
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_statesDefinitionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_statesDefinitionList::modifier_popFirst (GALGAS_uint & outOperand0,
                                                          GALGAS_location & outOperand1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_statesDefinitionList * p = (cCollectionElement_L_5F_statesDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_statesDefinitionList) ;
    outOperand0 = p->mAttribute_mStateIndex ;
    outOperand1 = p->mAttribute_mStateLocation ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_statesDefinitionList::modifier_popLast (GALGAS_uint & outOperand0,
                                                         GALGAS_location & outOperand1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_statesDefinitionList * p = (cCollectionElement_L_5F_statesDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_statesDefinitionList) ;
    outOperand0 = p->mAttribute_mStateIndex ;
    outOperand1 = p->mAttribute_mStateLocation ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_statesDefinitionList::method_first (GALGAS_uint & outOperand0,
                                                     GALGAS_location & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_statesDefinitionList * p = (cCollectionElement_L_5F_statesDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_statesDefinitionList) ;
    outOperand0 = p->mAttribute_mStateIndex ;
    outOperand1 = p->mAttribute_mStateLocation ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_statesDefinitionList::method_last (GALGAS_uint & outOperand0,
                                                    GALGAS_location & outOperand1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_statesDefinitionList * p = (cCollectionElement_L_5F_statesDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_statesDefinitionList) ;
    outOperand0 = p->mAttribute_mStateIndex ;
    outOperand1 = p->mAttribute_mStateLocation ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList GALGAS_L_5F_statesDefinitionList::operator_concat (const GALGAS_L_5F_statesDefinitionList & inOperand
                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_statesDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList GALGAS_L_5F_statesDefinitionList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                            const GALGAS_uint & inLength,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_statesDefinitionList result = GALGAS_L_5F_statesDefinitionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList GALGAS_L_5F_statesDefinitionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_statesDefinitionList result = GALGAS_L_5F_statesDefinitionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_statesDefinitionList::dotAssign_operation (const GALGAS_L_5F_statesDefinitionList inOperand
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_L_5F_statesDefinitionList::reader_mStateIndexAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_statesDefinitionList * p = (cCollectionElement_L_5F_statesDefinitionList *) attributes.ptr () ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_statesDefinitionList) ;
    result = p->mAttribute_mStateIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_L_5F_statesDefinitionList::reader_mStateLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_statesDefinitionList * p = (cCollectionElement_L_5F_statesDefinitionList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_statesDefinitionList) ;
    result = p->mAttribute_mStateLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_L_5F_statesDefinitionList::cEnumerator_L_5F_statesDefinitionList (const GALGAS_L_5F_statesDefinitionList & inEnumeratedObject,
                                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_L_5F_statesDefinitionList::current_mStateIndex (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_statesDefinitionList * p = (const cCollectionElement_L_5F_statesDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_statesDefinitionList) ;
  return p->mAttribute_mStateIndex ;
}

//---------------------------------------------------------------------------*

GALGAS_location cEnumerator_L_5F_statesDefinitionList::current_mStateLocation (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_statesDefinitionList * p = (const cCollectionElement_L_5F_statesDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_statesDefinitionList) ;
  return p->mAttribute_mStateLocation ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                       @L_statesDefinitionList type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_L_5F_statesDefinitionList ("L_statesDefinitionList",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_L_5F_statesDefinitionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_L_5F_statesDefinitionList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_L_5F_statesDefinitionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_L_5F_statesDefinitionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList GALGAS_L_5F_statesDefinitionList::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_statesDefinitionList result ;
  const GALGAS_L_5F_statesDefinitionList * p = (const GALGAS_L_5F_statesDefinitionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_L_5F_statesDefinitionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "L_statesDefinitionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_modesMap::cMapElement_M_5F_modesMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_uint & in_mIndex,
                                                      const GALGAS_AC_5F_machineDefinition & in_mModeDefinition
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIndex (in_mIndex),
mAttribute_mModeDefinition (in_mModeDefinition) {
}

//---------------------------------------------------------------------------*

bool cMapElement_M_5F_modesMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () && mAttribute_mModeDefinition.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_M_5F_modesMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_M_5F_modesMap (mAttribute_lkey, mAttribute_mIndex, mAttribute_mModeDefinition COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_M_5F_modesMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIndex" ":" ;
  mAttribute_mIndex.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mModeDefinition" ":" ;
  mAttribute_mModeDefinition.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_M_5F_modesMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_M_5F_modesMap * operand = (cMapElement_M_5F_modesMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIndex.objectCompare (operand->mAttribute_mIndex) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mModeDefinition.objectCompare (operand->mAttribute_mModeDefinition) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap::GALGAS_M_5F_modesMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap::GALGAS_M_5F_modesMap (const GALGAS_M_5F_modesMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap & GALGAS_M_5F_modesMap::operator = (const GALGAS_M_5F_modesMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap GALGAS_M_5F_modesMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_M_5F_modesMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap GALGAS_M_5F_modesMap::constructor_mapWithMapToOverride (const GALGAS_M_5F_modesMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_M_5F_modesMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap GALGAS_M_5F_modesMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_modesMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_M_5F_modesMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_uint inArgument0,
                                               GALGAS_AC_5F_machineDefinition inArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_M_5F_modesMap * p = NULL ;
  macroMyNew (p, cMapElement_M_5F_modesMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' mode has been already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_M_5F_modesMap_searchKey = "the '%K' mode is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_M_5F_modesMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_uint & outArgument0,
                                             GALGAS_AC_5F_machineDefinition & outArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_M_5F_modesMap * p = (const cMapElement_M_5F_modesMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_M_5F_modesMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_M_5F_modesMap) ;
    outArgument0 = p->mAttribute_mIndex ;
    outArgument1 = p->mAttribute_mModeDefinition ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_M_5F_modesMap::reader_mIndexForKey (const GALGAS_string & inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_M_5F_modesMap * p = (const cMapElement_M_5F_modesMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_M_5F_modesMap) ;
    result = p->mAttribute_mIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_M_5F_modesMap::reader_mModeDefinitionForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_M_5F_modesMap * p = (const cMapElement_M_5F_modesMap *) attributes ;
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_M_5F_modesMap) ;
    result = p->mAttribute_mModeDefinition ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_modesMap::modifier_setMIndexForKey (GALGAS_uint inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_modesMap * p = (cMapElement_M_5F_modesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_M_5F_modesMap) ;
    p->mAttribute_mIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_modesMap::modifier_setMModeDefinitionForKey (GALGAS_AC_5F_machineDefinition inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_modesMap * p = (cMapElement_M_5F_modesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_M_5F_modesMap) ;
    p->mAttribute_mModeDefinition = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_modesMap * GALGAS_M_5F_modesMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                            const GALGAS_string & inKey
                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_modesMap * result = (cMapElement_M_5F_modesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_M_5F_modesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_modesMap * GALGAS_M_5F_modesMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                               const GALGAS_lstring & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_M_5F_modesMap_searchKey COMMA_THERE) ;
  cMapElement_M_5F_modesMap * result = (cMapElement_M_5F_modesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_M_5F_modesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_M_5F_modesMap::cEnumerator_M_5F_modesMap (const GALGAS_M_5F_modesMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_M_5F_modesMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_M_5F_modesMap::current_mIndex (LOCATION_ARGS) const {
  const cMapElement_M_5F_modesMap * p = (const cMapElement_M_5F_modesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_M_5F_modesMap) ;
  return p->mAttribute_mIndex ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition cEnumerator_M_5F_modesMap::current_mModeDefinition (LOCATION_ARGS) const {
  const cMapElement_M_5F_modesMap * p = (const cMapElement_M_5F_modesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_M_5F_modesMap) ;
  return p->mAttribute_mModeDefinition ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @M_modesMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_M_5F_modesMap ("M_modesMap",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_M_5F_modesMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_M_5F_modesMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_M_5F_modesMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_M_5F_modesMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap GALGAS_M_5F_modesMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler,
                                                          const GALGAS_location & inErrorLocation
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_M_5F_modesMap result ;
  const GALGAS_M_5F_modesMap * p = (const GALGAS_M_5F_modesMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_M_5F_modesMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "M_modesMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Class for element of '@ListForModes' list                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_ListForModes : public cCollectionElement {
//--- List attributes
  public : GALGAS_uint mAttribute_mSourceMode ;
  public : GALGAS_uint mAttribute_mTargetMode ;

//--- Constructor
  public : cCollectionElement_ListForModes (const GALGAS_uint & in_mSourceMode,
                                            const GALGAS_uint & in_mTargetMode
                                            COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_ListForModes::cCollectionElement_ListForModes (const GALGAS_uint & in_mSourceMode,
                                                                  const GALGAS_uint & in_mTargetMode
                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mSourceMode (in_mSourceMode),
mAttribute_mTargetMode (in_mTargetMode) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_ListForModes::isValid (void) const {
  return mAttribute_mSourceMode.isValid () && mAttribute_mTargetMode.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ListForModes::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ListForModes (mAttribute_mSourceMode, mAttribute_mTargetMode COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_ListForModes::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSourceMode" ":" ;
  mAttribute_mSourceMode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTargetMode" ":" ;
  mAttribute_mTargetMode.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_ListForModes::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ListForModes * operand = (cCollectionElement_ListForModes *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mSourceMode.objectCompare (operand->mAttribute_mSourceMode) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTargetMode.objectCompare (operand->mAttribute_mTargetMode) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes::GALGAS_ListForModes (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes::GALGAS_ListForModes (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_ListForModes::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ListForModes result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_ListForModes::constructor_listWithValue (const GALGAS_uint & inOperand0,
                                                                    const GALGAS_uint & inOperand1
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_ListForModes result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ListForModes::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ListForModes::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                     const GALGAS_uint & in_mSourceMode,
                                                     const GALGAS_uint & in_mTargetMode
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement_ListForModes * p = NULL ;
  macroMyNew (p, cCollectionElement_ListForModes (in_mSourceMode,
                                                     in_mTargetMode COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_ListForModes::addAssign_operation (const GALGAS_uint & inOperand0,
                                               const GALGAS_uint & inOperand1
                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ListForModes (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ListForModes::modifier_prependValue (GALGAS_uint inOperand0,
                                                 GALGAS_uint inOperand1
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ListForModes (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ListForModes::modifier_popFirst (GALGAS_uint & outOperand0,
                                             GALGAS_uint & outOperand1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ListForModes * p = (cCollectionElement_ListForModes *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ListForModes) ;
    outOperand0 = p->mAttribute_mSourceMode ;
    outOperand1 = p->mAttribute_mTargetMode ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ListForModes::modifier_popLast (GALGAS_uint & outOperand0,
                                            GALGAS_uint & outOperand1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ListForModes * p = (cCollectionElement_ListForModes *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ListForModes) ;
    outOperand0 = p->mAttribute_mSourceMode ;
    outOperand1 = p->mAttribute_mTargetMode ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ListForModes::method_first (GALGAS_uint & outOperand0,
                                        GALGAS_uint & outOperand1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ListForModes * p = (cCollectionElement_ListForModes *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ListForModes) ;
    outOperand0 = p->mAttribute_mSourceMode ;
    outOperand1 = p->mAttribute_mTargetMode ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_ListForModes::method_last (GALGAS_uint & outOperand0,
                                       GALGAS_uint & outOperand1,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ListForModes * p = (cCollectionElement_ListForModes *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ListForModes) ;
    outOperand0 = p->mAttribute_mSourceMode ;
    outOperand1 = p->mAttribute_mTargetMode ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_ListForModes::operator_concat (const GALGAS_ListForModes & inOperand
                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ListForModes result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_ListForModes::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                  const GALGAS_uint & inLength,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_ListForModes result = GALGAS_ListForModes::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_ListForModes::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_ListForModes result = GALGAS_ListForModes::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_ListForModes::dotAssign_operation (const GALGAS_ListForModes inOperand
                                               COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_ListForModes::reader_mSourceModeAtIndex (const GALGAS_uint & inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ListForModes * p = (cCollectionElement_ListForModes *) attributes.ptr () ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ListForModes) ;
    result = p->mAttribute_mSourceMode ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_ListForModes::reader_mTargetModeAtIndex (const GALGAS_uint & inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ListForModes * p = (cCollectionElement_ListForModes *) attributes.ptr () ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ListForModes) ;
    result = p->mAttribute_mTargetMode ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_ListForModes::cEnumerator_ListForModes (const GALGAS_ListForModes & inEnumeratedObject,
                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_ListForModes::current_mSourceMode (LOCATION_ARGS) const {
  const cCollectionElement_ListForModes * p = (const cCollectionElement_ListForModes *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ListForModes) ;
  return p->mAttribute_mSourceMode ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_ListForModes::current_mTargetMode (LOCATION_ARGS) const {
  const cCollectionElement_ListForModes * p = (const cCollectionElement_ListForModes *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_ListForModes) ;
  return p->mAttribute_mTargetMode ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                            @ListForModes type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ListForModes ("ListForModes",
                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ListForModes::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ListForModes ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ListForModes::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ListForModes (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_ListForModes::extractObject (const GALGAS_object & inObject,
                                                        C_Compiler * inCompiler,
                                                        const GALGAS_location & inErrorLocation
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_ListForModes result ;
  const GALGAS_ListForModes * p = (const GALGAS_ListForModes *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ListForModes *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "ListForModes", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Class for element of '@L_5F_inputConfigurationForScenario' list      *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_L_5F_inputConfigurationForScenario : public cCollectionElement {
//--- List attributes
  public : GALGAS_luint mAttribute_mInputValue ;

//--- Constructor
  public : cCollectionElement_L_5F_inputConfigurationForScenario (const GALGAS_luint & in_mInputValue
                                                                  COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_L_5F_inputConfigurationForScenario::cCollectionElement_L_5F_inputConfigurationForScenario (const GALGAS_luint & in_mInputValue
                                                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mInputValue (in_mInputValue) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_L_5F_inputConfigurationForScenario::isValid (void) const {
  return mAttribute_mInputValue.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_L_5F_inputConfigurationForScenario::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_L_5F_inputConfigurationForScenario (mAttribute_mInputValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_L_5F_inputConfigurationForScenario::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInputValue" ":" ;
  mAttribute_mInputValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_L_5F_inputConfigurationForScenario::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_L_5F_inputConfigurationForScenario * operand = (cCollectionElement_L_5F_inputConfigurationForScenario *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mInputValue.objectCompare (operand->mAttribute_mInputValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario::GALGAS_L_5F_inputConfigurationForScenario (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario::GALGAS_L_5F_inputConfigurationForScenario (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario GALGAS_L_5F_inputConfigurationForScenario::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_L_5F_inputConfigurationForScenario result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario GALGAS_L_5F_inputConfigurationForScenario::constructor_listWithValue (const GALGAS_luint & inOperand0
                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_inputConfigurationForScenario result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_L_5F_inputConfigurationForScenario::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputConfigurationForScenario::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                           const GALGAS_luint & in_mInputValue
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement_L_5F_inputConfigurationForScenario * p = NULL ;
  macroMyNew (p, cCollectionElement_L_5F_inputConfigurationForScenario (in_mInputValue COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputConfigurationForScenario::addAssign_operation (const GALGAS_luint & inOperand0
                                                                     COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_inputConfigurationForScenario (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputConfigurationForScenario::modifier_prependValue (GALGAS_luint inOperand0
                                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_inputConfigurationForScenario (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputConfigurationForScenario::modifier_popFirst (GALGAS_luint & outOperand0,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputConfigurationForScenario * p = (cCollectionElement_L_5F_inputConfigurationForScenario *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_inputConfigurationForScenario) ;
    outOperand0 = p->mAttribute_mInputValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputConfigurationForScenario::modifier_popLast (GALGAS_luint & outOperand0,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputConfigurationForScenario * p = (cCollectionElement_L_5F_inputConfigurationForScenario *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_inputConfigurationForScenario) ;
    outOperand0 = p->mAttribute_mInputValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputConfigurationForScenario::method_first (GALGAS_luint & outOperand0,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputConfigurationForScenario * p = (cCollectionElement_L_5F_inputConfigurationForScenario *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_inputConfigurationForScenario) ;
    outOperand0 = p->mAttribute_mInputValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputConfigurationForScenario::method_last (GALGAS_luint & outOperand0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputConfigurationForScenario * p = (cCollectionElement_L_5F_inputConfigurationForScenario *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_inputConfigurationForScenario) ;
    outOperand0 = p->mAttribute_mInputValue ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario GALGAS_L_5F_inputConfigurationForScenario::operator_concat (const GALGAS_L_5F_inputConfigurationForScenario & inOperand
                                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_inputConfigurationForScenario result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario GALGAS_L_5F_inputConfigurationForScenario::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                                              const GALGAS_uint & inLength,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_inputConfigurationForScenario result = GALGAS_L_5F_inputConfigurationForScenario::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario GALGAS_L_5F_inputConfigurationForScenario::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_inputConfigurationForScenario result = GALGAS_L_5F_inputConfigurationForScenario::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputConfigurationForScenario::dotAssign_operation (const GALGAS_L_5F_inputConfigurationForScenario inOperand
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_luint GALGAS_L_5F_inputConfigurationForScenario::reader_mInputValueAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputConfigurationForScenario * p = (cCollectionElement_L_5F_inputConfigurationForScenario *) attributes.ptr () ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_inputConfigurationForScenario) ;
    result = p->mAttribute_mInputValue ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_L_5F_inputConfigurationForScenario::cEnumerator_L_5F_inputConfigurationForScenario (const GALGAS_L_5F_inputConfigurationForScenario & inEnumeratedObject,
                                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_luint cEnumerator_L_5F_inputConfigurationForScenario::current_mInputValue (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_inputConfigurationForScenario * p = (const cCollectionElement_L_5F_inputConfigurationForScenario *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_inputConfigurationForScenario) ;
  return p->mAttribute_mInputValue ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                   @L_inputConfigurationForScenario type                   *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_L_5F_inputConfigurationForScenario ("L_inputConfigurationForScenario",
                                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_L_5F_inputConfigurationForScenario::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_L_5F_inputConfigurationForScenario ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_L_5F_inputConfigurationForScenario::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_L_5F_inputConfigurationForScenario (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario GALGAS_L_5F_inputConfigurationForScenario::extractObject (const GALGAS_object & inObject,
                                                                                                    C_Compiler * inCompiler,
                                                                                                    const GALGAS_location & inErrorLocation
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_inputConfigurationForScenario result ;
  const GALGAS_L_5F_inputConfigurationForScenario * p = (const GALGAS_L_5F_inputConfigurationForScenario *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_L_5F_inputConfigurationForScenario *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "L_inputConfigurationForScenario", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Class for element of '@L_5F_inputScenario' list              *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_L_5F_inputScenario : public cCollectionElement {
//--- List attributes
  public : GALGAS_L_5F_inputConfigurationForScenario mAttribute_mInputConfiguration ;

//--- Constructor
  public : cCollectionElement_L_5F_inputScenario (const GALGAS_L_5F_inputConfigurationForScenario & in_mInputConfiguration
                                                  COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_L_5F_inputScenario::cCollectionElement_L_5F_inputScenario (const GALGAS_L_5F_inputConfigurationForScenario & in_mInputConfiguration
                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mInputConfiguration (in_mInputConfiguration) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_L_5F_inputScenario::isValid (void) const {
  return mAttribute_mInputConfiguration.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_L_5F_inputScenario::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_L_5F_inputScenario (mAttribute_mInputConfiguration COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_L_5F_inputScenario::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInputConfiguration" ":" ;
  mAttribute_mInputConfiguration.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_L_5F_inputScenario::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_L_5F_inputScenario * operand = (cCollectionElement_L_5F_inputScenario *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mInputConfiguration.objectCompare (operand->mAttribute_mInputConfiguration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario::GALGAS_L_5F_inputScenario (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario::GALGAS_L_5F_inputScenario (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario GALGAS_L_5F_inputScenario::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_L_5F_inputScenario result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario GALGAS_L_5F_inputScenario::constructor_listWithValue (const GALGAS_L_5F_inputConfigurationForScenario & inOperand0
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_inputScenario result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_L_5F_inputScenario::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputScenario::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                           const GALGAS_L_5F_inputConfigurationForScenario & in_mInputConfiguration
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement_L_5F_inputScenario * p = NULL ;
  macroMyNew (p, cCollectionElement_L_5F_inputScenario (in_mInputConfiguration COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputScenario::addAssign_operation (const GALGAS_L_5F_inputConfigurationForScenario & inOperand0
                                                     COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_inputScenario (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputScenario::modifier_prependValue (GALGAS_L_5F_inputConfigurationForScenario inOperand0
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_inputScenario (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputScenario::modifier_popFirst (GALGAS_L_5F_inputConfigurationForScenario & outOperand0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputScenario * p = (cCollectionElement_L_5F_inputScenario *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_inputScenario) ;
    outOperand0 = p->mAttribute_mInputConfiguration ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputScenario::modifier_popLast (GALGAS_L_5F_inputConfigurationForScenario & outOperand0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputScenario * p = (cCollectionElement_L_5F_inputScenario *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_inputScenario) ;
    outOperand0 = p->mAttribute_mInputConfiguration ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputScenario::method_first (GALGAS_L_5F_inputConfigurationForScenario & outOperand0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputScenario * p = (cCollectionElement_L_5F_inputScenario *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_inputScenario) ;
    outOperand0 = p->mAttribute_mInputConfiguration ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputScenario::method_last (GALGAS_L_5F_inputConfigurationForScenario & outOperand0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputScenario * p = (cCollectionElement_L_5F_inputScenario *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_inputScenario) ;
    outOperand0 = p->mAttribute_mInputConfiguration ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario GALGAS_L_5F_inputScenario::operator_concat (const GALGAS_L_5F_inputScenario & inOperand
                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_inputScenario result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario GALGAS_L_5F_inputScenario::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                              const GALGAS_uint & inLength,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_inputScenario result = GALGAS_L_5F_inputScenario::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario GALGAS_L_5F_inputScenario::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_inputScenario result = GALGAS_L_5F_inputScenario::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_inputScenario::dotAssign_operation (const GALGAS_L_5F_inputScenario inOperand
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario GALGAS_L_5F_inputScenario::reader_mInputConfigurationAtIndex (const GALGAS_uint & inIndex,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_inputScenario * p = (cCollectionElement_L_5F_inputScenario *) attributes.ptr () ;
  GALGAS_L_5F_inputConfigurationForScenario result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_inputScenario) ;
    result = p->mAttribute_mInputConfiguration ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_L_5F_inputScenario::cEnumerator_L_5F_inputScenario (const GALGAS_L_5F_inputScenario & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputConfigurationForScenario cEnumerator_L_5F_inputScenario::current_mInputConfiguration (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_inputScenario * p = (const cCollectionElement_L_5F_inputScenario *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_inputScenario) ;
  return p->mAttribute_mInputConfiguration ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                           @L_inputScenario type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_L_5F_inputScenario ("L_inputScenario",
                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_L_5F_inputScenario::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_L_5F_inputScenario ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_L_5F_inputScenario::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_L_5F_inputScenario (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario GALGAS_L_5F_inputScenario::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_inputScenario result ;
  const GALGAS_L_5F_inputScenario * p = (const GALGAS_L_5F_inputScenario *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_L_5F_inputScenario *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "L_inputScenario", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Class for element of '@L_5F_scenarioList' list               *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_L_5F_scenarioList : public cCollectionElement {
//--- List attributes
  public : GALGAS_lstring mAttribute_mScenarioTitle ;
  public : GALGAS_L_5F_inputScenario mAttribute_mInputScenario ;

//--- Constructor
  public : cCollectionElement_L_5F_scenarioList (const GALGAS_lstring & in_mScenarioTitle,
                                                 const GALGAS_L_5F_inputScenario & in_mInputScenario
                                                 COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_L_5F_scenarioList::cCollectionElement_L_5F_scenarioList (const GALGAS_lstring & in_mScenarioTitle,
                                                                            const GALGAS_L_5F_inputScenario & in_mInputScenario
                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mScenarioTitle (in_mScenarioTitle),
mAttribute_mInputScenario (in_mInputScenario) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_L_5F_scenarioList::isValid (void) const {
  return mAttribute_mScenarioTitle.isValid () && mAttribute_mInputScenario.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_L_5F_scenarioList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_L_5F_scenarioList (mAttribute_mScenarioTitle, mAttribute_mInputScenario COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_L_5F_scenarioList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mScenarioTitle" ":" ;
  mAttribute_mScenarioTitle.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInputScenario" ":" ;
  mAttribute_mInputScenario.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_L_5F_scenarioList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_L_5F_scenarioList * operand = (cCollectionElement_L_5F_scenarioList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mScenarioTitle.objectCompare (operand->mAttribute_mScenarioTitle) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInputScenario.objectCompare (operand->mAttribute_mInputScenario) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_scenarioList::GALGAS_L_5F_scenarioList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_scenarioList::GALGAS_L_5F_scenarioList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_scenarioList GALGAS_L_5F_scenarioList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_L_5F_scenarioList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_scenarioList GALGAS_L_5F_scenarioList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_L_5F_inputScenario & inOperand1
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_scenarioList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_L_5F_scenarioList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_scenarioList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                          const GALGAS_lstring & in_mScenarioTitle,
                                                          const GALGAS_L_5F_inputScenario & in_mInputScenario
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_L_5F_scenarioList * p = NULL ;
  macroMyNew (p, cCollectionElement_L_5F_scenarioList (in_mScenarioTitle,
                                                          in_mInputScenario COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_scenarioList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                    const GALGAS_L_5F_inputScenario & inOperand1
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_scenarioList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_scenarioList::modifier_prependValue (GALGAS_lstring inOperand0,
                                                      GALGAS_L_5F_inputScenario inOperand1
                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_scenarioList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_scenarioList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                  GALGAS_L_5F_inputScenario & outOperand1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_scenarioList * p = (cCollectionElement_L_5F_scenarioList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_scenarioList) ;
    outOperand0 = p->mAttribute_mScenarioTitle ;
    outOperand1 = p->mAttribute_mInputScenario ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_scenarioList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                 GALGAS_L_5F_inputScenario & outOperand1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_scenarioList * p = (cCollectionElement_L_5F_scenarioList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_scenarioList) ;
    outOperand0 = p->mAttribute_mScenarioTitle ;
    outOperand1 = p->mAttribute_mInputScenario ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_scenarioList::method_first (GALGAS_lstring & outOperand0,
                                             GALGAS_L_5F_inputScenario & outOperand1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_scenarioList * p = (cCollectionElement_L_5F_scenarioList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_scenarioList) ;
    outOperand0 = p->mAttribute_mScenarioTitle ;
    outOperand1 = p->mAttribute_mInputScenario ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_scenarioList::method_last (GALGAS_lstring & outOperand0,
                                            GALGAS_L_5F_inputScenario & outOperand1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_scenarioList * p = (cCollectionElement_L_5F_scenarioList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_scenarioList) ;
    outOperand0 = p->mAttribute_mScenarioTitle ;
    outOperand1 = p->mAttribute_mInputScenario ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_scenarioList GALGAS_L_5F_scenarioList::operator_concat (const GALGAS_L_5F_scenarioList & inOperand
                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_scenarioList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_scenarioList GALGAS_L_5F_scenarioList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                            const GALGAS_uint & inLength,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_scenarioList result = GALGAS_L_5F_scenarioList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_scenarioList GALGAS_L_5F_scenarioList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_scenarioList result = GALGAS_L_5F_scenarioList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_scenarioList::dotAssign_operation (const GALGAS_L_5F_scenarioList inOperand
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_L_5F_scenarioList::reader_mScenarioTitleAtIndex (const GALGAS_uint & inIndex,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_scenarioList * p = (cCollectionElement_L_5F_scenarioList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_scenarioList) ;
    result = p->mAttribute_mScenarioTitle ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario GALGAS_L_5F_scenarioList::reader_mInputScenarioAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_scenarioList * p = (cCollectionElement_L_5F_scenarioList *) attributes.ptr () ;
  GALGAS_L_5F_inputScenario result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_scenarioList) ;
    result = p->mAttribute_mInputScenario ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_L_5F_scenarioList::cEnumerator_L_5F_scenarioList (const GALGAS_L_5F_scenarioList & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_L_5F_scenarioList::current_mScenarioTitle (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_scenarioList * p = (const cCollectionElement_L_5F_scenarioList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_scenarioList) ;
  return p->mAttribute_mScenarioTitle ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_inputScenario cEnumerator_L_5F_scenarioList::current_mInputScenario (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_scenarioList * p = (const cCollectionElement_L_5F_scenarioList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_scenarioList) ;
  return p->mAttribute_mInputScenario ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                           @L_scenarioList type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_L_5F_scenarioList ("L_scenarioList",
                                          NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_L_5F_scenarioList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_L_5F_scenarioList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_L_5F_scenarioList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_L_5F_scenarioList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_scenarioList GALGAS_L_5F_scenarioList::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler,
                                                                  const GALGAS_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_scenarioList result ;
  const GALGAS_L_5F_scenarioList * p = (const GALGAS_L_5F_scenarioList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_L_5F_scenarioList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "L_scenarioList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Class for element of '@L_5F_jobList' list                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_L_5F_jobList : public cCollectionElement {
//--- List attributes
  public : GALGAS_AC_5F_job mAttribute_mComponent ;

//--- Constructor
  public : cCollectionElement_L_5F_jobList (const GALGAS_AC_5F_job & in_mComponent
                                            COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_L_5F_jobList::cCollectionElement_L_5F_jobList (const GALGAS_AC_5F_job & in_mComponent
                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mComponent (in_mComponent) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_L_5F_jobList::isValid (void) const {
  return mAttribute_mComponent.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_L_5F_jobList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_L_5F_jobList (mAttribute_mComponent COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_L_5F_jobList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mComponent" ":" ;
  mAttribute_mComponent.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_L_5F_jobList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_L_5F_jobList * operand = (cCollectionElement_L_5F_jobList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mComponent.objectCompare (operand->mAttribute_mComponent) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_jobList::GALGAS_L_5F_jobList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_jobList::GALGAS_L_5F_jobList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_jobList GALGAS_L_5F_jobList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_L_5F_jobList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_jobList GALGAS_L_5F_jobList::constructor_listWithValue (const GALGAS_AC_5F_job & inOperand0
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_jobList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_L_5F_jobList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_jobList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                     const GALGAS_AC_5F_job & in_mComponent
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement_L_5F_jobList * p = NULL ;
  macroMyNew (p, cCollectionElement_L_5F_jobList (in_mComponent COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_jobList::addAssign_operation (const GALGAS_AC_5F_job & inOperand0
                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_jobList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_jobList::modifier_prependValue (GALGAS_AC_5F_job inOperand0
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_L_5F_jobList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_jobList::modifier_popFirst (GALGAS_AC_5F_job & outOperand0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_jobList * p = (cCollectionElement_L_5F_jobList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_jobList) ;
    outOperand0 = p->mAttribute_mComponent ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_jobList::modifier_popLast (GALGAS_AC_5F_job & outOperand0,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_jobList * p = (cCollectionElement_L_5F_jobList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_jobList) ;
    outOperand0 = p->mAttribute_mComponent ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_jobList::method_first (GALGAS_AC_5F_job & outOperand0,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_jobList * p = (cCollectionElement_L_5F_jobList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_jobList) ;
    outOperand0 = p->mAttribute_mComponent ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_jobList::method_last (GALGAS_AC_5F_job & outOperand0,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_jobList * p = (cCollectionElement_L_5F_jobList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_L_5F_jobList) ;
    outOperand0 = p->mAttribute_mComponent ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_jobList GALGAS_L_5F_jobList::operator_concat (const GALGAS_L_5F_jobList & inOperand
                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_jobList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_jobList GALGAS_L_5F_jobList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                  const GALGAS_uint & inLength,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_jobList result = GALGAS_L_5F_jobList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_jobList GALGAS_L_5F_jobList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_L_5F_jobList result = GALGAS_L_5F_jobList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_L_5F_jobList::dotAssign_operation (const GALGAS_L_5F_jobList inOperand
                                               COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_job GALGAS_L_5F_jobList::reader_mComponentAtIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_L_5F_jobList * p = (cCollectionElement_L_5F_jobList *) attributes.ptr () ;
  GALGAS_AC_5F_job result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_L_5F_jobList) ;
    result = p->mAttribute_mComponent ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_L_5F_jobList::cEnumerator_L_5F_jobList (const GALGAS_L_5F_jobList & inEnumeratedObject,
                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_job cEnumerator_L_5F_jobList::current_mComponent (LOCATION_ARGS) const {
  const cCollectionElement_L_5F_jobList * p = (const cCollectionElement_L_5F_jobList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_L_5F_jobList) ;
  return p->mAttribute_mComponent ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                              @L_jobList type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_L_5F_jobList ("L_jobList",
                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_L_5F_jobList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_L_5F_jobList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_L_5F_jobList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_L_5F_jobList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_jobList GALGAS_L_5F_jobList::extractObject (const GALGAS_object & inObject,
                                                        C_Compiler * inCompiler,
                                                        const GALGAS_location & inErrorLocation
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_L_5F_jobList result ;
  const GALGAS_L_5F_jobList * p = (const GALGAS_L_5F_jobList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_L_5F_jobList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "L_jobList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_machinesMap::cMapElement_M_5F_machinesMap (const GALGAS_lstring & inKey,
                                                            const GALGAS_uint & in_mIndex,
                                                            const GALGAS_uint & in_mInputVariableCount,
                                                            const GALGAS_uint & in_mInputAndInternalVariableCount,
                                                            const GALGAS_M_5F_variablesMap & in_mVariablesMap
                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIndex (in_mIndex),
mAttribute_mInputVariableCount (in_mInputVariableCount),
mAttribute_mInputAndInternalVariableCount (in_mInputAndInternalVariableCount),
mAttribute_mVariablesMap (in_mVariablesMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_M_5F_machinesMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () && mAttribute_mInputVariableCount.isValid () && mAttribute_mInputAndInternalVariableCount.isValid () && mAttribute_mVariablesMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_M_5F_machinesMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_M_5F_machinesMap (mAttribute_lkey, mAttribute_mIndex, mAttribute_mInputVariableCount, mAttribute_mInputAndInternalVariableCount, mAttribute_mVariablesMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_M_5F_machinesMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIndex" ":" ;
  mAttribute_mIndex.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInputVariableCount" ":" ;
  mAttribute_mInputVariableCount.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInputAndInternalVariableCount" ":" ;
  mAttribute_mInputAndInternalVariableCount.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mVariablesMap" ":" ;
  mAttribute_mVariablesMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_M_5F_machinesMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_M_5F_machinesMap * operand = (cMapElement_M_5F_machinesMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIndex.objectCompare (operand->mAttribute_mIndex) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInputVariableCount.objectCompare (operand->mAttribute_mInputVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInputAndInternalVariableCount.objectCompare (operand->mAttribute_mInputAndInternalVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mVariablesMap.objectCompare (operand->mAttribute_mVariablesMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_machinesMap::GALGAS_M_5F_machinesMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_machinesMap::GALGAS_M_5F_machinesMap (const GALGAS_M_5F_machinesMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_machinesMap & GALGAS_M_5F_machinesMap::operator = (const GALGAS_M_5F_machinesMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_machinesMap GALGAS_M_5F_machinesMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_M_5F_machinesMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_machinesMap GALGAS_M_5F_machinesMap::constructor_mapWithMapToOverride (const GALGAS_M_5F_machinesMap & inMapToOverride
                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_M_5F_machinesMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_machinesMap GALGAS_M_5F_machinesMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_machinesMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_M_5F_machinesMap::modifier_insertKey (GALGAS_lstring inKey,
                                                  GALGAS_uint inArgument0,
                                                  GALGAS_uint inArgument1,
                                                  GALGAS_uint inArgument2,
                                                  GALGAS_M_5F_variablesMap inArgument3,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_M_5F_machinesMap * p = NULL ;
  macroMyNew (p, cMapElement_M_5F_machinesMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' machine has been already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_M_5F_machinesMap_searchKey = "the '%K' machine is not defined" ;

//---------------------------------------------------------------------------*

void GALGAS_M_5F_machinesMap::method_searchKey (GALGAS_lstring inKey,
                                                GALGAS_uint & outArgument0,
                                                GALGAS_uint & outArgument1,
                                                GALGAS_uint & outArgument2,
                                                GALGAS_M_5F_variablesMap & outArgument3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  const cMapElement_M_5F_machinesMap * p = (const cMapElement_M_5F_machinesMap *) performSearch (inKey,
                                                                                                   inCompiler,
                                                                                                   kSearchErrorMessage_M_5F_machinesMap_searchKey
                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_M_5F_machinesMap) ;
    outArgument0 = p->mAttribute_mIndex ;
    outArgument1 = p->mAttribute_mInputVariableCount ;
    outArgument2 = p->mAttribute_mInputAndInternalVariableCount ;
    outArgument3 = p->mAttribute_mVariablesMap ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_machinesMap::modifier_removeKey (GALGAS_lstring inKey,
                                                  GALGAS_uint & outArgument0,
                                                  GALGAS_uint & outArgument1,
                                                  GALGAS_uint & outArgument2,
                                                  GALGAS_M_5F_variablesMap & outArgument3,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "the '%K' machine is not defined" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_M_5F_machinesMap * p = (cMapElement_M_5F_machinesMap *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_M_5F_machinesMap) ;
    outArgument0 = p->mAttribute_mIndex ;
    outArgument1 = p->mAttribute_mInputVariableCount ;
    outArgument2 = p->mAttribute_mInputAndInternalVariableCount ;
    outArgument3 = p->mAttribute_mVariablesMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_M_5F_machinesMap::reader_mIndexForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_M_5F_machinesMap * p = (const cMapElement_M_5F_machinesMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_M_5F_machinesMap) ;
    result = p->mAttribute_mIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_M_5F_machinesMap::reader_mInputVariableCountForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_M_5F_machinesMap * p = (const cMapElement_M_5F_machinesMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_M_5F_machinesMap) ;
    result = p->mAttribute_mInputVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_M_5F_machinesMap::reader_mInputAndInternalVariableCountForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_M_5F_machinesMap * p = (const cMapElement_M_5F_machinesMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_M_5F_machinesMap) ;
    result = p->mAttribute_mInputAndInternalVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap GALGAS_M_5F_machinesMap::reader_mVariablesMapForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_M_5F_machinesMap * p = (const cMapElement_M_5F_machinesMap *) attributes ;
  GALGAS_M_5F_variablesMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_M_5F_machinesMap) ;
    result = p->mAttribute_mVariablesMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_machinesMap::modifier_setMIndexForKey (GALGAS_uint inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_machinesMap * p = (cMapElement_M_5F_machinesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_M_5F_machinesMap) ;
    p->mAttribute_mIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_machinesMap::modifier_setMInputVariableCountForKey (GALGAS_uint inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_machinesMap * p = (cMapElement_M_5F_machinesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_M_5F_machinesMap) ;
    p->mAttribute_mInputVariableCount = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_machinesMap::modifier_setMInputAndInternalVariableCountForKey (GALGAS_uint inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_machinesMap * p = (cMapElement_M_5F_machinesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_M_5F_machinesMap) ;
    p->mAttribute_mInputAndInternalVariableCount = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_M_5F_machinesMap::modifier_setMVariablesMapForKey (GALGAS_M_5F_variablesMap inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_machinesMap * p = (cMapElement_M_5F_machinesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_M_5F_machinesMap) ;
    p->mAttribute_mVariablesMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_machinesMap * GALGAS_M_5F_machinesMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                  const GALGAS_string & inKey
                                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_M_5F_machinesMap * result = (cMapElement_M_5F_machinesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_M_5F_machinesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_M_5F_machinesMap * GALGAS_M_5F_machinesMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                     const GALGAS_lstring & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_M_5F_machinesMap_searchKey COMMA_THERE) ;
  cMapElement_M_5F_machinesMap * result = (cMapElement_M_5F_machinesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_M_5F_machinesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_M_5F_machinesMap::cEnumerator_M_5F_machinesMap (const GALGAS_M_5F_machinesMap & inEnumeratedObject,
                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_M_5F_machinesMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_M_5F_machinesMap::current_mIndex (LOCATION_ARGS) const {
  const cMapElement_M_5F_machinesMap * p = (const cMapElement_M_5F_machinesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_M_5F_machinesMap) ;
  return p->mAttribute_mIndex ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_M_5F_machinesMap::current_mInputVariableCount (LOCATION_ARGS) const {
  const cMapElement_M_5F_machinesMap * p = (const cMapElement_M_5F_machinesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_M_5F_machinesMap) ;
  return p->mAttribute_mInputVariableCount ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_M_5F_machinesMap::current_mInputAndInternalVariableCount (LOCATION_ARGS) const {
  const cMapElement_M_5F_machinesMap * p = (const cMapElement_M_5F_machinesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_M_5F_machinesMap) ;
  return p->mAttribute_mInputAndInternalVariableCount ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap cEnumerator_M_5F_machinesMap::current_mVariablesMap (LOCATION_ARGS) const {
  const cMapElement_M_5F_machinesMap * p = (const cMapElement_M_5F_machinesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_M_5F_machinesMap) ;
  return p->mAttribute_mVariablesMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                            @M_machinesMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_M_5F_machinesMap ("M_machinesMap",
                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_M_5F_machinesMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_M_5F_machinesMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_M_5F_machinesMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_M_5F_machinesMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_machinesMap GALGAS_M_5F_machinesMap::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler,
                                                                const GALGAS_location & inErrorLocation
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_M_5F_machinesMap result ;
  const GALGAS_M_5F_machinesMap * p = (const GALGAS_M_5F_machinesMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_M_5F_machinesMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "M_machinesMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext::GALGAS_semanticContext (void) :
mAttribute_componentsMap (),
mAttribute_machinesMap () {
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext::~ GALGAS_semanticContext (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_semanticContext::GALGAS_semanticContext (const GALGAS_semanticContext & inSource) :
//mAttribute_componentsMap (inSource.mAttribute_componentsMap),
//mAttribute_machinesMap (inSource.mAttribute_machinesMap) {
} */

//---------------------------------------------------------------------------*

GALGAS_semanticContext::GALGAS_semanticContext (const GALGAS_L_5F_jobList & inOperand0,
                                                const GALGAS_M_5F_machinesMap & inOperand1) :
mAttribute_componentsMap (inOperand0),
mAttribute_machinesMap (inOperand1) {
}

//---------------------------------------------------------------------------*

/* GALGAS_semanticContext & GALGAS_semanticContext::operator = (const GALGAS_semanticContext & inOperand) {
  mAttribute_componentsMap = inOperand.mAttribute_componentsMap ;
  mAttribute_machinesMap = inOperand.mAttribute_machinesMap ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_semanticContext::constructor_new (const GALGAS_L_5F_jobList & inOperand0,
                                                                const GALGAS_M_5F_machinesMap & inOperand1 
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticContext result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_semanticContext (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_semanticContext::objectCompare (const GALGAS_semanticContext & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_componentsMap.objectCompare (inOperand.mAttribute_componentsMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_machinesMap.objectCompare (inOperand.mAttribute_machinesMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_semanticContext::isValid (void) const {
  return mAttribute_componentsMap.isValid () && mAttribute_machinesMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_semanticContext::drop (void) {
  mAttribute_componentsMap.drop () ;
  mAttribute_machinesMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_semanticContext::description (C_String & ioString,
                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @semanticContext:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_componentsMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_machinesMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_jobList GALGAS_semanticContext::reader_componentsMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_componentsMap ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_machinesMap GALGAS_semanticContext::reader_machinesMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_machinesMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @semanticContext type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_semanticContext ("semanticContext",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_semanticContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_semanticContext ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_semanticContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_semanticContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_semanticContext::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_semanticContext result ;
  const GALGAS_semanticContext * p = (const GALGAS_semanticContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_semanticContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "semanticContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_AC_5F_boolExpression::objectCompare (const GALGAS_AC_5F_boolExpression & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression::GALGAS_AC_5F_boolExpression (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression::GALGAS_AC_5F_boolExpression (const cPtr_AC_5F_boolExpression * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_AC_5F_boolExpression) ;
}

//---------------------------------------------------------------------------*
//                Pointer class for @AC_boolExpression class                 *
//---------------------------------------------------------------------------*

cPtr_AC_5F_boolExpression::cPtr_AC_5F_boolExpression (LOCATION_ARGS) :
acPtr_class (THERE) {
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @AC_boolExpression type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_AC_5F_boolExpression ("AC_boolExpression",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_AC_5F_boolExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_AC_5F_boolExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_AC_5F_boolExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_AC_5F_boolExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_AC_5F_boolExpression::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_AC_5F_boolExpression result ;
  const GALGAS_AC_5F_boolExpression * p = (const GALGAS_AC_5F_boolExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_AC_5F_boolExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "AC_boolExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_VariableExpression::objectCompare (const GALGAS_C_5F_VariableExpression & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_boolExpression::objectCompare (inOperand) ;
  const cPtr_C_5F_VariableExpression * p = (const cPtr_C_5F_VariableExpression *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_VariableExpression) ;
  const cPtr_C_5F_VariableExpression * q = (const cPtr_C_5F_VariableExpression *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_VariableExpression) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mInputVarIndex.objectCompare (q->mAttribute_mInputVarIndex) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_VariableExpression::GALGAS_C_5F_VariableExpression (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_VariableExpression::GALGAS_C_5F_VariableExpression (const cPtr_C_5F_VariableExpression * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_VariableExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_VariableExpression GALGAS_C_5F_VariableExpression::constructor_new (const GALGAS_uint & inAttribute_mInputVarIndex
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_VariableExpression result ;
  if (inAttribute_mInputVarIndex.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_VariableExpression (inAttribute_mInputVarIndex COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_VariableExpression::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_VariableExpression * p = (cPtr_C_5F_VariableExpression *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_VariableExpression) ;
    cPtr_C_5F_VariableExpression * r = NULL ;
    macroMyNew (r, cPtr_C_5F_VariableExpression (p->mAttribute_mInputVarIndex COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_VariableExpression::reader_mInputVarIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_VariableExpression * p = (const cPtr_C_5F_VariableExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_VariableExpression) ;
    result = p->mAttribute_mInputVarIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//               Pointer class for @C_VariableExpression class               *
//---------------------------------------------------------------------------*

cPtr_C_5F_VariableExpression::cPtr_C_5F_VariableExpression (const GALGAS_uint & in_mInputVarIndex
                                                            COMMA_LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE),
mAttribute_mInputVarIndex (in_mInputVarIndex) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_VariableExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_VariableExpression ;
}

void cPtr_C_5F_VariableExpression::description (C_String & ioString,
                                                const PMSInt32 inIndentation) const {
  ioString << "[@C_VariableExpression:" ;
  mAttribute_mInputVarIndex.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @C_VariableExpression type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_VariableExpression ("C_VariableExpression",
                                                & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_VariableExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_VariableExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_VariableExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_VariableExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_VariableExpression GALGAS_C_5F_VariableExpression::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler,
                                                                              const GALGAS_location & inErrorLocation
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_VariableExpression result ;
  const GALGAS_C_5F_VariableExpression * p = (const GALGAS_C_5F_VariableExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_VariableExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_VariableExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_andExpression::objectCompare (const GALGAS_C_5F_andExpression & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_boolExpression::objectCompare (inOperand) ;
  const cPtr_C_5F_andExpression * p = (const cPtr_C_5F_andExpression *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_andExpression) ;
  const cPtr_C_5F_andExpression * q = (const cPtr_C_5F_andExpression *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_andExpression) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mLeftExpression.objectCompare (q->mAttribute_mLeftExpression) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRightExpression.objectCompare (q->mAttribute_mRightExpression) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_andExpression::GALGAS_C_5F_andExpression (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_andExpression::GALGAS_C_5F_andExpression (const cPtr_C_5F_andExpression * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_andExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_andExpression GALGAS_C_5F_andExpression::constructor_new (const GALGAS_AC_5F_boolExpression & inAttribute_mLeftExpression,
                                                                      const GALGAS_AC_5F_boolExpression & inAttribute_mRightExpression
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_andExpression result ;
  if (inAttribute_mLeftExpression.isValid () && inAttribute_mRightExpression.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_andExpression (inAttribute_mLeftExpression, inAttribute_mRightExpression COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_andExpression::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_andExpression * p = (cPtr_C_5F_andExpression *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_andExpression) ;
    cPtr_C_5F_andExpression * r = NULL ;
    macroMyNew (r, cPtr_C_5F_andExpression (p->mAttribute_mLeftExpression, p->mAttribute_mRightExpression COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_andExpression::reader_mLeftExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_andExpression * p = (const cPtr_C_5F_andExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_andExpression) ;
    result = p->mAttribute_mLeftExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_andExpression::reader_mRightExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_andExpression * p = (const cPtr_C_5F_andExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_andExpression) ;
    result = p->mAttribute_mRightExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @C_andExpression class                  *
//---------------------------------------------------------------------------*

cPtr_C_5F_andExpression::cPtr_C_5F_andExpression (const GALGAS_AC_5F_boolExpression & in_mLeftExpression,
                                                  const GALGAS_AC_5F_boolExpression & in_mRightExpression
                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE),
mAttribute_mLeftExpression (in_mLeftExpression),
mAttribute_mRightExpression (in_mRightExpression) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_andExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_andExpression ;
}

void cPtr_C_5F_andExpression::description (C_String & ioString,
                                           const PMSInt32 inIndentation) const {
  ioString << "[@C_andExpression:" ;
  mAttribute_mLeftExpression.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightExpression.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @C_andExpression type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_andExpression ("C_andExpression",
                                           & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_andExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_andExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_andExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_andExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_andExpression GALGAS_C_5F_andExpression::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_andExpression result ;
  const GALGAS_C_5F_andExpression * p = (const GALGAS_C_5F_andExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_andExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_andExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_equalExpression::objectCompare (const GALGAS_C_5F_equalExpression & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_boolExpression::objectCompare (inOperand) ;
  const cPtr_C_5F_equalExpression * p = (const cPtr_C_5F_equalExpression *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_equalExpression) ;
  const cPtr_C_5F_equalExpression * q = (const cPtr_C_5F_equalExpression *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_equalExpression) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mLeftExpression.objectCompare (q->mAttribute_mLeftExpression) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRightExpression.objectCompare (q->mAttribute_mRightExpression) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_equalExpression::GALGAS_C_5F_equalExpression (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_equalExpression::GALGAS_C_5F_equalExpression (const cPtr_C_5F_equalExpression * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_equalExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_equalExpression GALGAS_C_5F_equalExpression::constructor_new (const GALGAS_AC_5F_boolExpression & inAttribute_mLeftExpression,
                                                                          const GALGAS_AC_5F_boolExpression & inAttribute_mRightExpression
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_equalExpression result ;
  if (inAttribute_mLeftExpression.isValid () && inAttribute_mRightExpression.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_equalExpression (inAttribute_mLeftExpression, inAttribute_mRightExpression COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_equalExpression::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_equalExpression * p = (cPtr_C_5F_equalExpression *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_equalExpression) ;
    cPtr_C_5F_equalExpression * r = NULL ;
    macroMyNew (r, cPtr_C_5F_equalExpression (p->mAttribute_mLeftExpression, p->mAttribute_mRightExpression COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_equalExpression::reader_mLeftExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_equalExpression * p = (const cPtr_C_5F_equalExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_equalExpression) ;
    result = p->mAttribute_mLeftExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_equalExpression::reader_mRightExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_equalExpression * p = (const cPtr_C_5F_equalExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_equalExpression) ;
    result = p->mAttribute_mRightExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                Pointer class for @C_equalExpression class                 *
//---------------------------------------------------------------------------*

cPtr_C_5F_equalExpression::cPtr_C_5F_equalExpression (const GALGAS_AC_5F_boolExpression & in_mLeftExpression,
                                                      const GALGAS_AC_5F_boolExpression & in_mRightExpression
                                                      COMMA_LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE),
mAttribute_mLeftExpression (in_mLeftExpression),
mAttribute_mRightExpression (in_mRightExpression) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_equalExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_equalExpression ;
}

void cPtr_C_5F_equalExpression::description (C_String & ioString,
                                             const PMSInt32 inIndentation) const {
  ioString << "[@C_equalExpression:" ;
  mAttribute_mLeftExpression.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightExpression.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @C_equalExpression type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_equalExpression ("C_equalExpression",
                                             & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_equalExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_equalExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_equalExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_equalExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_equalExpression GALGAS_C_5F_equalExpression::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_equalExpression result ;
  const GALGAS_C_5F_equalExpression * p = (const GALGAS_C_5F_equalExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_equalExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_equalExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_falseExpression::objectCompare (const GALGAS_C_5F_falseExpression & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_falseExpression::GALGAS_C_5F_falseExpression (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_falseExpression::GALGAS_C_5F_falseExpression (const cPtr_C_5F_falseExpression * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_falseExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_falseExpression GALGAS_C_5F_falseExpression::constructor_new (LOCATION_ARGS) {
  GALGAS_C_5F_falseExpression result ;
  macroMyNew (result.mObjectPtr, cPtr_C_5F_falseExpression (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                Pointer class for @C_falseExpression class                 *
//---------------------------------------------------------------------------*

cPtr_C_5F_falseExpression::cPtr_C_5F_falseExpression (LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_falseExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_falseExpression ;
}

void cPtr_C_5F_falseExpression::description (C_String & ioString,
                                             const PMSInt32 /* inIndentation */) const {
  ioString << "[@C_falseExpression]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @C_falseExpression type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_falseExpression ("C_falseExpression",
                                             & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_falseExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_falseExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_falseExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_falseExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_falseExpression GALGAS_C_5F_falseExpression::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_falseExpression result ;
  const GALGAS_C_5F_falseExpression * p = (const GALGAS_C_5F_falseExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_falseExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_falseExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_impliesExpression::objectCompare (const GALGAS_C_5F_impliesExpression & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_boolExpression::objectCompare (inOperand) ;
  const cPtr_C_5F_impliesExpression * p = (const cPtr_C_5F_impliesExpression *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_impliesExpression) ;
  const cPtr_C_5F_impliesExpression * q = (const cPtr_C_5F_impliesExpression *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_impliesExpression) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mLeftExpression.objectCompare (q->mAttribute_mLeftExpression) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRightExpression.objectCompare (q->mAttribute_mRightExpression) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_impliesExpression::GALGAS_C_5F_impliesExpression (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_impliesExpression::GALGAS_C_5F_impliesExpression (const cPtr_C_5F_impliesExpression * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_impliesExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_impliesExpression GALGAS_C_5F_impliesExpression::constructor_new (const GALGAS_AC_5F_boolExpression & inAttribute_mLeftExpression,
                                                                              const GALGAS_AC_5F_boolExpression & inAttribute_mRightExpression
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_impliesExpression result ;
  if (inAttribute_mLeftExpression.isValid () && inAttribute_mRightExpression.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_impliesExpression (inAttribute_mLeftExpression, inAttribute_mRightExpression COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_impliesExpression::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_impliesExpression * p = (cPtr_C_5F_impliesExpression *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_impliesExpression) ;
    cPtr_C_5F_impliesExpression * r = NULL ;
    macroMyNew (r, cPtr_C_5F_impliesExpression (p->mAttribute_mLeftExpression, p->mAttribute_mRightExpression COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_impliesExpression::reader_mLeftExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_impliesExpression * p = (const cPtr_C_5F_impliesExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_impliesExpression) ;
    result = p->mAttribute_mLeftExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_impliesExpression::reader_mRightExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_impliesExpression * p = (const cPtr_C_5F_impliesExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_impliesExpression) ;
    result = p->mAttribute_mRightExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//               Pointer class for @C_impliesExpression class                *
//---------------------------------------------------------------------------*

cPtr_C_5F_impliesExpression::cPtr_C_5F_impliesExpression (const GALGAS_AC_5F_boolExpression & in_mLeftExpression,
                                                          const GALGAS_AC_5F_boolExpression & in_mRightExpression
                                                          COMMA_LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE),
mAttribute_mLeftExpression (in_mLeftExpression),
mAttribute_mRightExpression (in_mRightExpression) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_impliesExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_impliesExpression ;
}

void cPtr_C_5F_impliesExpression::description (C_String & ioString,
                                               const PMSInt32 inIndentation) const {
  ioString << "[@C_impliesExpression:" ;
  mAttribute_mLeftExpression.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightExpression.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @C_impliesExpression type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_impliesExpression ("C_impliesExpression",
                                               & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_impliesExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_impliesExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_impliesExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_impliesExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_impliesExpression GALGAS_C_5F_impliesExpression::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_impliesExpression result ;
  const GALGAS_C_5F_impliesExpression * p = (const GALGAS_C_5F_impliesExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_impliesExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_impliesExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_importBoolMachine::objectCompare (const GALGAS_C_5F_importBoolMachine & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_boolExpression::objectCompare (inOperand) ;
  const cPtr_C_5F_importBoolMachine * p = (const cPtr_C_5F_importBoolMachine *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_importBoolMachine) ;
  const cPtr_C_5F_importBoolMachine * q = (const cPtr_C_5F_importBoolMachine *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_importBoolMachine) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mIndexOfImportedMachine.objectCompare (q->mAttribute_mIndexOfImportedMachine) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mErrorLocation.objectCompare (q->mAttribute_mErrorLocation) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mTranslationVector.objectCompare (q->mAttribute_mTranslationVector) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_importBoolMachine::GALGAS_C_5F_importBoolMachine (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_importBoolMachine::GALGAS_C_5F_importBoolMachine (const cPtr_C_5F_importBoolMachine * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_importBoolMachine) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_importBoolMachine GALGAS_C_5F_importBoolMachine::constructor_new (const GALGAS_uint & inAttribute_mIndexOfImportedMachine,
                                                                              const GALGAS_location & inAttribute_mErrorLocation,
                                                                              const GALGAS_L_5F_translationVector & inAttribute_mTranslationVector
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_importBoolMachine result ;
  if (inAttribute_mIndexOfImportedMachine.isValid () && inAttribute_mErrorLocation.isValid () && inAttribute_mTranslationVector.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_importBoolMachine (inAttribute_mIndexOfImportedMachine, inAttribute_mErrorLocation, inAttribute_mTranslationVector COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_importBoolMachine::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_importBoolMachine * p = (cPtr_C_5F_importBoolMachine *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_importBoolMachine) ;
    cPtr_C_5F_importBoolMachine * r = NULL ;
    macroMyNew (r, cPtr_C_5F_importBoolMachine (p->mAttribute_mIndexOfImportedMachine, p->mAttribute_mErrorLocation, p->mAttribute_mTranslationVector COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_importBoolMachine::reader_mIndexOfImportedMachine (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_importBoolMachine * p = (const cPtr_C_5F_importBoolMachine *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_importBoolMachine) ;
    result = p->mAttribute_mIndexOfImportedMachine ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_C_5F_importBoolMachine::reader_mErrorLocation (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_importBoolMachine * p = (const cPtr_C_5F_importBoolMachine *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_importBoolMachine) ;
    result = p->mAttribute_mErrorLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector GALGAS_C_5F_importBoolMachine::reader_mTranslationVector (UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_translationVector result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_importBoolMachine * p = (const cPtr_C_5F_importBoolMachine *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_importBoolMachine) ;
    result = p->mAttribute_mTranslationVector ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//               Pointer class for @C_importBoolMachine class                *
//---------------------------------------------------------------------------*

cPtr_C_5F_importBoolMachine::cPtr_C_5F_importBoolMachine (const GALGAS_uint & in_mIndexOfImportedMachine,
                                                          const GALGAS_location & in_mErrorLocation,
                                                          const GALGAS_L_5F_translationVector & in_mTranslationVector
                                                          COMMA_LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE),
mAttribute_mIndexOfImportedMachine (in_mIndexOfImportedMachine),
mAttribute_mErrorLocation (in_mErrorLocation),
mAttribute_mTranslationVector (in_mTranslationVector) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_importBoolMachine::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_importBoolMachine ;
}

void cPtr_C_5F_importBoolMachine::description (C_String & ioString,
                                               const PMSInt32 inIndentation) const {
  ioString << "[@C_importBoolMachine:" ;
  mAttribute_mIndexOfImportedMachine.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mErrorLocation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTranslationVector.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @C_importBoolMachine type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_importBoolMachine ("C_importBoolMachine",
                                               & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_importBoolMachine::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_importBoolMachine ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_importBoolMachine::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_importBoolMachine (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_importBoolMachine GALGAS_C_5F_importBoolMachine::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_importBoolMachine result ;
  const GALGAS_C_5F_importBoolMachine * p = (const GALGAS_C_5F_importBoolMachine *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_importBoolMachine *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_importBoolMachine", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_notExpression::objectCompare (const GALGAS_C_5F_notExpression & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_boolExpression::objectCompare (inOperand) ;
  const cPtr_C_5F_notExpression * p = (const cPtr_C_5F_notExpression *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_notExpression) ;
  const cPtr_C_5F_notExpression * q = (const cPtr_C_5F_notExpression *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_notExpression) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mExpression.objectCompare (q->mAttribute_mExpression) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_notExpression::GALGAS_C_5F_notExpression (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_notExpression::GALGAS_C_5F_notExpression (const cPtr_C_5F_notExpression * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_notExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_notExpression GALGAS_C_5F_notExpression::constructor_new (const GALGAS_AC_5F_boolExpression & inAttribute_mExpression
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_notExpression result ;
  if (inAttribute_mExpression.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_notExpression (inAttribute_mExpression COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_notExpression::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_notExpression * p = (cPtr_C_5F_notExpression *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_notExpression) ;
    cPtr_C_5F_notExpression * r = NULL ;
    macroMyNew (r, cPtr_C_5F_notExpression (p->mAttribute_mExpression COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_notExpression::reader_mExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_notExpression * p = (const cPtr_C_5F_notExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_notExpression) ;
    result = p->mAttribute_mExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @C_notExpression class                  *
//---------------------------------------------------------------------------*

cPtr_C_5F_notExpression::cPtr_C_5F_notExpression (const GALGAS_AC_5F_boolExpression & in_mExpression
                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE),
mAttribute_mExpression (in_mExpression) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_notExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_notExpression ;
}

void cPtr_C_5F_notExpression::description (C_String & ioString,
                                           const PMSInt32 inIndentation) const {
  ioString << "[@C_notExpression:" ;
  mAttribute_mExpression.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @C_notExpression type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_notExpression ("C_notExpression",
                                           & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_notExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_notExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_notExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_notExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_notExpression GALGAS_C_5F_notExpression::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_notExpression result ;
  const GALGAS_C_5F_notExpression * p = (const GALGAS_C_5F_notExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_notExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_notExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_orExpression::objectCompare (const GALGAS_C_5F_orExpression & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_boolExpression::objectCompare (inOperand) ;
  const cPtr_C_5F_orExpression * p = (const cPtr_C_5F_orExpression *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_orExpression) ;
  const cPtr_C_5F_orExpression * q = (const cPtr_C_5F_orExpression *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_orExpression) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mLeftExpression.objectCompare (q->mAttribute_mLeftExpression) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRightExpression.objectCompare (q->mAttribute_mRightExpression) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_orExpression::GALGAS_C_5F_orExpression (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_orExpression::GALGAS_C_5F_orExpression (const cPtr_C_5F_orExpression * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_orExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_orExpression GALGAS_C_5F_orExpression::constructor_new (const GALGAS_AC_5F_boolExpression & inAttribute_mLeftExpression,
                                                                    const GALGAS_AC_5F_boolExpression & inAttribute_mRightExpression
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_orExpression result ;
  if (inAttribute_mLeftExpression.isValid () && inAttribute_mRightExpression.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_orExpression (inAttribute_mLeftExpression, inAttribute_mRightExpression COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_orExpression::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_orExpression * p = (cPtr_C_5F_orExpression *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_orExpression) ;
    cPtr_C_5F_orExpression * r = NULL ;
    macroMyNew (r, cPtr_C_5F_orExpression (p->mAttribute_mLeftExpression, p->mAttribute_mRightExpression COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_orExpression::reader_mLeftExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_orExpression * p = (const cPtr_C_5F_orExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_orExpression) ;
    result = p->mAttribute_mLeftExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_orExpression::reader_mRightExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_orExpression * p = (const cPtr_C_5F_orExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_orExpression) ;
    result = p->mAttribute_mRightExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                  Pointer class for @C_orExpression class                  *
//---------------------------------------------------------------------------*

cPtr_C_5F_orExpression::cPtr_C_5F_orExpression (const GALGAS_AC_5F_boolExpression & in_mLeftExpression,
                                                const GALGAS_AC_5F_boolExpression & in_mRightExpression
                                                COMMA_LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE),
mAttribute_mLeftExpression (in_mLeftExpression),
mAttribute_mRightExpression (in_mRightExpression) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_orExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_orExpression ;
}

void cPtr_C_5F_orExpression::description (C_String & ioString,
                                          const PMSInt32 inIndentation) const {
  ioString << "[@C_orExpression:" ;
  mAttribute_mLeftExpression.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightExpression.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @C_orExpression type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_orExpression ("C_orExpression",
                                          & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_orExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_orExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_orExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_orExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_orExpression GALGAS_C_5F_orExpression::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler,
                                                                  const GALGAS_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_orExpression result ;
  const GALGAS_C_5F_orExpression * p = (const GALGAS_C_5F_orExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_orExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_orExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_trueExpression::objectCompare (const GALGAS_C_5F_trueExpression & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_trueExpression::GALGAS_C_5F_trueExpression (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_trueExpression::GALGAS_C_5F_trueExpression (const cPtr_C_5F_trueExpression * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_trueExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_trueExpression GALGAS_C_5F_trueExpression::constructor_new (LOCATION_ARGS) {
  GALGAS_C_5F_trueExpression result ;
  macroMyNew (result.mObjectPtr, cPtr_C_5F_trueExpression (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @C_trueExpression class                 *
//---------------------------------------------------------------------------*

cPtr_C_5F_trueExpression::cPtr_C_5F_trueExpression (LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_trueExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_trueExpression ;
}

void cPtr_C_5F_trueExpression::description (C_String & ioString,
                                            const PMSInt32 /* inIndentation */) const {
  ioString << "[@C_trueExpression]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @C_trueExpression type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_trueExpression ("C_trueExpression",
                                            & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_trueExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_trueExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_trueExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_trueExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_trueExpression GALGAS_C_5F_trueExpression::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_trueExpression result ;
  const GALGAS_C_5F_trueExpression * p = (const GALGAS_C_5F_trueExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_trueExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_trueExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_xorExpression::objectCompare (const GALGAS_C_5F_xorExpression & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_boolExpression::objectCompare (inOperand) ;
  const cPtr_C_5F_xorExpression * p = (const cPtr_C_5F_xorExpression *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_xorExpression) ;
  const cPtr_C_5F_xorExpression * q = (const cPtr_C_5F_xorExpression *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_xorExpression) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mLeftExpression.objectCompare (q->mAttribute_mLeftExpression) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRightExpression.objectCompare (q->mAttribute_mRightExpression) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_xorExpression::GALGAS_C_5F_xorExpression (void) :
GALGAS_AC_5F_boolExpression () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_xorExpression::GALGAS_C_5F_xorExpression (const cPtr_C_5F_xorExpression * inSourcePtr) :
GALGAS_AC_5F_boolExpression (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_xorExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_xorExpression GALGAS_C_5F_xorExpression::constructor_new (const GALGAS_AC_5F_boolExpression & inAttribute_mLeftExpression,
                                                                      const GALGAS_AC_5F_boolExpression & inAttribute_mRightExpression
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_xorExpression result ;
  if (inAttribute_mLeftExpression.isValid () && inAttribute_mRightExpression.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_xorExpression (inAttribute_mLeftExpression, inAttribute_mRightExpression COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_xorExpression::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_xorExpression * p = (cPtr_C_5F_xorExpression *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_xorExpression) ;
    cPtr_C_5F_xorExpression * r = NULL ;
    macroMyNew (r, cPtr_C_5F_xorExpression (p->mAttribute_mLeftExpression, p->mAttribute_mRightExpression COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_xorExpression::reader_mLeftExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_xorExpression * p = (const cPtr_C_5F_xorExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_xorExpression) ;
    result = p->mAttribute_mLeftExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_xorExpression::reader_mRightExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_xorExpression * p = (const cPtr_C_5F_xorExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_xorExpression) ;
    result = p->mAttribute_mRightExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @C_xorExpression class                  *
//---------------------------------------------------------------------------*

cPtr_C_5F_xorExpression::cPtr_C_5F_xorExpression (const GALGAS_AC_5F_boolExpression & in_mLeftExpression,
                                                  const GALGAS_AC_5F_boolExpression & in_mRightExpression
                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_boolExpression (THERE),
mAttribute_mLeftExpression (in_mLeftExpression),
mAttribute_mRightExpression (in_mRightExpression) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_xorExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_xorExpression ;
}

void cPtr_C_5F_xorExpression::description (C_String & ioString,
                                           const PMSInt32 inIndentation) const {
  ioString << "[@C_xorExpression:" ;
  mAttribute_mLeftExpression.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightExpression.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @C_xorExpression type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_xorExpression ("C_xorExpression",
                                           & kTypeDescriptor_GALGAS_AC_5F_boolExpression) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_xorExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_xorExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_xorExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_xorExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_xorExpression GALGAS_C_5F_xorExpression::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_xorExpression result ;
  const GALGAS_C_5F_xorExpression * p = (const GALGAS_C_5F_xorExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_xorExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_xorExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_AC_5F_job::objectCompare (const GALGAS_AC_5F_job & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_AC_5F_job::GALGAS_AC_5F_job (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_job::GALGAS_AC_5F_job (const cPtr_AC_5F_job * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_AC_5F_job) ;
}

//---------------------------------------------------------------------------*
//                      Pointer class for @AC_job class                      *
//---------------------------------------------------------------------------*

cPtr_AC_5F_job::cPtr_AC_5F_job (LOCATION_ARGS) :
acPtr_class (THERE) {
}



//---------------------------------------------------------------------------*
//                                                                           *
//                               @AC_job type                                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_AC_5F_job ("AC_job",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_AC_5F_job::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_AC_5F_job ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_AC_5F_job::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_AC_5F_job (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_job GALGAS_AC_5F_job::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler,
                                                  const GALGAS_location & inErrorLocation
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_AC_5F_job result ;
  const GALGAS_AC_5F_job * p = (const GALGAS_AC_5F_job *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_AC_5F_job *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "AC_job", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_machineCheck::objectCompare (const GALGAS_C_5F_machineCheck & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_machineCheck * p = (const cPtr_C_5F_machineCheck *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_machineCheck) ;
  const cPtr_C_5F_machineCheck * q = (const cPtr_C_5F_machineCheck *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_machineCheck) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex.objectCompare (q->mAttribute_mMachineIndex) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mCheckMachineIsBoolean.objectCompare (q->mAttribute_mCheckMachineIsBoolean) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_machineCheck::GALGAS_C_5F_machineCheck (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineCheck::GALGAS_C_5F_machineCheck (const cPtr_C_5F_machineCheck * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_machineCheck) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineCheck GALGAS_C_5F_machineCheck::constructor_new (const GALGAS_uint & inAttribute_mMachineIndex,
                                                                    const GALGAS_bool & inAttribute_mCheckMachineIsBoolean
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineCheck result ;
  if (inAttribute_mMachineIndex.isValid () && inAttribute_mCheckMachineIsBoolean.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_machineCheck (inAttribute_mMachineIndex, inAttribute_mCheckMachineIsBoolean COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_machineCheck::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_machineCheck * p = (cPtr_C_5F_machineCheck *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_machineCheck) ;
    cPtr_C_5F_machineCheck * r = NULL ;
    macroMyNew (r, cPtr_C_5F_machineCheck (p->mAttribute_mMachineIndex, p->mAttribute_mCheckMachineIsBoolean COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineCheck::reader_mMachineIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineCheck * p = (const cPtr_C_5F_machineCheck *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineCheck) ;
    result = p->mAttribute_mMachineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_C_5F_machineCheck::reader_mCheckMachineIsBoolean (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineCheck * p = (const cPtr_C_5F_machineCheck *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineCheck) ;
    result = p->mAttribute_mCheckMachineIsBoolean ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                  Pointer class for @C_machineCheck class                  *
//---------------------------------------------------------------------------*

cPtr_C_5F_machineCheck::cPtr_C_5F_machineCheck (const GALGAS_uint & in_mMachineIndex,
                                                const GALGAS_bool & in_mCheckMachineIsBoolean
                                                COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineIndex (in_mMachineIndex),
mAttribute_mCheckMachineIsBoolean (in_mCheckMachineIsBoolean) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_machineCheck::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineCheck ;
}

void cPtr_C_5F_machineCheck::description (C_String & ioString,
                                          const PMSInt32 inIndentation) const {
  ioString << "[@C_machineCheck:" ;
  mAttribute_mMachineIndex.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mCheckMachineIsBoolean.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @C_machineCheck type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_machineCheck ("C_machineCheck",
                                          & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_machineCheck::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineCheck ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_machineCheck::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_machineCheck (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineCheck GALGAS_C_5F_machineCheck::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler,
                                                                  const GALGAS_location & inErrorLocation
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineCheck result ;
  const GALGAS_C_5F_machineCheck * p = (const GALGAS_C_5F_machineCheck *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_machineCheck *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_machineCheck", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_machineCheckIdentical::objectCompare (const GALGAS_C_5F_machineCheckIdentical & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_machineCheckIdentical * p = (const cPtr_C_5F_machineCheckIdentical *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_machineCheckIdentical) ;
  const cPtr_C_5F_machineCheckIdentical * q = (const cPtr_C_5F_machineCheckIdentical *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_machineCheckIdentical) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex_31_.objectCompare (q->mAttribute_mMachineIndex_31_) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex_32_.objectCompare (q->mAttribute_mMachineIndex_32_) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_machineCheckIdentical::GALGAS_C_5F_machineCheckIdentical (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineCheckIdentical::GALGAS_C_5F_machineCheckIdentical (const cPtr_C_5F_machineCheckIdentical * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_machineCheckIdentical) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineCheckIdentical GALGAS_C_5F_machineCheckIdentical::constructor_new (const GALGAS_uint & inAttribute_mMachineIndex_31_,
                                                                                      const GALGAS_uint & inAttribute_mMachineIndex_32_
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineCheckIdentical result ;
  if (inAttribute_mMachineIndex_31_.isValid () && inAttribute_mMachineIndex_32_.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_machineCheckIdentical (inAttribute_mMachineIndex_31_, inAttribute_mMachineIndex_32_ COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_machineCheckIdentical::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_machineCheckIdentical * p = (cPtr_C_5F_machineCheckIdentical *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_machineCheckIdentical) ;
    cPtr_C_5F_machineCheckIdentical * r = NULL ;
    macroMyNew (r, cPtr_C_5F_machineCheckIdentical (p->mAttribute_mMachineIndex_31_, p->mAttribute_mMachineIndex_32_ COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineCheckIdentical::reader_mMachineIndex_31_ (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineCheckIdentical * p = (const cPtr_C_5F_machineCheckIdentical *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineCheckIdentical) ;
    result = p->mAttribute_mMachineIndex_31_ ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineCheckIdentical::reader_mMachineIndex_32_ (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineCheckIdentical * p = (const cPtr_C_5F_machineCheckIdentical *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineCheckIdentical) ;
    result = p->mAttribute_mMachineIndex_32_ ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//             Pointer class for @C_machineCheckIdentical class              *
//---------------------------------------------------------------------------*

cPtr_C_5F_machineCheckIdentical::cPtr_C_5F_machineCheckIdentical (const GALGAS_uint & in_mMachineIndex_31_,
                                                                  const GALGAS_uint & in_mMachineIndex_32_
                                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineIndex_31_ (in_mMachineIndex_31_),
mAttribute_mMachineIndex_32_ (in_mMachineIndex_32_) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_machineCheckIdentical::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineCheckIdentical ;
}

void cPtr_C_5F_machineCheckIdentical::description (C_String & ioString,
                                                   const PMSInt32 inIndentation) const {
  ioString << "[@C_machineCheckIdentical:" ;
  mAttribute_mMachineIndex_31_.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMachineIndex_32_.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @C_machineCheckIdentical type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_machineCheckIdentical ("C_machineCheckIdentical",
                                                   & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_machineCheckIdentical::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineCheckIdentical ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_machineCheckIdentical::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_machineCheckIdentical (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineCheckIdentical GALGAS_C_5F_machineCheckIdentical::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineCheckIdentical result ;
  const GALGAS_C_5F_machineCheckIdentical * p = (const GALGAS_C_5F_machineCheckIdentical *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_machineCheckIdentical *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_machineCheckIdentical", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_machineComponent::objectCompare (const GALGAS_C_5F_machineComponent & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_machineComponent * p = (const cPtr_C_5F_machineComponent *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_machineComponent) ;
  const cPtr_C_5F_machineComponent * q = (const cPtr_C_5F_machineComponent *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_machineComponent) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineName.objectCompare (q->mAttribute_mMachineName) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex.objectCompare (q->mAttribute_mMachineIndex) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInputVariableCount.objectCompare (q->mAttribute_mInputVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInputAndInternalVariableCount.objectCompare (q->mAttribute_mInputAndInternalVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mVariablesMap.objectCompare (q->mAttribute_mVariablesMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mDefinition.objectCompare (q->mAttribute_mDefinition) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_machineComponent::GALGAS_C_5F_machineComponent (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineComponent::GALGAS_C_5F_machineComponent (const cPtr_C_5F_machineComponent * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_machineComponent) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineComponent GALGAS_C_5F_machineComponent::constructor_new (const GALGAS_lstring & inAttribute_mMachineName,
                                                                            const GALGAS_uint & inAttribute_mMachineIndex,
                                                                            const GALGAS_uint & inAttribute_mInputVariableCount,
                                                                            const GALGAS_uint & inAttribute_mInputAndInternalVariableCount,
                                                                            const GALGAS_M_5F_variablesMap & inAttribute_mVariablesMap,
                                                                            const GALGAS_AC_5F_machineDefinition & inAttribute_mDefinition
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineComponent result ;
  if (inAttribute_mMachineName.isValid () && inAttribute_mMachineIndex.isValid () && inAttribute_mInputVariableCount.isValid () && inAttribute_mInputAndInternalVariableCount.isValid () && inAttribute_mVariablesMap.isValid () && inAttribute_mDefinition.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_machineComponent (inAttribute_mMachineName, inAttribute_mMachineIndex, inAttribute_mInputVariableCount, inAttribute_mInputAndInternalVariableCount, inAttribute_mVariablesMap, inAttribute_mDefinition COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_machineComponent::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_machineComponent * p = (cPtr_C_5F_machineComponent *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_machineComponent) ;
    cPtr_C_5F_machineComponent * r = NULL ;
    macroMyNew (r, cPtr_C_5F_machineComponent (p->mAttribute_mMachineName, p->mAttribute_mMachineIndex, p->mAttribute_mInputVariableCount, p->mAttribute_mInputAndInternalVariableCount, p->mAttribute_mVariablesMap, p->mAttribute_mDefinition COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_C_5F_machineComponent::reader_mMachineName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineComponent * p = (const cPtr_C_5F_machineComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineComponent) ;
    result = p->mAttribute_mMachineName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineComponent::reader_mMachineIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineComponent * p = (const cPtr_C_5F_machineComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineComponent) ;
    result = p->mAttribute_mMachineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineComponent::reader_mInputVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineComponent * p = (const cPtr_C_5F_machineComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineComponent) ;
    result = p->mAttribute_mInputVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineComponent::reader_mInputAndInternalVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineComponent * p = (const cPtr_C_5F_machineComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineComponent) ;
    result = p->mAttribute_mInputAndInternalVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap GALGAS_C_5F_machineComponent::reader_mVariablesMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_variablesMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineComponent * p = (const cPtr_C_5F_machineComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineComponent) ;
    result = p->mAttribute_mVariablesMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_machineComponent::reader_mDefinition (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineComponent * p = (const cPtr_C_5F_machineComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineComponent) ;
    result = p->mAttribute_mDefinition ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                Pointer class for @C_machineComponent class                *
//---------------------------------------------------------------------------*

cPtr_C_5F_machineComponent::cPtr_C_5F_machineComponent (const GALGAS_lstring & in_mMachineName,
                                                        const GALGAS_uint & in_mMachineIndex,
                                                        const GALGAS_uint & in_mInputVariableCount,
                                                        const GALGAS_uint & in_mInputAndInternalVariableCount,
                                                        const GALGAS_M_5F_variablesMap & in_mVariablesMap,
                                                        const GALGAS_AC_5F_machineDefinition & in_mDefinition
                                                        COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineName (in_mMachineName),
mAttribute_mMachineIndex (in_mMachineIndex),
mAttribute_mInputVariableCount (in_mInputVariableCount),
mAttribute_mInputAndInternalVariableCount (in_mInputAndInternalVariableCount),
mAttribute_mVariablesMap (in_mVariablesMap),
mAttribute_mDefinition (in_mDefinition) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_machineComponent::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineComponent ;
}

void cPtr_C_5F_machineComponent::description (C_String & ioString,
                                              const PMSInt32 inIndentation) const {
  ioString << "[@C_machineComponent:" ;
  mAttribute_mMachineName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMachineIndex.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInputVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInputAndInternalVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mVariablesMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mDefinition.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @C_machineComponent type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_machineComponent ("C_machineComponent",
                                              & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_machineComponent::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineComponent ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_machineComponent::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_machineComponent (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineComponent GALGAS_C_5F_machineComponent::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler,
                                                                          const GALGAS_location & inErrorLocation
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineComponent result ;
  const GALGAS_C_5F_machineComponent * p = (const GALGAS_C_5F_machineComponent *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_machineComponent *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_machineComponent", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_machineDefinedByAdditiveModalComp::objectCompare (const GALGAS_C_5F_machineDefinedByAdditiveModalComp & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_machineDefinedByAdditiveModalComp * p = (const cPtr_C_5F_machineDefinedByAdditiveModalComp *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
  const cPtr_C_5F_machineDefinedByAdditiveModalComp * q = (const cPtr_C_5F_machineDefinedByAdditiveModalComp *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineName.objectCompare (q->mAttribute_mMachineName) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex.objectCompare (q->mAttribute_mMachineIndex) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInputVariableCount.objectCompare (q->mAttribute_mInputVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInputAndInternalVariableCount.objectCompare (q->mAttribute_mInputAndInternalVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mVariablesMap.objectCompare (q->mAttribute_mVariablesMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mModeMap.objectCompare (q->mAttribute_mModeMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInclusionList.objectCompare (q->mAttribute_mInclusionList) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDefinedByAdditiveModalComp::GALGAS_C_5F_machineDefinedByAdditiveModalComp (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDefinedByAdditiveModalComp::GALGAS_C_5F_machineDefinedByAdditiveModalComp (const cPtr_C_5F_machineDefinedByAdditiveModalComp * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDefinedByAdditiveModalComp GALGAS_C_5F_machineDefinedByAdditiveModalComp::constructor_new (const GALGAS_lstring & inAttribute_mMachineName,
                                                                                                              const GALGAS_uint & inAttribute_mMachineIndex,
                                                                                                              const GALGAS_uint & inAttribute_mInputVariableCount,
                                                                                                              const GALGAS_uint & inAttribute_mInputAndInternalVariableCount,
                                                                                                              const GALGAS_M_5F_variablesMap & inAttribute_mVariablesMap,
                                                                                                              const GALGAS_M_5F_modesMap & inAttribute_mModeMap,
                                                                                                              const GALGAS_ListForModes & inAttribute_mInclusionList
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDefinedByAdditiveModalComp result ;
  if (inAttribute_mMachineName.isValid () && inAttribute_mMachineIndex.isValid () && inAttribute_mInputVariableCount.isValid () && inAttribute_mInputAndInternalVariableCount.isValid () && inAttribute_mVariablesMap.isValid () && inAttribute_mModeMap.isValid () && inAttribute_mInclusionList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_machineDefinedByAdditiveModalComp (inAttribute_mMachineName, inAttribute_mMachineIndex, inAttribute_mInputVariableCount, inAttribute_mInputAndInternalVariableCount, inAttribute_mVariablesMap, inAttribute_mModeMap, inAttribute_mInclusionList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_machineDefinedByAdditiveModalComp::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_machineDefinedByAdditiveModalComp * p = (cPtr_C_5F_machineDefinedByAdditiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
    cPtr_C_5F_machineDefinedByAdditiveModalComp * r = NULL ;
    macroMyNew (r, cPtr_C_5F_machineDefinedByAdditiveModalComp (p->mAttribute_mMachineName, p->mAttribute_mMachineIndex, p->mAttribute_mInputVariableCount, p->mAttribute_mInputAndInternalVariableCount, p->mAttribute_mVariablesMap, p->mAttribute_mModeMap, p->mAttribute_mInclusionList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_C_5F_machineDefinedByAdditiveModalComp::reader_mMachineName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedByAdditiveModalComp * p = (const cPtr_C_5F_machineDefinedByAdditiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
    result = p->mAttribute_mMachineName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDefinedByAdditiveModalComp::reader_mMachineIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedByAdditiveModalComp * p = (const cPtr_C_5F_machineDefinedByAdditiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
    result = p->mAttribute_mMachineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDefinedByAdditiveModalComp::reader_mInputVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedByAdditiveModalComp * p = (const cPtr_C_5F_machineDefinedByAdditiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
    result = p->mAttribute_mInputVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDefinedByAdditiveModalComp::reader_mInputAndInternalVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedByAdditiveModalComp * p = (const cPtr_C_5F_machineDefinedByAdditiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
    result = p->mAttribute_mInputAndInternalVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap GALGAS_C_5F_machineDefinedByAdditiveModalComp::reader_mVariablesMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_variablesMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedByAdditiveModalComp * p = (const cPtr_C_5F_machineDefinedByAdditiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
    result = p->mAttribute_mVariablesMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap GALGAS_C_5F_machineDefinedByAdditiveModalComp::reader_mModeMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_modesMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedByAdditiveModalComp * p = (const cPtr_C_5F_machineDefinedByAdditiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
    result = p->mAttribute_mModeMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_C_5F_machineDefinedByAdditiveModalComp::reader_mInclusionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_ListForModes result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedByAdditiveModalComp * p = (const cPtr_C_5F_machineDefinedByAdditiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedByAdditiveModalComp) ;
    result = p->mAttribute_mInclusionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//       Pointer class for @C_machineDefinedByAdditiveModalComp class        *
//---------------------------------------------------------------------------*

cPtr_C_5F_machineDefinedByAdditiveModalComp::cPtr_C_5F_machineDefinedByAdditiveModalComp (const GALGAS_lstring & in_mMachineName,
                                                                                          const GALGAS_uint & in_mMachineIndex,
                                                                                          const GALGAS_uint & in_mInputVariableCount,
                                                                                          const GALGAS_uint & in_mInputAndInternalVariableCount,
                                                                                          const GALGAS_M_5F_variablesMap & in_mVariablesMap,
                                                                                          const GALGAS_M_5F_modesMap & in_mModeMap,
                                                                                          const GALGAS_ListForModes & in_mInclusionList
                                                                                          COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineName (in_mMachineName),
mAttribute_mMachineIndex (in_mMachineIndex),
mAttribute_mInputVariableCount (in_mInputVariableCount),
mAttribute_mInputAndInternalVariableCount (in_mInputAndInternalVariableCount),
mAttribute_mVariablesMap (in_mVariablesMap),
mAttribute_mModeMap (in_mModeMap),
mAttribute_mInclusionList (in_mInclusionList) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_machineDefinedByAdditiveModalComp::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDefinedByAdditiveModalComp ;
}

void cPtr_C_5F_machineDefinedByAdditiveModalComp::description (C_String & ioString,
                                                               const PMSInt32 inIndentation) const {
  ioString << "[@C_machineDefinedByAdditiveModalComp:" ;
  mAttribute_mMachineName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMachineIndex.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInputVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInputAndInternalVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mVariablesMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mModeMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInclusionList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @C_machineDefinedByAdditiveModalComp type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_machineDefinedByAdditiveModalComp ("C_machineDefinedByAdditiveModalComp",
                                                               & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_machineDefinedByAdditiveModalComp::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDefinedByAdditiveModalComp ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_machineDefinedByAdditiveModalComp::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_machineDefinedByAdditiveModalComp (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDefinedByAdditiveModalComp GALGAS_C_5F_machineDefinedByAdditiveModalComp::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler,
                                                                                                            const GALGAS_location & inErrorLocation
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDefinedByAdditiveModalComp result ;
  const GALGAS_C_5F_machineDefinedByAdditiveModalComp * p = (const GALGAS_C_5F_machineDefinedByAdditiveModalComp *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_machineDefinedByAdditiveModalComp *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_machineDefinedByAdditiveModalComp", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_machineDefinedBySubstractiveModalComp::objectCompare (const GALGAS_C_5F_machineDefinedBySubstractiveModalComp & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_machineDefinedBySubstractiveModalComp * p = (const cPtr_C_5F_machineDefinedBySubstractiveModalComp *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
  const cPtr_C_5F_machineDefinedBySubstractiveModalComp * q = (const cPtr_C_5F_machineDefinedBySubstractiveModalComp *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineName.objectCompare (q->mAttribute_mMachineName) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex.objectCompare (q->mAttribute_mMachineIndex) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInputVariableCount.objectCompare (q->mAttribute_mInputVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInputAndInternalVariableCount.objectCompare (q->mAttribute_mInputAndInternalVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mVariablesMap.objectCompare (q->mAttribute_mVariablesMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mModeMap.objectCompare (q->mAttribute_mModeMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mExclusionList.objectCompare (q->mAttribute_mExclusionList) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDefinedBySubstractiveModalComp::GALGAS_C_5F_machineDefinedBySubstractiveModalComp (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDefinedBySubstractiveModalComp::GALGAS_C_5F_machineDefinedBySubstractiveModalComp (const cPtr_C_5F_machineDefinedBySubstractiveModalComp * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDefinedBySubstractiveModalComp GALGAS_C_5F_machineDefinedBySubstractiveModalComp::constructor_new (const GALGAS_lstring & inAttribute_mMachineName,
                                                                                                                      const GALGAS_uint & inAttribute_mMachineIndex,
                                                                                                                      const GALGAS_uint & inAttribute_mInputVariableCount,
                                                                                                                      const GALGAS_uint & inAttribute_mInputAndInternalVariableCount,
                                                                                                                      const GALGAS_M_5F_variablesMap & inAttribute_mVariablesMap,
                                                                                                                      const GALGAS_M_5F_modesMap & inAttribute_mModeMap,
                                                                                                                      const GALGAS_ListForModes & inAttribute_mExclusionList
                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDefinedBySubstractiveModalComp result ;
  if (inAttribute_mMachineName.isValid () && inAttribute_mMachineIndex.isValid () && inAttribute_mInputVariableCount.isValid () && inAttribute_mInputAndInternalVariableCount.isValid () && inAttribute_mVariablesMap.isValid () && inAttribute_mModeMap.isValid () && inAttribute_mExclusionList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_machineDefinedBySubstractiveModalComp (inAttribute_mMachineName, inAttribute_mMachineIndex, inAttribute_mInputVariableCount, inAttribute_mInputAndInternalVariableCount, inAttribute_mVariablesMap, inAttribute_mModeMap, inAttribute_mExclusionList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_machineDefinedBySubstractiveModalComp::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_machineDefinedBySubstractiveModalComp * p = (cPtr_C_5F_machineDefinedBySubstractiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
    cPtr_C_5F_machineDefinedBySubstractiveModalComp * r = NULL ;
    macroMyNew (r, cPtr_C_5F_machineDefinedBySubstractiveModalComp (p->mAttribute_mMachineName, p->mAttribute_mMachineIndex, p->mAttribute_mInputVariableCount, p->mAttribute_mInputAndInternalVariableCount, p->mAttribute_mVariablesMap, p->mAttribute_mModeMap, p->mAttribute_mExclusionList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_C_5F_machineDefinedBySubstractiveModalComp::reader_mMachineName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedBySubstractiveModalComp * p = (const cPtr_C_5F_machineDefinedBySubstractiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
    result = p->mAttribute_mMachineName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDefinedBySubstractiveModalComp::reader_mMachineIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedBySubstractiveModalComp * p = (const cPtr_C_5F_machineDefinedBySubstractiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
    result = p->mAttribute_mMachineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDefinedBySubstractiveModalComp::reader_mInputVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedBySubstractiveModalComp * p = (const cPtr_C_5F_machineDefinedBySubstractiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
    result = p->mAttribute_mInputVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDefinedBySubstractiveModalComp::reader_mInputAndInternalVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedBySubstractiveModalComp * p = (const cPtr_C_5F_machineDefinedBySubstractiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
    result = p->mAttribute_mInputAndInternalVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap GALGAS_C_5F_machineDefinedBySubstractiveModalComp::reader_mVariablesMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_variablesMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedBySubstractiveModalComp * p = (const cPtr_C_5F_machineDefinedBySubstractiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
    result = p->mAttribute_mVariablesMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap GALGAS_C_5F_machineDefinedBySubstractiveModalComp::reader_mModeMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_modesMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedBySubstractiveModalComp * p = (const cPtr_C_5F_machineDefinedBySubstractiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
    result = p->mAttribute_mModeMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_C_5F_machineDefinedBySubstractiveModalComp::reader_mExclusionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_ListForModes result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDefinedBySubstractiveModalComp * p = (const cPtr_C_5F_machineDefinedBySubstractiveModalComp *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDefinedBySubstractiveModalComp) ;
    result = p->mAttribute_mExclusionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//     Pointer class for @C_machineDefinedBySubstractiveModalComp class      *
//---------------------------------------------------------------------------*

cPtr_C_5F_machineDefinedBySubstractiveModalComp::cPtr_C_5F_machineDefinedBySubstractiveModalComp (const GALGAS_lstring & in_mMachineName,
                                                                                                  const GALGAS_uint & in_mMachineIndex,
                                                                                                  const GALGAS_uint & in_mInputVariableCount,
                                                                                                  const GALGAS_uint & in_mInputAndInternalVariableCount,
                                                                                                  const GALGAS_M_5F_variablesMap & in_mVariablesMap,
                                                                                                  const GALGAS_M_5F_modesMap & in_mModeMap,
                                                                                                  const GALGAS_ListForModes & in_mExclusionList
                                                                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineName (in_mMachineName),
mAttribute_mMachineIndex (in_mMachineIndex),
mAttribute_mInputVariableCount (in_mInputVariableCount),
mAttribute_mInputAndInternalVariableCount (in_mInputAndInternalVariableCount),
mAttribute_mVariablesMap (in_mVariablesMap),
mAttribute_mModeMap (in_mModeMap),
mAttribute_mExclusionList (in_mExclusionList) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_machineDefinedBySubstractiveModalComp::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDefinedBySubstractiveModalComp ;
}

void cPtr_C_5F_machineDefinedBySubstractiveModalComp::description (C_String & ioString,
                                                                   const PMSInt32 inIndentation) const {
  ioString << "[@C_machineDefinedBySubstractiveModalComp:" ;
  mAttribute_mMachineName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMachineIndex.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInputVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInputAndInternalVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mVariablesMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mModeMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mExclusionList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//               @C_machineDefinedBySubstractiveModalComp type               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_machineDefinedBySubstractiveModalComp ("C_machineDefinedBySubstractiveModalComp",
                                                                   & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_machineDefinedBySubstractiveModalComp::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDefinedBySubstractiveModalComp ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_machineDefinedBySubstractiveModalComp::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_machineDefinedBySubstractiveModalComp (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDefinedBySubstractiveModalComp GALGAS_C_5F_machineDefinedBySubstractiveModalComp::extractObject (const GALGAS_object & inObject,
                                                                                                                    C_Compiler * inCompiler,
                                                                                                                    const GALGAS_location & inErrorLocation
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDefinedBySubstractiveModalComp result ;
  const GALGAS_C_5F_machineDefinedBySubstractiveModalComp * p = (const GALGAS_C_5F_machineDefinedBySubstractiveModalComp *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_machineDefinedBySubstractiveModalComp *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_machineDefinedBySubstractiveModalComp", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_machineDisplayInitialStates::objectCompare (const GALGAS_C_5F_machineDisplayInitialStates & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_machineDisplayInitialStates * p = (const cPtr_C_5F_machineDisplayInitialStates *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_machineDisplayInitialStates) ;
  const cPtr_C_5F_machineDisplayInitialStates * q = (const cPtr_C_5F_machineDisplayInitialStates *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_machineDisplayInitialStates) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex.objectCompare (q->mAttribute_mMachineIndex) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayInitialStates::GALGAS_C_5F_machineDisplayInitialStates (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayInitialStates::GALGAS_C_5F_machineDisplayInitialStates (const cPtr_C_5F_machineDisplayInitialStates * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_machineDisplayInitialStates) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayInitialStates GALGAS_C_5F_machineDisplayInitialStates::constructor_new (const GALGAS_uint & inAttribute_mMachineIndex
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDisplayInitialStates result ;
  if (inAttribute_mMachineIndex.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_machineDisplayInitialStates (inAttribute_mMachineIndex COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_machineDisplayInitialStates::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_machineDisplayInitialStates * p = (cPtr_C_5F_machineDisplayInitialStates *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_machineDisplayInitialStates) ;
    cPtr_C_5F_machineDisplayInitialStates * r = NULL ;
    macroMyNew (r, cPtr_C_5F_machineDisplayInitialStates (p->mAttribute_mMachineIndex COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDisplayInitialStates::reader_mMachineIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDisplayInitialStates * p = (const cPtr_C_5F_machineDisplayInitialStates *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDisplayInitialStates) ;
    result = p->mAttribute_mMachineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//          Pointer class for @C_machineDisplayInitialStates class           *
//---------------------------------------------------------------------------*

cPtr_C_5F_machineDisplayInitialStates::cPtr_C_5F_machineDisplayInitialStates (const GALGAS_uint & in_mMachineIndex
                                                                              COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineIndex (in_mMachineIndex) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_machineDisplayInitialStates::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDisplayInitialStates ;
}

void cPtr_C_5F_machineDisplayInitialStates::description (C_String & ioString,
                                                         const PMSInt32 inIndentation) const {
  ioString << "[@C_machineDisplayInitialStates:" ;
  mAttribute_mMachineIndex.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @C_machineDisplayInitialStates type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_machineDisplayInitialStates ("C_machineDisplayInitialStates",
                                                         & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_machineDisplayInitialStates::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDisplayInitialStates ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_machineDisplayInitialStates::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_machineDisplayInitialStates (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayInitialStates GALGAS_C_5F_machineDisplayInitialStates::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler,
                                                                                                const GALGAS_location & inErrorLocation
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDisplayInitialStates result ;
  const GALGAS_C_5F_machineDisplayInitialStates * p = (const GALGAS_C_5F_machineDisplayInitialStates *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_machineDisplayInitialStates *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_machineDisplayInitialStates", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_machineDisplayStates::objectCompare (const GALGAS_C_5F_machineDisplayStates & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_machineDisplayStates * p = (const cPtr_C_5F_machineDisplayStates *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_machineDisplayStates) ;
  const cPtr_C_5F_machineDisplayStates * q = (const cPtr_C_5F_machineDisplayStates *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_machineDisplayStates) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex.objectCompare (q->mAttribute_mMachineIndex) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayStates::GALGAS_C_5F_machineDisplayStates (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayStates::GALGAS_C_5F_machineDisplayStates (const cPtr_C_5F_machineDisplayStates * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_machineDisplayStates) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayStates GALGAS_C_5F_machineDisplayStates::constructor_new (const GALGAS_uint & inAttribute_mMachineIndex
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDisplayStates result ;
  if (inAttribute_mMachineIndex.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_machineDisplayStates (inAttribute_mMachineIndex COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_machineDisplayStates::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_machineDisplayStates * p = (cPtr_C_5F_machineDisplayStates *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_machineDisplayStates) ;
    cPtr_C_5F_machineDisplayStates * r = NULL ;
    macroMyNew (r, cPtr_C_5F_machineDisplayStates (p->mAttribute_mMachineIndex COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDisplayStates::reader_mMachineIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDisplayStates * p = (const cPtr_C_5F_machineDisplayStates *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDisplayStates) ;
    result = p->mAttribute_mMachineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//              Pointer class for @C_machineDisplayStates class              *
//---------------------------------------------------------------------------*

cPtr_C_5F_machineDisplayStates::cPtr_C_5F_machineDisplayStates (const GALGAS_uint & in_mMachineIndex
                                                                COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineIndex (in_mMachineIndex) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_machineDisplayStates::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDisplayStates ;
}

void cPtr_C_5F_machineDisplayStates::description (C_String & ioString,
                                                  const PMSInt32 inIndentation) const {
  ioString << "[@C_machineDisplayStates:" ;
  mAttribute_mMachineIndex.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @C_machineDisplayStates type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_machineDisplayStates ("C_machineDisplayStates",
                                                  & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_machineDisplayStates::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDisplayStates ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_machineDisplayStates::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_machineDisplayStates (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayStates GALGAS_C_5F_machineDisplayStates::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDisplayStates result ;
  const GALGAS_C_5F_machineDisplayStates * p = (const GALGAS_C_5F_machineDisplayStates *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_machineDisplayStates *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_machineDisplayStates", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_machineDisplayTerminalStates::objectCompare (const GALGAS_C_5F_machineDisplayTerminalStates & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_machineDisplayTerminalStates * p = (const cPtr_C_5F_machineDisplayTerminalStates *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_machineDisplayTerminalStates) ;
  const cPtr_C_5F_machineDisplayTerminalStates * q = (const cPtr_C_5F_machineDisplayTerminalStates *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_machineDisplayTerminalStates) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex.objectCompare (q->mAttribute_mMachineIndex) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayTerminalStates::GALGAS_C_5F_machineDisplayTerminalStates (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayTerminalStates::GALGAS_C_5F_machineDisplayTerminalStates (const cPtr_C_5F_machineDisplayTerminalStates * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_machineDisplayTerminalStates) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayTerminalStates GALGAS_C_5F_machineDisplayTerminalStates::constructor_new (const GALGAS_uint & inAttribute_mMachineIndex
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDisplayTerminalStates result ;
  if (inAttribute_mMachineIndex.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_machineDisplayTerminalStates (inAttribute_mMachineIndex COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_machineDisplayTerminalStates::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_machineDisplayTerminalStates * p = (cPtr_C_5F_machineDisplayTerminalStates *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_machineDisplayTerminalStates) ;
    cPtr_C_5F_machineDisplayTerminalStates * r = NULL ;
    macroMyNew (r, cPtr_C_5F_machineDisplayTerminalStates (p->mAttribute_mMachineIndex COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDisplayTerminalStates::reader_mMachineIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDisplayTerminalStates * p = (const cPtr_C_5F_machineDisplayTerminalStates *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDisplayTerminalStates) ;
    result = p->mAttribute_mMachineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//          Pointer class for @C_machineDisplayTerminalStates class          *
//---------------------------------------------------------------------------*

cPtr_C_5F_machineDisplayTerminalStates::cPtr_C_5F_machineDisplayTerminalStates (const GALGAS_uint & in_mMachineIndex
                                                                                COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineIndex (in_mMachineIndex) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_machineDisplayTerminalStates::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDisplayTerminalStates ;
}

void cPtr_C_5F_machineDisplayTerminalStates::description (C_String & ioString,
                                                          const PMSInt32 inIndentation) const {
  ioString << "[@C_machineDisplayTerminalStates:" ;
  mAttribute_mMachineIndex.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @C_machineDisplayTerminalStates type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_machineDisplayTerminalStates ("C_machineDisplayTerminalStates",
                                                          & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_machineDisplayTerminalStates::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDisplayTerminalStates ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_machineDisplayTerminalStates::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_machineDisplayTerminalStates (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayTerminalStates GALGAS_C_5F_machineDisplayTerminalStates::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler,
                                                                                                  const GALGAS_location & inErrorLocation
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDisplayTerminalStates result ;
  const GALGAS_C_5F_machineDisplayTerminalStates * p = (const GALGAS_C_5F_machineDisplayTerminalStates *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_machineDisplayTerminalStates *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_machineDisplayTerminalStates", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_machineDisplayTransitions::objectCompare (const GALGAS_C_5F_machineDisplayTransitions & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_machineDisplayTransitions * p = (const cPtr_C_5F_machineDisplayTransitions *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_machineDisplayTransitions) ;
  const cPtr_C_5F_machineDisplayTransitions * q = (const cPtr_C_5F_machineDisplayTransitions *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_machineDisplayTransitions) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex.objectCompare (q->mAttribute_mMachineIndex) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayTransitions::GALGAS_C_5F_machineDisplayTransitions (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayTransitions::GALGAS_C_5F_machineDisplayTransitions (const cPtr_C_5F_machineDisplayTransitions * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_machineDisplayTransitions) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayTransitions GALGAS_C_5F_machineDisplayTransitions::constructor_new (const GALGAS_uint & inAttribute_mMachineIndex
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDisplayTransitions result ;
  if (inAttribute_mMachineIndex.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_machineDisplayTransitions (inAttribute_mMachineIndex COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_machineDisplayTransitions::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_machineDisplayTransitions * p = (cPtr_C_5F_machineDisplayTransitions *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_machineDisplayTransitions) ;
    cPtr_C_5F_machineDisplayTransitions * r = NULL ;
    macroMyNew (r, cPtr_C_5F_machineDisplayTransitions (p->mAttribute_mMachineIndex COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_machineDisplayTransitions::reader_mMachineIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_machineDisplayTransitions * p = (const cPtr_C_5F_machineDisplayTransitions *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_machineDisplayTransitions) ;
    result = p->mAttribute_mMachineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//           Pointer class for @C_machineDisplayTransitions class            *
//---------------------------------------------------------------------------*

cPtr_C_5F_machineDisplayTransitions::cPtr_C_5F_machineDisplayTransitions (const GALGAS_uint & in_mMachineIndex
                                                                          COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineIndex (in_mMachineIndex) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_machineDisplayTransitions::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDisplayTransitions ;
}

void cPtr_C_5F_machineDisplayTransitions::description (C_String & ioString,
                                                       const PMSInt32 inIndentation) const {
  ioString << "[@C_machineDisplayTransitions:" ;
  mAttribute_mMachineIndex.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @C_machineDisplayTransitions type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_machineDisplayTransitions ("C_machineDisplayTransitions",
                                                       & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_machineDisplayTransitions::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_machineDisplayTransitions ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_machineDisplayTransitions::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_machineDisplayTransitions (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_machineDisplayTransitions GALGAS_C_5F_machineDisplayTransitions::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_machineDisplayTransitions result ;
  const GALGAS_C_5F_machineDisplayTransitions * p = (const GALGAS_C_5F_machineDisplayTransitions *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_machineDisplayTransitions *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_machineDisplayTransitions", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_scenarioComponent::objectCompare (const GALGAS_C_5F_scenarioComponent & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_C_5F_scenarioComponent * p = (const cPtr_C_5F_scenarioComponent *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_scenarioComponent) ;
  const cPtr_C_5F_scenarioComponent * q = (const cPtr_C_5F_scenarioComponent *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_scenarioComponent) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mMachineIndex.objectCompare (q->mAttribute_mMachineIndex) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInputVariableCount.objectCompare (q->mAttribute_mInputVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInputAndInternalVariableCount.objectCompare (q->mAttribute_mInputAndInternalVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mVariablesMap.objectCompare (q->mAttribute_mVariablesMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mScenarioList.objectCompare (q->mAttribute_mScenarioList) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_scenarioComponent::GALGAS_C_5F_scenarioComponent (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_scenarioComponent::GALGAS_C_5F_scenarioComponent (const cPtr_C_5F_scenarioComponent * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_scenarioComponent) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_scenarioComponent GALGAS_C_5F_scenarioComponent::constructor_new (const GALGAS_uint & inAttribute_mMachineIndex,
                                                                              const GALGAS_uint & inAttribute_mInputVariableCount,
                                                                              const GALGAS_uint & inAttribute_mInputAndInternalVariableCount,
                                                                              const GALGAS_M_5F_variablesMap & inAttribute_mVariablesMap,
                                                                              const GALGAS_L_5F_scenarioList & inAttribute_mScenarioList
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_scenarioComponent result ;
  if (inAttribute_mMachineIndex.isValid () && inAttribute_mInputVariableCount.isValid () && inAttribute_mInputAndInternalVariableCount.isValid () && inAttribute_mVariablesMap.isValid () && inAttribute_mScenarioList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_scenarioComponent (inAttribute_mMachineIndex, inAttribute_mInputVariableCount, inAttribute_mInputAndInternalVariableCount, inAttribute_mVariablesMap, inAttribute_mScenarioList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_scenarioComponent::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_scenarioComponent * p = (cPtr_C_5F_scenarioComponent *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_scenarioComponent) ;
    cPtr_C_5F_scenarioComponent * r = NULL ;
    macroMyNew (r, cPtr_C_5F_scenarioComponent (p->mAttribute_mMachineIndex, p->mAttribute_mInputVariableCount, p->mAttribute_mInputAndInternalVariableCount, p->mAttribute_mVariablesMap, p->mAttribute_mScenarioList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_scenarioComponent::reader_mMachineIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_scenarioComponent * p = (const cPtr_C_5F_scenarioComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_scenarioComponent) ;
    result = p->mAttribute_mMachineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_scenarioComponent::reader_mInputVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_scenarioComponent * p = (const cPtr_C_5F_scenarioComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_scenarioComponent) ;
    result = p->mAttribute_mInputVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_scenarioComponent::reader_mInputAndInternalVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_scenarioComponent * p = (const cPtr_C_5F_scenarioComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_scenarioComponent) ;
    result = p->mAttribute_mInputAndInternalVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_variablesMap GALGAS_C_5F_scenarioComponent::reader_mVariablesMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_variablesMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_scenarioComponent * p = (const cPtr_C_5F_scenarioComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_scenarioComponent) ;
    result = p->mAttribute_mVariablesMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_scenarioList GALGAS_C_5F_scenarioComponent::reader_mScenarioList (UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_scenarioList result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_scenarioComponent * p = (const cPtr_C_5F_scenarioComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_scenarioComponent) ;
    result = p->mAttribute_mScenarioList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//               Pointer class for @C_scenarioComponent class                *
//---------------------------------------------------------------------------*

cPtr_C_5F_scenarioComponent::cPtr_C_5F_scenarioComponent (const GALGAS_uint & in_mMachineIndex,
                                                          const GALGAS_uint & in_mInputVariableCount,
                                                          const GALGAS_uint & in_mInputAndInternalVariableCount,
                                                          const GALGAS_M_5F_variablesMap & in_mVariablesMap,
                                                          const GALGAS_L_5F_scenarioList & in_mScenarioList
                                                          COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mMachineIndex (in_mMachineIndex),
mAttribute_mInputVariableCount (in_mInputVariableCount),
mAttribute_mInputAndInternalVariableCount (in_mInputAndInternalVariableCount),
mAttribute_mVariablesMap (in_mVariablesMap),
mAttribute_mScenarioList (in_mScenarioList) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_scenarioComponent::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_scenarioComponent ;
}

void cPtr_C_5F_scenarioComponent::description (C_String & ioString,
                                               const PMSInt32 inIndentation) const {
  ioString << "[@C_scenarioComponent:" ;
  mAttribute_mMachineIndex.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInputVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInputAndInternalVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mVariablesMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mScenarioList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @C_scenarioComponent type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_scenarioComponent ("C_scenarioComponent",
                                               & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_scenarioComponent::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_scenarioComponent ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_scenarioComponent::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_scenarioComponent (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_scenarioComponent GALGAS_C_5F_scenarioComponent::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_scenarioComponent result ;
  const GALGAS_C_5F_scenarioComponent * p = (const GALGAS_C_5F_scenarioComponent *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_scenarioComponent *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_scenarioComponent", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_typeDisplayBDDstats::objectCompare (const GALGAS_typeDisplayBDDstats & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_typeDisplayBDDstats::GALGAS_typeDisplayBDDstats (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_typeDisplayBDDstats::GALGAS_typeDisplayBDDstats (const cPtr_typeDisplayBDDstats * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_typeDisplayBDDstats) ;
}

//---------------------------------------------------------------------------*

GALGAS_typeDisplayBDDstats GALGAS_typeDisplayBDDstats::constructor_new (LOCATION_ARGS) {
  GALGAS_typeDisplayBDDstats result ;
  macroMyNew (result.mObjectPtr, cPtr_typeDisplayBDDstats (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//               Pointer class for @typeDisplayBDDstats class                *
//---------------------------------------------------------------------------*

cPtr_typeDisplayBDDstats::cPtr_typeDisplayBDDstats (LOCATION_ARGS) :
cPtr_AC_5F_job (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_typeDisplayBDDstats::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeDisplayBDDstats ;
}

void cPtr_typeDisplayBDDstats::description (C_String & ioString,
                                            const PMSInt32 /* inIndentation */) const {
  ioString << "[@typeDisplayBDDstats]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @typeDisplayBDDstats type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeDisplayBDDstats ("typeDisplayBDDstats",
                                            & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeDisplayBDDstats::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeDisplayBDDstats ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeDisplayBDDstats::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeDisplayBDDstats (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_typeDisplayBDDstats GALGAS_typeDisplayBDDstats::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_typeDisplayBDDstats result ;
  const GALGAS_typeDisplayBDDstats * p = (const GALGAS_typeDisplayBDDstats *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeDisplayBDDstats *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "typeDisplayBDDstats", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_typeResizeMap::objectCompare (const GALGAS_typeResizeMap & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_typeResizeMap * p = (const cPtr_typeResizeMap *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_typeResizeMap) ;
  const cPtr_typeResizeMap * q = (const cPtr_typeResizeMap *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_typeResizeMap) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mNewSize.objectCompare (q->mAttribute_mNewSize) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_typeResizeMap::GALGAS_typeResizeMap (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_typeResizeMap::GALGAS_typeResizeMap (const cPtr_typeResizeMap * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_typeResizeMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_typeResizeMap GALGAS_typeResizeMap::constructor_new (const GALGAS_luint & inAttribute_mNewSize
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_typeResizeMap result ;
  if (inAttribute_mNewSize.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_typeResizeMap (inAttribute_mNewSize COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_typeResizeMap::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_typeResizeMap * p = (cPtr_typeResizeMap *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_typeResizeMap) ;
    cPtr_typeResizeMap * r = NULL ;
    macroMyNew (r, cPtr_typeResizeMap (p->mAttribute_mNewSize COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_luint GALGAS_typeResizeMap::reader_mNewSize (UNUSED_LOCATION_ARGS) const {
  GALGAS_luint result ;
  if (NULL != mObjectPtr) {
    const cPtr_typeResizeMap * p = (const cPtr_typeResizeMap *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_typeResizeMap) ;
    result = p->mAttribute_mNewSize ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                  Pointer class for @typeResizeMap class                   *
//---------------------------------------------------------------------------*

cPtr_typeResizeMap::cPtr_typeResizeMap (const GALGAS_luint & in_mNewSize
                                        COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mNewSize (in_mNewSize) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_typeResizeMap::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeResizeMap ;
}

void cPtr_typeResizeMap::description (C_String & ioString,
                                      const PMSInt32 inIndentation) const {
  ioString << "[@typeResizeMap:" ;
  mAttribute_mNewSize.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                            @typeResizeMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeResizeMap ("typeResizeMap",
                                      & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeResizeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeResizeMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeResizeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeResizeMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_typeResizeMap GALGAS_typeResizeMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler,
                                                          const GALGAS_location & inErrorLocation
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_typeResizeMap result ;
  const GALGAS_typeResizeMap * p = (const GALGAS_typeResizeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeResizeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "typeResizeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_typeResize_5F_AND_5F_cache::objectCompare (const GALGAS_typeResize_5F_AND_5F_cache & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_typeResize_5F_AND_5F_cache * p = (const cPtr_typeResize_5F_AND_5F_cache *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_typeResize_5F_AND_5F_cache) ;
  const cPtr_typeResize_5F_AND_5F_cache * q = (const cPtr_typeResize_5F_AND_5F_cache *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_typeResize_5F_AND_5F_cache) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mNewSize.objectCompare (q->mAttribute_mNewSize) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_typeResize_5F_AND_5F_cache::GALGAS_typeResize_5F_AND_5F_cache (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_typeResize_5F_AND_5F_cache::GALGAS_typeResize_5F_AND_5F_cache (const cPtr_typeResize_5F_AND_5F_cache * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_typeResize_5F_AND_5F_cache) ;
}

//---------------------------------------------------------------------------*

GALGAS_typeResize_5F_AND_5F_cache GALGAS_typeResize_5F_AND_5F_cache::constructor_new (const GALGAS_luint & inAttribute_mNewSize
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_typeResize_5F_AND_5F_cache result ;
  if (inAttribute_mNewSize.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_typeResize_5F_AND_5F_cache (inAttribute_mNewSize COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_typeResize_5F_AND_5F_cache::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_typeResize_5F_AND_5F_cache * p = (cPtr_typeResize_5F_AND_5F_cache *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_typeResize_5F_AND_5F_cache) ;
    cPtr_typeResize_5F_AND_5F_cache * r = NULL ;
    macroMyNew (r, cPtr_typeResize_5F_AND_5F_cache (p->mAttribute_mNewSize COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_luint GALGAS_typeResize_5F_AND_5F_cache::reader_mNewSize (UNUSED_LOCATION_ARGS) const {
  GALGAS_luint result ;
  if (NULL != mObjectPtr) {
    const cPtr_typeResize_5F_AND_5F_cache * p = (const cPtr_typeResize_5F_AND_5F_cache *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_typeResize_5F_AND_5F_cache) ;
    result = p->mAttribute_mNewSize ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//               Pointer class for @typeResize_AND_cache class               *
//---------------------------------------------------------------------------*

cPtr_typeResize_5F_AND_5F_cache::cPtr_typeResize_5F_AND_5F_cache (const GALGAS_luint & in_mNewSize
                                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mNewSize (in_mNewSize) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_typeResize_5F_AND_5F_cache::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeResize_5F_AND_5F_cache ;
}

void cPtr_typeResize_5F_AND_5F_cache::description (C_String & ioString,
                                                   const PMSInt32 inIndentation) const {
  ioString << "[@typeResize_AND_cache:" ;
  mAttribute_mNewSize.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @typeResize_AND_cache type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeResize_5F_AND_5F_cache ("typeResize_AND_cache",
                                                   & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeResize_5F_AND_5F_cache::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeResize_5F_AND_5F_cache ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeResize_5F_AND_5F_cache::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeResize_5F_AND_5F_cache (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_typeResize_5F_AND_5F_cache GALGAS_typeResize_5F_AND_5F_cache::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_typeResize_5F_AND_5F_cache result ;
  const GALGAS_typeResize_5F_AND_5F_cache * p = (const GALGAS_typeResize_5F_AND_5F_cache *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeResize_5F_AND_5F_cache *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "typeResize_AND_cache", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_typeResize_5F_ITE_5F_cache::objectCompare (const GALGAS_typeResize_5F_ITE_5F_cache & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_job::objectCompare (inOperand) ;
  const cPtr_typeResize_5F_ITE_5F_cache * p = (const cPtr_typeResize_5F_ITE_5F_cache *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_typeResize_5F_ITE_5F_cache) ;
  const cPtr_typeResize_5F_ITE_5F_cache * q = (const cPtr_typeResize_5F_ITE_5F_cache *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_typeResize_5F_ITE_5F_cache) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mNewSize.objectCompare (q->mAttribute_mNewSize) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_typeResize_5F_ITE_5F_cache::GALGAS_typeResize_5F_ITE_5F_cache (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_typeResize_5F_ITE_5F_cache::GALGAS_typeResize_5F_ITE_5F_cache (const cPtr_typeResize_5F_ITE_5F_cache * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_typeResize_5F_ITE_5F_cache) ;
}

//---------------------------------------------------------------------------*

GALGAS_typeResize_5F_ITE_5F_cache GALGAS_typeResize_5F_ITE_5F_cache::constructor_new (const GALGAS_luint & inAttribute_mNewSize
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_typeResize_5F_ITE_5F_cache result ;
  if (inAttribute_mNewSize.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_typeResize_5F_ITE_5F_cache (inAttribute_mNewSize COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_typeResize_5F_ITE_5F_cache::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_typeResize_5F_ITE_5F_cache * p = (cPtr_typeResize_5F_ITE_5F_cache *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_typeResize_5F_ITE_5F_cache) ;
    cPtr_typeResize_5F_ITE_5F_cache * r = NULL ;
    macroMyNew (r, cPtr_typeResize_5F_ITE_5F_cache (p->mAttribute_mNewSize COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_luint GALGAS_typeResize_5F_ITE_5F_cache::reader_mNewSize (UNUSED_LOCATION_ARGS) const {
  GALGAS_luint result ;
  if (NULL != mObjectPtr) {
    const cPtr_typeResize_5F_ITE_5F_cache * p = (const cPtr_typeResize_5F_ITE_5F_cache *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_typeResize_5F_ITE_5F_cache) ;
    result = p->mAttribute_mNewSize ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//               Pointer class for @typeResize_ITE_cache class               *
//---------------------------------------------------------------------------*

cPtr_typeResize_5F_ITE_5F_cache::cPtr_typeResize_5F_ITE_5F_cache (const GALGAS_luint & in_mNewSize
                                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_job (THERE),
mAttribute_mNewSize (in_mNewSize) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_typeResize_5F_ITE_5F_cache::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeResize_5F_ITE_5F_cache ;
}

void cPtr_typeResize_5F_ITE_5F_cache::description (C_String & ioString,
                                                   const PMSInt32 inIndentation) const {
  ioString << "[@typeResize_ITE_cache:" ;
  mAttribute_mNewSize.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @typeResize_ITE_cache type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeResize_5F_ITE_5F_cache ("typeResize_ITE_cache",
                                                   & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeResize_5F_ITE_5F_cache::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeResize_5F_ITE_5F_cache ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeResize_5F_ITE_5F_cache::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeResize_5F_ITE_5F_cache (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_typeResize_5F_ITE_5F_cache GALGAS_typeResize_5F_ITE_5F_cache::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_typeResize_5F_ITE_5F_cache result ;
  const GALGAS_typeResize_5F_ITE_5F_cache * p = (const GALGAS_typeResize_5F_ITE_5F_cache *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeResize_5F_ITE_5F_cache *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "typeResize_ITE_cache", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_typeUse_5F_AND::objectCompare (const GALGAS_typeUse_5F_AND & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_AND::GALGAS_typeUse_5F_AND (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_AND::GALGAS_typeUse_5F_AND (const cPtr_typeUse_5F_AND * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_typeUse_5F_AND) ;
}

//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_AND GALGAS_typeUse_5F_AND::constructor_new (LOCATION_ARGS) {
  GALGAS_typeUse_5F_AND result ;
  macroMyNew (result.mObjectPtr, cPtr_typeUse_5F_AND (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                   Pointer class for @typeUse_AND class                    *
//---------------------------------------------------------------------------*

cPtr_typeUse_5F_AND::cPtr_typeUse_5F_AND (LOCATION_ARGS) :
cPtr_AC_5F_job (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_typeUse_5F_AND::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeUse_5F_AND ;
}

void cPtr_typeUse_5F_AND::description (C_String & ioString,
                                       const PMSInt32 /* inIndentation */) const {
  ioString << "[@typeUse_AND]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @typeUse_AND type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeUse_5F_AND ("typeUse_AND",
                                       & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeUse_5F_AND::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeUse_5F_AND ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeUse_5F_AND::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeUse_5F_AND (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_AND GALGAS_typeUse_5F_AND::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_typeUse_5F_AND result ;
  const GALGAS_typeUse_5F_AND * p = (const GALGAS_typeUse_5F_AND *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeUse_5F_AND *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "typeUse_AND", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_typeUse_5F_AND_5F_ITE::objectCompare (const GALGAS_typeUse_5F_AND_5F_ITE & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_AND_5F_ITE::GALGAS_typeUse_5F_AND_5F_ITE (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_AND_5F_ITE::GALGAS_typeUse_5F_AND_5F_ITE (const cPtr_typeUse_5F_AND_5F_ITE * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_typeUse_5F_AND_5F_ITE) ;
}

//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_AND_5F_ITE GALGAS_typeUse_5F_AND_5F_ITE::constructor_new (LOCATION_ARGS) {
  GALGAS_typeUse_5F_AND_5F_ITE result ;
  macroMyNew (result.mObjectPtr, cPtr_typeUse_5F_AND_5F_ITE (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @typeUse_AND_ITE class                  *
//---------------------------------------------------------------------------*

cPtr_typeUse_5F_AND_5F_ITE::cPtr_typeUse_5F_AND_5F_ITE (LOCATION_ARGS) :
cPtr_AC_5F_job (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_typeUse_5F_AND_5F_ITE::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeUse_5F_AND_5F_ITE ;
}

void cPtr_typeUse_5F_AND_5F_ITE::description (C_String & ioString,
                                              const PMSInt32 /* inIndentation */) const {
  ioString << "[@typeUse_AND_ITE]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @typeUse_AND_ITE type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeUse_5F_AND_5F_ITE ("typeUse_AND_ITE",
                                              & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeUse_5F_AND_5F_ITE::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeUse_5F_AND_5F_ITE ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeUse_5F_AND_5F_ITE::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeUse_5F_AND_5F_ITE (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_AND_5F_ITE GALGAS_typeUse_5F_AND_5F_ITE::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler,
                                                                          const GALGAS_location & inErrorLocation
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_typeUse_5F_AND_5F_ITE result ;
  const GALGAS_typeUse_5F_AND_5F_ITE * p = (const GALGAS_typeUse_5F_AND_5F_ITE *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeUse_5F_AND_5F_ITE *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "typeUse_AND_ITE", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_typeUse_5F_ITE::objectCompare (const GALGAS_typeUse_5F_ITE & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_ITE::GALGAS_typeUse_5F_ITE (void) :
GALGAS_AC_5F_job () {
}

//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_ITE::GALGAS_typeUse_5F_ITE (const cPtr_typeUse_5F_ITE * inSourcePtr) :
GALGAS_AC_5F_job (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_typeUse_5F_ITE) ;
}

//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_ITE GALGAS_typeUse_5F_ITE::constructor_new (LOCATION_ARGS) {
  GALGAS_typeUse_5F_ITE result ;
  macroMyNew (result.mObjectPtr, cPtr_typeUse_5F_ITE (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                   Pointer class for @typeUse_ITE class                    *
//---------------------------------------------------------------------------*

cPtr_typeUse_5F_ITE::cPtr_typeUse_5F_ITE (LOCATION_ARGS) :
cPtr_AC_5F_job (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_typeUse_5F_ITE::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeUse_5F_ITE ;
}

void cPtr_typeUse_5F_ITE::description (C_String & ioString,
                                       const PMSInt32 /* inIndentation */) const {
  ioString << "[@typeUse_ITE]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @typeUse_ITE type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_typeUse_5F_ITE ("typeUse_ITE",
                                       & kTypeDescriptor_GALGAS_AC_5F_job) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_typeUse_5F_ITE::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_typeUse_5F_ITE ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_typeUse_5F_ITE::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_typeUse_5F_ITE (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_typeUse_5F_ITE GALGAS_typeUse_5F_ITE::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_typeUse_5F_ITE result ;
  const GALGAS_typeUse_5F_ITE * p = (const GALGAS_typeUse_5F_ITE *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_typeUse_5F_ITE *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "typeUse_ITE", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_AC_5F_machineDefinition::objectCompare (const GALGAS_AC_5F_machineDefinition & inOperand) const {
  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;
}


//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition::GALGAS_AC_5F_machineDefinition (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition::GALGAS_AC_5F_machineDefinition (const cPtr_AC_5F_machineDefinition * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_AC_5F_machineDefinition) ;
}

//---------------------------------------------------------------------------*
//               Pointer class for @AC_machineDefinition class               *
//---------------------------------------------------------------------------*

cPtr_AC_5F_machineDefinition::cPtr_AC_5F_machineDefinition (LOCATION_ARGS) :
acPtr_class (THERE) {
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @AC_machineDefinition type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_AC_5F_machineDefinition ("AC_machineDefinition",
                                                NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_AC_5F_machineDefinition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_AC_5F_machineDefinition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_AC_5F_machineDefinition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_AC_5F_machineDefinition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_AC_5F_machineDefinition::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler,
                                                                              const GALGAS_location & inErrorLocation
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_AC_5F_machineDefinition result ;
  const GALGAS_AC_5F_machineDefinition * p = (const GALGAS_AC_5F_machineDefinition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_AC_5F_machineDefinition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "AC_machineDefinition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_additiveModalCompositionComponent::objectCompare (const GALGAS_C_5F_additiveModalCompositionComponent & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_additiveModalCompositionComponent * p = (const cPtr_C_5F_additiveModalCompositionComponent *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_additiveModalCompositionComponent) ;
  const cPtr_C_5F_additiveModalCompositionComponent * q = (const cPtr_C_5F_additiveModalCompositionComponent *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_additiveModalCompositionComponent) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mModeMap.objectCompare (q->mAttribute_mModeMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInclusionList.objectCompare (q->mAttribute_mInclusionList) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_additiveModalCompositionComponent::GALGAS_C_5F_additiveModalCompositionComponent (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_additiveModalCompositionComponent::GALGAS_C_5F_additiveModalCompositionComponent (const cPtr_C_5F_additiveModalCompositionComponent * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_additiveModalCompositionComponent) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_additiveModalCompositionComponent GALGAS_C_5F_additiveModalCompositionComponent::constructor_new (const GALGAS_M_5F_modesMap & inAttribute_mModeMap,
                                                                                                              const GALGAS_ListForModes & inAttribute_mInclusionList
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_additiveModalCompositionComponent result ;
  if (inAttribute_mModeMap.isValid () && inAttribute_mInclusionList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_additiveModalCompositionComponent (inAttribute_mModeMap, inAttribute_mInclusionList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_additiveModalCompositionComponent::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_additiveModalCompositionComponent * p = (cPtr_C_5F_additiveModalCompositionComponent *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_additiveModalCompositionComponent) ;
    cPtr_C_5F_additiveModalCompositionComponent * r = NULL ;
    macroMyNew (r, cPtr_C_5F_additiveModalCompositionComponent (p->mAttribute_mModeMap, p->mAttribute_mInclusionList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap GALGAS_C_5F_additiveModalCompositionComponent::reader_mModeMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_modesMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_additiveModalCompositionComponent * p = (const cPtr_C_5F_additiveModalCompositionComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_additiveModalCompositionComponent) ;
    result = p->mAttribute_mModeMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_C_5F_additiveModalCompositionComponent::reader_mInclusionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_ListForModes result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_additiveModalCompositionComponent * p = (const cPtr_C_5F_additiveModalCompositionComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_additiveModalCompositionComponent) ;
    result = p->mAttribute_mInclusionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//       Pointer class for @C_additiveModalCompositionComponent class        *
//---------------------------------------------------------------------------*

cPtr_C_5F_additiveModalCompositionComponent::cPtr_C_5F_additiveModalCompositionComponent (const GALGAS_M_5F_modesMap & in_mModeMap,
                                                                                          const GALGAS_ListForModes & in_mInclusionList
                                                                                          COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mModeMap (in_mModeMap),
mAttribute_mInclusionList (in_mInclusionList) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_additiveModalCompositionComponent::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_additiveModalCompositionComponent ;
}

void cPtr_C_5F_additiveModalCompositionComponent::description (C_String & ioString,
                                                               const PMSInt32 inIndentation) const {
  ioString << "[@C_additiveModalCompositionComponent:" ;
  mAttribute_mModeMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInclusionList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @C_additiveModalCompositionComponent type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_additiveModalCompositionComponent ("C_additiveModalCompositionComponent",
                                                               & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_additiveModalCompositionComponent::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_additiveModalCompositionComponent ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_additiveModalCompositionComponent::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_additiveModalCompositionComponent (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_additiveModalCompositionComponent GALGAS_C_5F_additiveModalCompositionComponent::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler,
                                                                                                            const GALGAS_location & inErrorLocation
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_additiveModalCompositionComponent result ;
  const GALGAS_C_5F_additiveModalCompositionComponent * p = (const GALGAS_C_5F_additiveModalCompositionComponent *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_additiveModalCompositionComponent *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_additiveModalCompositionComponent", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_boolToSeqExpression::objectCompare (const GALGAS_C_5F_boolToSeqExpression & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_boolToSeqExpression * p = (const cPtr_C_5F_boolToSeqExpression *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_boolToSeqExpression) ;
  const cPtr_C_5F_boolToSeqExpression * q = (const cPtr_C_5F_boolToSeqExpression *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_boolToSeqExpression) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mExpression.objectCompare (q->mAttribute_mExpression) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_boolToSeqExpression::GALGAS_C_5F_boolToSeqExpression (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_boolToSeqExpression::GALGAS_C_5F_boolToSeqExpression (const cPtr_C_5F_boolToSeqExpression * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_boolToSeqExpression) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_boolToSeqExpression GALGAS_C_5F_boolToSeqExpression::constructor_new (const GALGAS_AC_5F_boolExpression & inAttribute_mExpression
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_boolToSeqExpression result ;
  if (inAttribute_mExpression.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_boolToSeqExpression (inAttribute_mExpression COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_boolToSeqExpression::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_boolToSeqExpression * p = (cPtr_C_5F_boolToSeqExpression *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_boolToSeqExpression) ;
    cPtr_C_5F_boolToSeqExpression * r = NULL ;
    macroMyNew (r, cPtr_C_5F_boolToSeqExpression (p->mAttribute_mExpression COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_boolToSeqExpression::reader_mExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_boolToSeqExpression * p = (const cPtr_C_5F_boolToSeqExpression *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_boolToSeqExpression) ;
    result = p->mAttribute_mExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//              Pointer class for @C_boolToSeqExpression class               *
//---------------------------------------------------------------------------*

cPtr_C_5F_boolToSeqExpression::cPtr_C_5F_boolToSeqExpression (const GALGAS_AC_5F_boolExpression & in_mExpression
                                                              COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mExpression (in_mExpression) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_boolToSeqExpression::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_boolToSeqExpression ;
}

void cPtr_C_5F_boolToSeqExpression::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "[@C_boolToSeqExpression:" ;
  mAttribute_mExpression.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @C_boolToSeqExpression type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_boolToSeqExpression ("C_boolToSeqExpression",
                                                 & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_boolToSeqExpression::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_boolToSeqExpression ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_boolToSeqExpression::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_boolToSeqExpression (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_boolToSeqExpression GALGAS_C_5F_boolToSeqExpression::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler,
                                                                                const GALGAS_location & inErrorLocation
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_boolToSeqExpression result ;
  const GALGAS_C_5F_boolToSeqExpression * p = (const GALGAS_C_5F_boolToSeqExpression *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_boolToSeqExpression *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_boolToSeqExpression", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_complementationOperation::objectCompare (const GALGAS_C_5F_complementationOperation & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_complementationOperation * p = (const cPtr_C_5F_complementationOperation *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_complementationOperation) ;
  const cPtr_C_5F_complementationOperation * q = (const cPtr_C_5F_complementationOperation *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_complementationOperation) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mOperand.objectCompare (q->mAttribute_mOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_complementationOperation::GALGAS_C_5F_complementationOperation (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_complementationOperation::GALGAS_C_5F_complementationOperation (const cPtr_C_5F_complementationOperation * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_complementationOperation) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_complementationOperation GALGAS_C_5F_complementationOperation::constructor_new (const GALGAS_AC_5F_machineDefinition & inAttribute_mOperand
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_complementationOperation result ;
  if (inAttribute_mOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_complementationOperation (inAttribute_mOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_complementationOperation::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_complementationOperation * p = (cPtr_C_5F_complementationOperation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_complementationOperation) ;
    cPtr_C_5F_complementationOperation * r = NULL ;
    macroMyNew (r, cPtr_C_5F_complementationOperation (p->mAttribute_mOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_complementationOperation::reader_mOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_complementationOperation * p = (const cPtr_C_5F_complementationOperation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_complementationOperation) ;
    result = p->mAttribute_mOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//            Pointer class for @C_complementationOperation class            *
//---------------------------------------------------------------------------*

cPtr_C_5F_complementationOperation::cPtr_C_5F_complementationOperation (const GALGAS_AC_5F_machineDefinition & in_mOperand
                                                                        COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mOperand (in_mOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_complementationOperation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_complementationOperation ;
}

void cPtr_C_5F_complementationOperation::description (C_String & ioString,
                                                      const PMSInt32 inIndentation) const {
  ioString << "[@C_complementationOperation:" ;
  mAttribute_mOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @C_complementationOperation type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_complementationOperation ("C_complementationOperation",
                                                      & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_complementationOperation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_complementationOperation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_complementationOperation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_complementationOperation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_complementationOperation GALGAS_C_5F_complementationOperation::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler,
                                                                                          const GALGAS_location & inErrorLocation
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_complementationOperation result ;
  const GALGAS_C_5F_complementationOperation * p = (const GALGAS_C_5F_complementationOperation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_complementationOperation *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_complementationOperation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_existsDefinition::objectCompare (const GALGAS_C_5F_existsDefinition & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_existsDefinition * p = (const cPtr_C_5F_existsDefinition *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_existsDefinition) ;
  const cPtr_C_5F_existsDefinition * q = (const cPtr_C_5F_existsDefinition *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_existsDefinition) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mPreviousVariableCount.objectCompare (q->mAttribute_mPreviousVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mTotalVariableCount.objectCompare (q->mAttribute_mTotalVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mOperand.objectCompare (q->mAttribute_mOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_existsDefinition::GALGAS_C_5F_existsDefinition (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_existsDefinition::GALGAS_C_5F_existsDefinition (const cPtr_C_5F_existsDefinition * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_existsDefinition) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_existsDefinition GALGAS_C_5F_existsDefinition::constructor_new (const GALGAS_uint & inAttribute_mPreviousVariableCount,
                                                                            const GALGAS_uint & inAttribute_mTotalVariableCount,
                                                                            const GALGAS_AC_5F_machineDefinition & inAttribute_mOperand
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_existsDefinition result ;
  if (inAttribute_mPreviousVariableCount.isValid () && inAttribute_mTotalVariableCount.isValid () && inAttribute_mOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_existsDefinition (inAttribute_mPreviousVariableCount, inAttribute_mTotalVariableCount, inAttribute_mOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_existsDefinition::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_existsDefinition * p = (cPtr_C_5F_existsDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_existsDefinition) ;
    cPtr_C_5F_existsDefinition * r = NULL ;
    macroMyNew (r, cPtr_C_5F_existsDefinition (p->mAttribute_mPreviousVariableCount, p->mAttribute_mTotalVariableCount, p->mAttribute_mOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_existsDefinition::reader_mPreviousVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_existsDefinition * p = (const cPtr_C_5F_existsDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_existsDefinition) ;
    result = p->mAttribute_mPreviousVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_existsDefinition::reader_mTotalVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_existsDefinition * p = (const cPtr_C_5F_existsDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_existsDefinition) ;
    result = p->mAttribute_mTotalVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_existsDefinition::reader_mOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_existsDefinition * p = (const cPtr_C_5F_existsDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_existsDefinition) ;
    result = p->mAttribute_mOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                Pointer class for @C_existsDefinition class                *
//---------------------------------------------------------------------------*

cPtr_C_5F_existsDefinition::cPtr_C_5F_existsDefinition (const GALGAS_uint & in_mPreviousVariableCount,
                                                        const GALGAS_uint & in_mTotalVariableCount,
                                                        const GALGAS_AC_5F_machineDefinition & in_mOperand
                                                        COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mPreviousVariableCount (in_mPreviousVariableCount),
mAttribute_mTotalVariableCount (in_mTotalVariableCount),
mAttribute_mOperand (in_mOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_existsDefinition::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_existsDefinition ;
}

void cPtr_C_5F_existsDefinition::description (C_String & ioString,
                                              const PMSInt32 inIndentation) const {
  ioString << "[@C_existsDefinition:" ;
  mAttribute_mPreviousVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTotalVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @C_existsDefinition type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_existsDefinition ("C_existsDefinition",
                                              & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_existsDefinition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_existsDefinition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_existsDefinition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_existsDefinition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_existsDefinition GALGAS_C_5F_existsDefinition::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler,
                                                                          const GALGAS_location & inErrorLocation
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_existsDefinition result ;
  const GALGAS_C_5F_existsDefinition * p = (const GALGAS_C_5F_existsDefinition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_existsDefinition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_existsDefinition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_explicitAutomatonDefinition::objectCompare (const GALGAS_C_5F_explicitAutomatonDefinition & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_explicitAutomatonDefinition * p = (const cPtr_C_5F_explicitAutomatonDefinition *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_explicitAutomatonDefinition) ;
  const cPtr_C_5F_explicitAutomatonDefinition * q = (const cPtr_C_5F_explicitAutomatonDefinition *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_explicitAutomatonDefinition) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mStatesMap.objectCompare (q->mAttribute_mStatesMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mInitialStatesDefinitionList.objectCompare (q->mAttribute_mInitialStatesDefinitionList) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mTerminalStatesDefinitionList.objectCompare (q->mAttribute_mTerminalStatesDefinitionList) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mStateDefinitionList.objectCompare (q->mAttribute_mStateDefinitionList) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mEndOfDefinition.objectCompare (q->mAttribute_mEndOfDefinition) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_explicitAutomatonDefinition::GALGAS_C_5F_explicitAutomatonDefinition (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_explicitAutomatonDefinition::GALGAS_C_5F_explicitAutomatonDefinition (const cPtr_C_5F_explicitAutomatonDefinition * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_explicitAutomatonDefinition) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_explicitAutomatonDefinition GALGAS_C_5F_explicitAutomatonDefinition::constructor_new (const GALGAS_M_5F_stateMap & inAttribute_mStatesMap,
                                                                                                  const GALGAS_L_5F_statesDefinitionList & inAttribute_mInitialStatesDefinitionList,
                                                                                                  const GALGAS_L_5F_statesDefinitionList & inAttribute_mTerminalStatesDefinitionList,
                                                                                                  const GALGAS_L_5F_stateDefinition & inAttribute_mStateDefinitionList,
                                                                                                  const GALGAS_location & inAttribute_mEndOfDefinition
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_explicitAutomatonDefinition result ;
  if (inAttribute_mStatesMap.isValid () && inAttribute_mInitialStatesDefinitionList.isValid () && inAttribute_mTerminalStatesDefinitionList.isValid () && inAttribute_mStateDefinitionList.isValid () && inAttribute_mEndOfDefinition.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_explicitAutomatonDefinition (inAttribute_mStatesMap, inAttribute_mInitialStatesDefinitionList, inAttribute_mTerminalStatesDefinitionList, inAttribute_mStateDefinitionList, inAttribute_mEndOfDefinition COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_explicitAutomatonDefinition::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_explicitAutomatonDefinition * p = (cPtr_C_5F_explicitAutomatonDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_explicitAutomatonDefinition) ;
    cPtr_C_5F_explicitAutomatonDefinition * r = NULL ;
    macroMyNew (r, cPtr_C_5F_explicitAutomatonDefinition (p->mAttribute_mStatesMap, p->mAttribute_mInitialStatesDefinitionList, p->mAttribute_mTerminalStatesDefinitionList, p->mAttribute_mStateDefinitionList, p->mAttribute_mEndOfDefinition COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_stateMap GALGAS_C_5F_explicitAutomatonDefinition::reader_mStatesMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_stateMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_explicitAutomatonDefinition * p = (const cPtr_C_5F_explicitAutomatonDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_explicitAutomatonDefinition) ;
    result = p->mAttribute_mStatesMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList GALGAS_C_5F_explicitAutomatonDefinition::reader_mInitialStatesDefinitionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_statesDefinitionList result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_explicitAutomatonDefinition * p = (const cPtr_C_5F_explicitAutomatonDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_explicitAutomatonDefinition) ;
    result = p->mAttribute_mInitialStatesDefinitionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_statesDefinitionList GALGAS_C_5F_explicitAutomatonDefinition::reader_mTerminalStatesDefinitionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_statesDefinitionList result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_explicitAutomatonDefinition * p = (const cPtr_C_5F_explicitAutomatonDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_explicitAutomatonDefinition) ;
    result = p->mAttribute_mTerminalStatesDefinitionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_stateDefinition GALGAS_C_5F_explicitAutomatonDefinition::reader_mStateDefinitionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_stateDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_explicitAutomatonDefinition * p = (const cPtr_C_5F_explicitAutomatonDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_explicitAutomatonDefinition) ;
    result = p->mAttribute_mStateDefinitionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_C_5F_explicitAutomatonDefinition::reader_mEndOfDefinition (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_explicitAutomatonDefinition * p = (const cPtr_C_5F_explicitAutomatonDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_explicitAutomatonDefinition) ;
    result = p->mAttribute_mEndOfDefinition ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//          Pointer class for @C_explicitAutomatonDefinition class           *
//---------------------------------------------------------------------------*

cPtr_C_5F_explicitAutomatonDefinition::cPtr_C_5F_explicitAutomatonDefinition (const GALGAS_M_5F_stateMap & in_mStatesMap,
                                                                              const GALGAS_L_5F_statesDefinitionList & in_mInitialStatesDefinitionList,
                                                                              const GALGAS_L_5F_statesDefinitionList & in_mTerminalStatesDefinitionList,
                                                                              const GALGAS_L_5F_stateDefinition & in_mStateDefinitionList,
                                                                              const GALGAS_location & in_mEndOfDefinition
                                                                              COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mStatesMap (in_mStatesMap),
mAttribute_mInitialStatesDefinitionList (in_mInitialStatesDefinitionList),
mAttribute_mTerminalStatesDefinitionList (in_mTerminalStatesDefinitionList),
mAttribute_mStateDefinitionList (in_mStateDefinitionList),
mAttribute_mEndOfDefinition (in_mEndOfDefinition) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_explicitAutomatonDefinition::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_explicitAutomatonDefinition ;
}

void cPtr_C_5F_explicitAutomatonDefinition::description (C_String & ioString,
                                                         const PMSInt32 inIndentation) const {
  ioString << "[@C_explicitAutomatonDefinition:" ;
  mAttribute_mStatesMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInitialStatesDefinitionList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTerminalStatesDefinitionList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mStateDefinitionList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mEndOfDefinition.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @C_explicitAutomatonDefinition type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_explicitAutomatonDefinition ("C_explicitAutomatonDefinition",
                                                         & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_explicitAutomatonDefinition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_explicitAutomatonDefinition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_explicitAutomatonDefinition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_explicitAutomatonDefinition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_explicitAutomatonDefinition GALGAS_C_5F_explicitAutomatonDefinition::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler,
                                                                                                const GALGAS_location & inErrorLocation
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_explicitAutomatonDefinition result ;
  const GALGAS_C_5F_explicitAutomatonDefinition * p = (const GALGAS_C_5F_explicitAutomatonDefinition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_explicitAutomatonDefinition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_explicitAutomatonDefinition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_forallDefinition::objectCompare (const GALGAS_C_5F_forallDefinition & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_forallDefinition * p = (const cPtr_C_5F_forallDefinition *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_forallDefinition) ;
  const cPtr_C_5F_forallDefinition * q = (const cPtr_C_5F_forallDefinition *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_forallDefinition) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mPreviousVariableCount.objectCompare (q->mAttribute_mPreviousVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mTotalVariableCount.objectCompare (q->mAttribute_mTotalVariableCount) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mOperand.objectCompare (q->mAttribute_mOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_forallDefinition::GALGAS_C_5F_forallDefinition (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_forallDefinition::GALGAS_C_5F_forallDefinition (const cPtr_C_5F_forallDefinition * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_forallDefinition) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_forallDefinition GALGAS_C_5F_forallDefinition::constructor_new (const GALGAS_uint & inAttribute_mPreviousVariableCount,
                                                                            const GALGAS_uint & inAttribute_mTotalVariableCount,
                                                                            const GALGAS_AC_5F_machineDefinition & inAttribute_mOperand
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_forallDefinition result ;
  if (inAttribute_mPreviousVariableCount.isValid () && inAttribute_mTotalVariableCount.isValid () && inAttribute_mOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_forallDefinition (inAttribute_mPreviousVariableCount, inAttribute_mTotalVariableCount, inAttribute_mOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_forallDefinition::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_forallDefinition * p = (cPtr_C_5F_forallDefinition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_forallDefinition) ;
    cPtr_C_5F_forallDefinition * r = NULL ;
    macroMyNew (r, cPtr_C_5F_forallDefinition (p->mAttribute_mPreviousVariableCount, p->mAttribute_mTotalVariableCount, p->mAttribute_mOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_forallDefinition::reader_mPreviousVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_forallDefinition * p = (const cPtr_C_5F_forallDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_forallDefinition) ;
    result = p->mAttribute_mPreviousVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_forallDefinition::reader_mTotalVariableCount (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_forallDefinition * p = (const cPtr_C_5F_forallDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_forallDefinition) ;
    result = p->mAttribute_mTotalVariableCount ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_forallDefinition::reader_mOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_forallDefinition * p = (const cPtr_C_5F_forallDefinition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_forallDefinition) ;
    result = p->mAttribute_mOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                Pointer class for @C_forallDefinition class                *
//---------------------------------------------------------------------------*

cPtr_C_5F_forallDefinition::cPtr_C_5F_forallDefinition (const GALGAS_uint & in_mPreviousVariableCount,
                                                        const GALGAS_uint & in_mTotalVariableCount,
                                                        const GALGAS_AC_5F_machineDefinition & in_mOperand
                                                        COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mPreviousVariableCount (in_mPreviousVariableCount),
mAttribute_mTotalVariableCount (in_mTotalVariableCount),
mAttribute_mOperand (in_mOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_forallDefinition::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_forallDefinition ;
}

void cPtr_C_5F_forallDefinition::description (C_String & ioString,
                                              const PMSInt32 inIndentation) const {
  ioString << "[@C_forallDefinition:" ;
  mAttribute_mPreviousVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTotalVariableCount.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @C_forallDefinition type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_forallDefinition ("C_forallDefinition",
                                              & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_forallDefinition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_forallDefinition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_forallDefinition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_forallDefinition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_forallDefinition GALGAS_C_5F_forallDefinition::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler,
                                                                          const GALGAS_location & inErrorLocation
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_forallDefinition result ;
  const GALGAS_C_5F_forallDefinition * p = (const GALGAS_C_5F_forallDefinition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_forallDefinition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_forallDefinition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_fullSaturationOperation::objectCompare (const GALGAS_C_5F_fullSaturationOperation & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_fullSaturationOperation * p = (const cPtr_C_5F_fullSaturationOperation *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_fullSaturationOperation) ;
  const cPtr_C_5F_fullSaturationOperation * q = (const cPtr_C_5F_fullSaturationOperation *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_fullSaturationOperation) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mOperand.objectCompare (q->mAttribute_mOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_fullSaturationOperation::GALGAS_C_5F_fullSaturationOperation (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_fullSaturationOperation::GALGAS_C_5F_fullSaturationOperation (const cPtr_C_5F_fullSaturationOperation * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_fullSaturationOperation) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_fullSaturationOperation GALGAS_C_5F_fullSaturationOperation::constructor_new (const GALGAS_AC_5F_machineDefinition & inAttribute_mOperand
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_fullSaturationOperation result ;
  if (inAttribute_mOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_fullSaturationOperation (inAttribute_mOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_fullSaturationOperation::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_fullSaturationOperation * p = (cPtr_C_5F_fullSaturationOperation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_fullSaturationOperation) ;
    cPtr_C_5F_fullSaturationOperation * r = NULL ;
    macroMyNew (r, cPtr_C_5F_fullSaturationOperation (p->mAttribute_mOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_fullSaturationOperation::reader_mOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_fullSaturationOperation * p = (const cPtr_C_5F_fullSaturationOperation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_fullSaturationOperation) ;
    result = p->mAttribute_mOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//            Pointer class for @C_fullSaturationOperation class             *
//---------------------------------------------------------------------------*

cPtr_C_5F_fullSaturationOperation::cPtr_C_5F_fullSaturationOperation (const GALGAS_AC_5F_machineDefinition & in_mOperand
                                                                      COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mOperand (in_mOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_fullSaturationOperation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_fullSaturationOperation ;
}

void cPtr_C_5F_fullSaturationOperation::description (C_String & ioString,
                                                     const PMSInt32 inIndentation) const {
  ioString << "[@C_fullSaturationOperation:" ;
  mAttribute_mOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                      @C_fullSaturationOperation type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_fullSaturationOperation ("C_fullSaturationOperation",
                                                     & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_fullSaturationOperation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_fullSaturationOperation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_fullSaturationOperation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_fullSaturationOperation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_fullSaturationOperation GALGAS_C_5F_fullSaturationOperation::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler,
                                                                                        const GALGAS_location & inErrorLocation
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_fullSaturationOperation result ;
  const GALGAS_C_5F_fullSaturationOperation * p = (const GALGAS_C_5F_fullSaturationOperation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_fullSaturationOperation *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_fullSaturationOperation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_importMachine::objectCompare (const GALGAS_C_5F_importMachine & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_importMachine * p = (const cPtr_C_5F_importMachine *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_importMachine) ;
  const cPtr_C_5F_importMachine * q = (const cPtr_C_5F_importMachine *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_importMachine) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mIndexOfImportedMachine.objectCompare (q->mAttribute_mIndexOfImportedMachine) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mTranslationVector.objectCompare (q->mAttribute_mTranslationVector) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_importMachine::GALGAS_C_5F_importMachine (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_importMachine::GALGAS_C_5F_importMachine (const cPtr_C_5F_importMachine * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_importMachine) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_importMachine GALGAS_C_5F_importMachine::constructor_new (const GALGAS_uint & inAttribute_mIndexOfImportedMachine,
                                                                      const GALGAS_L_5F_translationVector & inAttribute_mTranslationVector
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_importMachine result ;
  if (inAttribute_mIndexOfImportedMachine.isValid () && inAttribute_mTranslationVector.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_importMachine (inAttribute_mIndexOfImportedMachine, inAttribute_mTranslationVector COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_importMachine::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_importMachine * p = (cPtr_C_5F_importMachine *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_importMachine) ;
    cPtr_C_5F_importMachine * r = NULL ;
    macroMyNew (r, cPtr_C_5F_importMachine (p->mAttribute_mIndexOfImportedMachine, p->mAttribute_mTranslationVector COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_C_5F_importMachine::reader_mIndexOfImportedMachine (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_importMachine * p = (const cPtr_C_5F_importMachine *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_importMachine) ;
    result = p->mAttribute_mIndexOfImportedMachine ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_L_5F_translationVector GALGAS_C_5F_importMachine::reader_mTranslationVector (UNUSED_LOCATION_ARGS) const {
  GALGAS_L_5F_translationVector result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_importMachine * p = (const cPtr_C_5F_importMachine *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_importMachine) ;
    result = p->mAttribute_mTranslationVector ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @C_importMachine class                  *
//---------------------------------------------------------------------------*

cPtr_C_5F_importMachine::cPtr_C_5F_importMachine (const GALGAS_uint & in_mIndexOfImportedMachine,
                                                  const GALGAS_L_5F_translationVector & in_mTranslationVector
                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mIndexOfImportedMachine (in_mIndexOfImportedMachine),
mAttribute_mTranslationVector (in_mTranslationVector) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_importMachine::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_importMachine ;
}

void cPtr_C_5F_importMachine::description (C_String & ioString,
                                           const PMSInt32 inIndentation) const {
  ioString << "[@C_importMachine:" ;
  mAttribute_mIndexOfImportedMachine.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTranslationVector.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @C_importMachine type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_importMachine ("C_importMachine",
                                           & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_importMachine::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_importMachine ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_importMachine::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_importMachine (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_importMachine GALGAS_C_5F_importMachine::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_importMachine result ;
  const GALGAS_C_5F_importMachine * p = (const GALGAS_C_5F_importMachine *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_importMachine *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_importMachine", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_orComposition::objectCompare (const GALGAS_C_5F_orComposition & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_orComposition * p = (const cPtr_C_5F_orComposition *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_orComposition) ;
  const cPtr_C_5F_orComposition * q = (const cPtr_C_5F_orComposition *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_orComposition) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mLeftOperand.objectCompare (q->mAttribute_mLeftOperand) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRightOperand.objectCompare (q->mAttribute_mRightOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_orComposition::GALGAS_C_5F_orComposition (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_orComposition::GALGAS_C_5F_orComposition (const cPtr_C_5F_orComposition * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_orComposition) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_orComposition GALGAS_C_5F_orComposition::constructor_new (const GALGAS_AC_5F_machineDefinition & inAttribute_mLeftOperand,
                                                                      const GALGAS_AC_5F_machineDefinition & inAttribute_mRightOperand
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_orComposition result ;
  if (inAttribute_mLeftOperand.isValid () && inAttribute_mRightOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_orComposition (inAttribute_mLeftOperand, inAttribute_mRightOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_orComposition::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_orComposition * p = (cPtr_C_5F_orComposition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_orComposition) ;
    cPtr_C_5F_orComposition * r = NULL ;
    macroMyNew (r, cPtr_C_5F_orComposition (p->mAttribute_mLeftOperand, p->mAttribute_mRightOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_orComposition::reader_mLeftOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_orComposition * p = (const cPtr_C_5F_orComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_orComposition) ;
    result = p->mAttribute_mLeftOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_orComposition::reader_mRightOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_orComposition * p = (const cPtr_C_5F_orComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_orComposition) ;
    result = p->mAttribute_mRightOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @C_orComposition class                  *
//---------------------------------------------------------------------------*

cPtr_C_5F_orComposition::cPtr_C_5F_orComposition (const GALGAS_AC_5F_machineDefinition & in_mLeftOperand,
                                                  const GALGAS_AC_5F_machineDefinition & in_mRightOperand
                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mLeftOperand (in_mLeftOperand),
mAttribute_mRightOperand (in_mRightOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_orComposition::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_orComposition ;
}

void cPtr_C_5F_orComposition::description (C_String & ioString,
                                           const PMSInt32 inIndentation) const {
  ioString << "[@C_orComposition:" ;
  mAttribute_mLeftOperand.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @C_orComposition type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_orComposition ("C_orComposition",
                                           & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_orComposition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_orComposition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_orComposition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_orComposition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_orComposition GALGAS_C_5F_orComposition::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_orComposition result ;
  const GALGAS_C_5F_orComposition * p = (const GALGAS_C_5F_orComposition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_orComposition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_orComposition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_parallelComposition::objectCompare (const GALGAS_C_5F_parallelComposition & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_parallelComposition * p = (const cPtr_C_5F_parallelComposition *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_parallelComposition) ;
  const cPtr_C_5F_parallelComposition * q = (const cPtr_C_5F_parallelComposition *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_parallelComposition) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mLeftOperand.objectCompare (q->mAttribute_mLeftOperand) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRightOperand.objectCompare (q->mAttribute_mRightOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_parallelComposition::GALGAS_C_5F_parallelComposition (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_parallelComposition::GALGAS_C_5F_parallelComposition (const cPtr_C_5F_parallelComposition * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_parallelComposition) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_parallelComposition GALGAS_C_5F_parallelComposition::constructor_new (const GALGAS_AC_5F_machineDefinition & inAttribute_mLeftOperand,
                                                                                  const GALGAS_AC_5F_machineDefinition & inAttribute_mRightOperand
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_parallelComposition result ;
  if (inAttribute_mLeftOperand.isValid () && inAttribute_mRightOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_parallelComposition (inAttribute_mLeftOperand, inAttribute_mRightOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_parallelComposition::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_parallelComposition * p = (cPtr_C_5F_parallelComposition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_parallelComposition) ;
    cPtr_C_5F_parallelComposition * r = NULL ;
    macroMyNew (r, cPtr_C_5F_parallelComposition (p->mAttribute_mLeftOperand, p->mAttribute_mRightOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_parallelComposition::reader_mLeftOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_parallelComposition * p = (const cPtr_C_5F_parallelComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_parallelComposition) ;
    result = p->mAttribute_mLeftOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_parallelComposition::reader_mRightOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_parallelComposition * p = (const cPtr_C_5F_parallelComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_parallelComposition) ;
    result = p->mAttribute_mRightOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//              Pointer class for @C_parallelComposition class               *
//---------------------------------------------------------------------------*

cPtr_C_5F_parallelComposition::cPtr_C_5F_parallelComposition (const GALGAS_AC_5F_machineDefinition & in_mLeftOperand,
                                                              const GALGAS_AC_5F_machineDefinition & in_mRightOperand
                                                              COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mLeftOperand (in_mLeftOperand),
mAttribute_mRightOperand (in_mRightOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_parallelComposition::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_parallelComposition ;
}

void cPtr_C_5F_parallelComposition::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "[@C_parallelComposition:" ;
  mAttribute_mLeftOperand.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @C_parallelComposition type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_parallelComposition ("C_parallelComposition",
                                                 & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_parallelComposition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_parallelComposition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_parallelComposition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_parallelComposition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_parallelComposition GALGAS_C_5F_parallelComposition::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler,
                                                                                const GALGAS_location & inErrorLocation
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_parallelComposition result ;
  const GALGAS_C_5F_parallelComposition * p = (const GALGAS_C_5F_parallelComposition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_parallelComposition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_parallelComposition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_strongModalComposition::objectCompare (const GALGAS_C_5F_strongModalComposition & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_strongModalComposition * p = (const cPtr_C_5F_strongModalComposition *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_strongModalComposition) ;
  const cPtr_C_5F_strongModalComposition * q = (const cPtr_C_5F_strongModalComposition *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_strongModalComposition) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mLeftOperand.objectCompare (q->mAttribute_mLeftOperand) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mErrorLocation.objectCompare (q->mAttribute_mErrorLocation) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRightOperand.objectCompare (q->mAttribute_mRightOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_strongModalComposition::GALGAS_C_5F_strongModalComposition (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_strongModalComposition::GALGAS_C_5F_strongModalComposition (const cPtr_C_5F_strongModalComposition * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_strongModalComposition) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_strongModalComposition GALGAS_C_5F_strongModalComposition::constructor_new (const GALGAS_AC_5F_machineDefinition & inAttribute_mLeftOperand,
                                                                                        const GALGAS_location & inAttribute_mErrorLocation,
                                                                                        const GALGAS_AC_5F_machineDefinition & inAttribute_mRightOperand
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_strongModalComposition result ;
  if (inAttribute_mLeftOperand.isValid () && inAttribute_mErrorLocation.isValid () && inAttribute_mRightOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_strongModalComposition (inAttribute_mLeftOperand, inAttribute_mErrorLocation, inAttribute_mRightOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_strongModalComposition::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_strongModalComposition * p = (cPtr_C_5F_strongModalComposition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_strongModalComposition) ;
    cPtr_C_5F_strongModalComposition * r = NULL ;
    macroMyNew (r, cPtr_C_5F_strongModalComposition (p->mAttribute_mLeftOperand, p->mAttribute_mErrorLocation, p->mAttribute_mRightOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_strongModalComposition::reader_mLeftOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_strongModalComposition * p = (const cPtr_C_5F_strongModalComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_strongModalComposition) ;
    result = p->mAttribute_mLeftOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_C_5F_strongModalComposition::reader_mErrorLocation (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_strongModalComposition * p = (const cPtr_C_5F_strongModalComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_strongModalComposition) ;
    result = p->mAttribute_mErrorLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_strongModalComposition::reader_mRightOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_strongModalComposition * p = (const cPtr_C_5F_strongModalComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_strongModalComposition) ;
    result = p->mAttribute_mRightOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//             Pointer class for @C_strongModalComposition class             *
//---------------------------------------------------------------------------*

cPtr_C_5F_strongModalComposition::cPtr_C_5F_strongModalComposition (const GALGAS_AC_5F_machineDefinition & in_mLeftOperand,
                                                                    const GALGAS_location & in_mErrorLocation,
                                                                    const GALGAS_AC_5F_machineDefinition & in_mRightOperand
                                                                    COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mLeftOperand (in_mLeftOperand),
mAttribute_mErrorLocation (in_mErrorLocation),
mAttribute_mRightOperand (in_mRightOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_strongModalComposition::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_strongModalComposition ;
}

void cPtr_C_5F_strongModalComposition::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "[@C_strongModalComposition:" ;
  mAttribute_mLeftOperand.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mErrorLocation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                      @C_strongModalComposition type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_strongModalComposition ("C_strongModalComposition",
                                                    & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_strongModalComposition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_strongModalComposition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_strongModalComposition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_strongModalComposition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_strongModalComposition GALGAS_C_5F_strongModalComposition::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_strongModalComposition result ;
  const GALGAS_C_5F_strongModalComposition * p = (const GALGAS_C_5F_strongModalComposition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_strongModalComposition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_strongModalComposition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_substractiveModalCompositionComponent::objectCompare (const GALGAS_C_5F_substractiveModalCompositionComponent & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_substractiveModalCompositionComponent * p = (const cPtr_C_5F_substractiveModalCompositionComponent *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_substractiveModalCompositionComponent) ;
  const cPtr_C_5F_substractiveModalCompositionComponent * q = (const cPtr_C_5F_substractiveModalCompositionComponent *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_substractiveModalCompositionComponent) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mModeMap.objectCompare (q->mAttribute_mModeMap) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mExclusionList.objectCompare (q->mAttribute_mExclusionList) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_substractiveModalCompositionComponent::GALGAS_C_5F_substractiveModalCompositionComponent (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_substractiveModalCompositionComponent::GALGAS_C_5F_substractiveModalCompositionComponent (const cPtr_C_5F_substractiveModalCompositionComponent * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_substractiveModalCompositionComponent) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_substractiveModalCompositionComponent GALGAS_C_5F_substractiveModalCompositionComponent::constructor_new (const GALGAS_M_5F_modesMap & inAttribute_mModeMap,
                                                                                                                      const GALGAS_ListForModes & inAttribute_mExclusionList
                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_substractiveModalCompositionComponent result ;
  if (inAttribute_mModeMap.isValid () && inAttribute_mExclusionList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_substractiveModalCompositionComponent (inAttribute_mModeMap, inAttribute_mExclusionList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_substractiveModalCompositionComponent::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_substractiveModalCompositionComponent * p = (cPtr_C_5F_substractiveModalCompositionComponent *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_substractiveModalCompositionComponent) ;
    cPtr_C_5F_substractiveModalCompositionComponent * r = NULL ;
    macroMyNew (r, cPtr_C_5F_substractiveModalCompositionComponent (p->mAttribute_mModeMap, p->mAttribute_mExclusionList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_M_5F_modesMap GALGAS_C_5F_substractiveModalCompositionComponent::reader_mModeMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_M_5F_modesMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_substractiveModalCompositionComponent * p = (const cPtr_C_5F_substractiveModalCompositionComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_substractiveModalCompositionComponent) ;
    result = p->mAttribute_mModeMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_ListForModes GALGAS_C_5F_substractiveModalCompositionComponent::reader_mExclusionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_ListForModes result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_substractiveModalCompositionComponent * p = (const cPtr_C_5F_substractiveModalCompositionComponent *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_substractiveModalCompositionComponent) ;
    result = p->mAttribute_mExclusionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//     Pointer class for @C_substractiveModalCompositionComponent class      *
//---------------------------------------------------------------------------*

cPtr_C_5F_substractiveModalCompositionComponent::cPtr_C_5F_substractiveModalCompositionComponent (const GALGAS_M_5F_modesMap & in_mModeMap,
                                                                                                  const GALGAS_ListForModes & in_mExclusionList
                                                                                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mModeMap (in_mModeMap),
mAttribute_mExclusionList (in_mExclusionList) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_substractiveModalCompositionComponent::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_substractiveModalCompositionComponent ;
}

void cPtr_C_5F_substractiveModalCompositionComponent::description (C_String & ioString,
                                                                   const PMSInt32 inIndentation) const {
  ioString << "[@C_substractiveModalCompositionComponent:" ;
  mAttribute_mModeMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mExclusionList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//               @C_substractiveModalCompositionComponent type               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_substractiveModalCompositionComponent ("C_substractiveModalCompositionComponent",
                                                                   & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_substractiveModalCompositionComponent::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_substractiveModalCompositionComponent ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_substractiveModalCompositionComponent::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_substractiveModalCompositionComponent (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_substractiveModalCompositionComponent GALGAS_C_5F_substractiveModalCompositionComponent::extractObject (const GALGAS_object & inObject,
                                                                                                                    C_Compiler * inCompiler,
                                                                                                                    const GALGAS_location & inErrorLocation
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_substractiveModalCompositionComponent result ;
  const GALGAS_C_5F_substractiveModalCompositionComponent * p = (const GALGAS_C_5F_substractiveModalCompositionComponent *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_substractiveModalCompositionComponent *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_substractiveModalCompositionComponent", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_suppressInitialStatesOperation::objectCompare (const GALGAS_C_5F_suppressInitialStatesOperation & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_suppressInitialStatesOperation * p = (const cPtr_C_5F_suppressInitialStatesOperation *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_suppressInitialStatesOperation) ;
  const cPtr_C_5F_suppressInitialStatesOperation * q = (const cPtr_C_5F_suppressInitialStatesOperation *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_suppressInitialStatesOperation) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mOperand.objectCompare (q->mAttribute_mOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_suppressInitialStatesOperation::GALGAS_C_5F_suppressInitialStatesOperation (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_suppressInitialStatesOperation::GALGAS_C_5F_suppressInitialStatesOperation (const cPtr_C_5F_suppressInitialStatesOperation * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_suppressInitialStatesOperation) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_suppressInitialStatesOperation GALGAS_C_5F_suppressInitialStatesOperation::constructor_new (const GALGAS_AC_5F_machineDefinition & inAttribute_mOperand
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_suppressInitialStatesOperation result ;
  if (inAttribute_mOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_suppressInitialStatesOperation (inAttribute_mOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_suppressInitialStatesOperation::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_suppressInitialStatesOperation * p = (cPtr_C_5F_suppressInitialStatesOperation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_suppressInitialStatesOperation) ;
    cPtr_C_5F_suppressInitialStatesOperation * r = NULL ;
    macroMyNew (r, cPtr_C_5F_suppressInitialStatesOperation (p->mAttribute_mOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_suppressInitialStatesOperation::reader_mOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_suppressInitialStatesOperation * p = (const cPtr_C_5F_suppressInitialStatesOperation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_suppressInitialStatesOperation) ;
    result = p->mAttribute_mOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//         Pointer class for @C_suppressInitialStatesOperation class         *
//---------------------------------------------------------------------------*

cPtr_C_5F_suppressInitialStatesOperation::cPtr_C_5F_suppressInitialStatesOperation (const GALGAS_AC_5F_machineDefinition & in_mOperand
                                                                                    COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mOperand (in_mOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_suppressInitialStatesOperation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_suppressInitialStatesOperation ;
}

void cPtr_C_5F_suppressInitialStatesOperation::description (C_String & ioString,
                                                            const PMSInt32 inIndentation) const {
  ioString << "[@C_suppressInitialStatesOperation:" ;
  mAttribute_mOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                  @C_suppressInitialStatesOperation type                   *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_suppressInitialStatesOperation ("C_suppressInitialStatesOperation",
                                                            & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_suppressInitialStatesOperation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_suppressInitialStatesOperation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_suppressInitialStatesOperation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_suppressInitialStatesOperation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_suppressInitialStatesOperation GALGAS_C_5F_suppressInitialStatesOperation::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler,
                                                                                                      const GALGAS_location & inErrorLocation
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_suppressInitialStatesOperation result ;
  const GALGAS_C_5F_suppressInitialStatesOperation * p = (const GALGAS_C_5F_suppressInitialStatesOperation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_suppressInitialStatesOperation *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_suppressInitialStatesOperation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_suppressTerminalStatesOperation::objectCompare (const GALGAS_C_5F_suppressTerminalStatesOperation & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_suppressTerminalStatesOperation * p = (const cPtr_C_5F_suppressTerminalStatesOperation *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_suppressTerminalStatesOperation) ;
  const cPtr_C_5F_suppressTerminalStatesOperation * q = (const cPtr_C_5F_suppressTerminalStatesOperation *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_suppressTerminalStatesOperation) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mOperand.objectCompare (q->mAttribute_mOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_suppressTerminalStatesOperation::GALGAS_C_5F_suppressTerminalStatesOperation (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_suppressTerminalStatesOperation::GALGAS_C_5F_suppressTerminalStatesOperation (const cPtr_C_5F_suppressTerminalStatesOperation * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_suppressTerminalStatesOperation) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_suppressTerminalStatesOperation GALGAS_C_5F_suppressTerminalStatesOperation::constructor_new (const GALGAS_AC_5F_machineDefinition & inAttribute_mOperand
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_suppressTerminalStatesOperation result ;
  if (inAttribute_mOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_suppressTerminalStatesOperation (inAttribute_mOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_suppressTerminalStatesOperation::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_suppressTerminalStatesOperation * p = (cPtr_C_5F_suppressTerminalStatesOperation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_suppressTerminalStatesOperation) ;
    cPtr_C_5F_suppressTerminalStatesOperation * r = NULL ;
    macroMyNew (r, cPtr_C_5F_suppressTerminalStatesOperation (p->mAttribute_mOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_suppressTerminalStatesOperation::reader_mOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_suppressTerminalStatesOperation * p = (const cPtr_C_5F_suppressTerminalStatesOperation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_suppressTerminalStatesOperation) ;
    result = p->mAttribute_mOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//        Pointer class for @C_suppressTerminalStatesOperation class         *
//---------------------------------------------------------------------------*

cPtr_C_5F_suppressTerminalStatesOperation::cPtr_C_5F_suppressTerminalStatesOperation (const GALGAS_AC_5F_machineDefinition & in_mOperand
                                                                                      COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mOperand (in_mOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_suppressTerminalStatesOperation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_suppressTerminalStatesOperation ;
}

void cPtr_C_5F_suppressTerminalStatesOperation::description (C_String & ioString,
                                                             const PMSInt32 inIndentation) const {
  ioString << "[@C_suppressTerminalStatesOperation:" ;
  mAttribute_mOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                  @C_suppressTerminalStatesOperation type                  *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_suppressTerminalStatesOperation ("C_suppressTerminalStatesOperation",
                                                             & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_suppressTerminalStatesOperation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_suppressTerminalStatesOperation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_suppressTerminalStatesOperation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_suppressTerminalStatesOperation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_suppressTerminalStatesOperation GALGAS_C_5F_suppressTerminalStatesOperation::extractObject (const GALGAS_object & inObject,
                                                                                                        C_Compiler * inCompiler,
                                                                                                        const GALGAS_location & inErrorLocation
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_suppressTerminalStatesOperation result ;
  const GALGAS_C_5F_suppressTerminalStatesOperation * p = (const GALGAS_C_5F_suppressTerminalStatesOperation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_suppressTerminalStatesOperation *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_suppressTerminalStatesOperation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_trans::objectCompare (const GALGAS_C_5F_trans & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_trans * p = (const cPtr_C_5F_trans *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_trans) ;
  const cPtr_C_5F_trans * q = (const cPtr_C_5F_trans *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_trans) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mSourceStateExpression.objectCompare (q->mAttribute_mSourceStateExpression) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mTargetStateExpression.objectCompare (q->mAttribute_mTargetStateExpression) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_trans::GALGAS_C_5F_trans (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_trans::GALGAS_C_5F_trans (const cPtr_C_5F_trans * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_trans) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_trans GALGAS_C_5F_trans::constructor_new (const GALGAS_AC_5F_boolExpression & inAttribute_mSourceStateExpression,
                                                      const GALGAS_AC_5F_boolExpression & inAttribute_mTargetStateExpression
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_trans result ;
  if (inAttribute_mSourceStateExpression.isValid () && inAttribute_mTargetStateExpression.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_trans (inAttribute_mSourceStateExpression, inAttribute_mTargetStateExpression COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_trans::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_trans * p = (cPtr_C_5F_trans *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_trans) ;
    cPtr_C_5F_trans * r = NULL ;
    macroMyNew (r, cPtr_C_5F_trans (p->mAttribute_mSourceStateExpression, p->mAttribute_mTargetStateExpression COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_trans::reader_mSourceStateExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_trans * p = (const cPtr_C_5F_trans *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_trans) ;
    result = p->mAttribute_mSourceStateExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_boolExpression GALGAS_C_5F_trans::reader_mTargetStateExpression (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_boolExpression result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_trans * p = (const cPtr_C_5F_trans *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_trans) ;
    result = p->mAttribute_mTargetStateExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                     Pointer class for @C_trans class                      *
//---------------------------------------------------------------------------*

cPtr_C_5F_trans::cPtr_C_5F_trans (const GALGAS_AC_5F_boolExpression & in_mSourceStateExpression,
                                  const GALGAS_AC_5F_boolExpression & in_mTargetStateExpression
                                  COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mSourceStateExpression (in_mSourceStateExpression),
mAttribute_mTargetStateExpression (in_mTargetStateExpression) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_trans::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_trans ;
}

void cPtr_C_5F_trans::description (C_String & ioString,
                                   const PMSInt32 inIndentation) const {
  ioString << "[@C_trans:" ;
  mAttribute_mSourceStateExpression.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTargetStateExpression.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                               @C_trans type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_trans ("C_trans",
                                   & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_trans::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_trans ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_trans::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_trans (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_trans GALGAS_C_5F_trans::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler,
                                                    const GALGAS_location & inErrorLocation
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_trans result ;
  const GALGAS_C_5F_trans * p = (const GALGAS_C_5F_trans *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_trans *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_trans", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_C_5F_weakModalComposition::objectCompare (const GALGAS_C_5F_weakModalComposition & inOperand) const {
  typeComparisonResult result = GALGAS_AC_5F_machineDefinition::objectCompare (inOperand) ;
  const cPtr_C_5F_weakModalComposition * p = (const cPtr_C_5F_weakModalComposition *) mObjectPtr ;
  macroNullOrValidSharedObject (p, const cPtr_C_5F_weakModalComposition) ;
  const cPtr_C_5F_weakModalComposition * q = (const cPtr_C_5F_weakModalComposition *) inOperand.mObjectPtr ;
  macroNullOrValidSharedObject (q, const cPtr_C_5F_weakModalComposition) ;
  if (kOperandEqual == result) {
    result = p->mAttribute_mLeftOperand.objectCompare (q->mAttribute_mLeftOperand) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mErrorLocation.objectCompare (q->mAttribute_mErrorLocation) ;
  }
  if (kOperandEqual == result) {
    result = p->mAttribute_mRightOperand.objectCompare (q->mAttribute_mRightOperand) ;
  }
  return result ;
}


//---------------------------------------------------------------------------*

GALGAS_C_5F_weakModalComposition::GALGAS_C_5F_weakModalComposition (void) :
GALGAS_AC_5F_machineDefinition () {
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_weakModalComposition::GALGAS_C_5F_weakModalComposition (const cPtr_C_5F_weakModalComposition * inSourcePtr) :
GALGAS_AC_5F_machineDefinition (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_C_5F_weakModalComposition) ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_weakModalComposition GALGAS_C_5F_weakModalComposition::constructor_new (const GALGAS_AC_5F_machineDefinition & inAttribute_mLeftOperand,
                                                                                    const GALGAS_location & inAttribute_mErrorLocation,
                                                                                    const GALGAS_AC_5F_machineDefinition & inAttribute_mRightOperand
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_weakModalComposition result ;
  if (inAttribute_mLeftOperand.isValid () && inAttribute_mErrorLocation.isValid () && inAttribute_mRightOperand.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_C_5F_weakModalComposition (inAttribute_mLeftOperand, inAttribute_mErrorLocation, inAttribute_mRightOperand COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_C_5F_weakModalComposition::insulate (LOCATION_ARGS) {
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_C_5F_weakModalComposition * p = (cPtr_C_5F_weakModalComposition *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_C_5F_weakModalComposition) ;
    cPtr_C_5F_weakModalComposition * r = NULL ;
    macroMyNew (r, cPtr_C_5F_weakModalComposition (p->mAttribute_mLeftOperand, p->mAttribute_mErrorLocation, p->mAttribute_mRightOperand COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_weakModalComposition::reader_mLeftOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_weakModalComposition * p = (const cPtr_C_5F_weakModalComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_weakModalComposition) ;
    result = p->mAttribute_mLeftOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_C_5F_weakModalComposition::reader_mErrorLocation (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_weakModalComposition * p = (const cPtr_C_5F_weakModalComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_weakModalComposition) ;
    result = p->mAttribute_mErrorLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_AC_5F_machineDefinition GALGAS_C_5F_weakModalComposition::reader_mRightOperand (UNUSED_LOCATION_ARGS) const {
  GALGAS_AC_5F_machineDefinition result ;
  if (NULL != mObjectPtr) {
    const cPtr_C_5F_weakModalComposition * p = (const cPtr_C_5F_weakModalComposition *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_C_5F_weakModalComposition) ;
    result = p->mAttribute_mRightOperand ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//              Pointer class for @C_weakModalComposition class              *
//---------------------------------------------------------------------------*

cPtr_C_5F_weakModalComposition::cPtr_C_5F_weakModalComposition (const GALGAS_AC_5F_machineDefinition & in_mLeftOperand,
                                                                const GALGAS_location & in_mErrorLocation,
                                                                const GALGAS_AC_5F_machineDefinition & in_mRightOperand
                                                                COMMA_LOCATION_ARGS) :
cPtr_AC_5F_machineDefinition (THERE),
mAttribute_mLeftOperand (in_mLeftOperand),
mAttribute_mErrorLocation (in_mErrorLocation),
mAttribute_mRightOperand (in_mRightOperand) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_C_5F_weakModalComposition::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_weakModalComposition ;
}

void cPtr_C_5F_weakModalComposition::description (C_String & ioString,
                                                  const PMSInt32 inIndentation) const {
  ioString << "[@C_weakModalComposition:" ;
  mAttribute_mLeftOperand.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mErrorLocation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightOperand.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @C_weakModalComposition type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_C_5F_weakModalComposition ("C_weakModalComposition",
                                                  & kTypeDescriptor_GALGAS_AC_5F_machineDefinition) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_C_5F_weakModalComposition::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_C_5F_weakModalComposition ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_C_5F_weakModalComposition::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_C_5F_weakModalComposition (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_C_5F_weakModalComposition GALGAS_C_5F_weakModalComposition::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_C_5F_weakModalComposition result ;
  const GALGAS_C_5F_weakModalComposition * p = (const GALGAS_C_5F_weakModalComposition *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_C_5F_weakModalComposition *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "C_weakModalComposition", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


