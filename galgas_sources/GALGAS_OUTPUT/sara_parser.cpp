//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'sara_parser.cpp'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 17th, 2010, at 20h30'13"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "sara_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "sara_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'start_symbol'              *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_start_5F_symbol_i0_ (C_Lexique_sara_5F_scanner & inLexique) {
  GGS_semanticContext var_cas_semanticContext = GGS_semanticContext::constructor_new (GGS_L_jobList ::constructor_emptyList (), GGS_M_machinesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (77))) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
        nt_component_ (inLexique, var_cas_semanticContext) ;
      switch (select_sara_5F_parser_0 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  if (var_cas_semanticContext.reader_componentsMap (inLexique COMMA_SOURCE_FILE_AT_LINE (83)).isBuilt ()) {
    ::routine_performComputations (inLexique,  var_cas_semanticContext.reader_componentsMap (inLexique COMMA_SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i1_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (91)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (92)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_state) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_display) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_uint  var_cas_machineIndex ;
  GGS_uint  automatic_var_2981_0 ;
  GGS_uint  automatic_var_2981_1 ;
  GGS_M_variablesMap  automatic_var_2981_2 ;
  const GGS_M_machinesMap  temp_2944 = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
  if (temp_2944.isBuilt ()) {
    temp_2944 (HERE)->method_searchKey (inLexique, var_cas_machineName, var_cas_machineIndex, automatic_var_2981_0, automatic_var_2981_1, automatic_var_2981_2 COMMA_SOURCE_FILE_AT_LINE (102)) ;
  }
  GGS_AC_job  var_cas_job = GGS_C_machineDisplayStates ::constructor_new (inLexique, var_cas_machineIndex COMMA_SOURCE_FILE_AT_LINE (104)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i2_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (113)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (114)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_trans) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_display) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_uint  var_cas_machineIndex ;
  GGS_uint  automatic_var_3657_0 ;
  GGS_uint  automatic_var_3657_1 ;
  GGS_M_variablesMap  automatic_var_3657_2 ;
  const GGS_M_machinesMap  temp_3620 = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
  if (temp_3620.isBuilt ()) {
    temp_3620 (HERE)->method_searchKey (inLexique, var_cas_machineName, var_cas_machineIndex, automatic_var_3657_0, automatic_var_3657_1, automatic_var_3657_2 COMMA_SOURCE_FILE_AT_LINE (124)) ;
  }
  GGS_AC_job  var_cas_job = GGS_C_machineDisplayTransitions ::constructor_new (inLexique, var_cas_machineIndex COMMA_SOURCE_FILE_AT_LINE (126)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i3_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (135)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_first) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_state) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_display) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_uint  var_cas_machineIndex ;
  GGS_uint  automatic_var_4350_0 ;
  GGS_uint  automatic_var_4350_1 ;
  GGS_M_variablesMap  automatic_var_4350_2 ;
  const GGS_M_machinesMap  temp_4313 = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (147)) ;
  if (temp_4313.isBuilt ()) {
    temp_4313 (HERE)->method_searchKey (inLexique, var_cas_machineName, var_cas_machineIndex, automatic_var_4350_0, automatic_var_4350_1, automatic_var_4350_2 COMMA_SOURCE_FILE_AT_LINE (147)) ;
  }
  GGS_AC_job  var_cas_job = GGS_C_machineDisplayInitialStates ::constructor_new (inLexique, var_cas_machineIndex COMMA_SOURCE_FILE_AT_LINE (149)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i4_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (158)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (159)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_last) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_state) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_display) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_uint  var_cas_machineIndex ;
  GGS_uint  automatic_var_5044_0 ;
  GGS_uint  automatic_var_5044_1 ;
  GGS_M_variablesMap  automatic_var_5044_2 ;
  const GGS_M_machinesMap  temp_5007 = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (170)) ;
  if (temp_5007.isBuilt ()) {
    temp_5007 (HERE)->method_searchKey (inLexique, var_cas_machineName, var_cas_machineIndex, automatic_var_5044_0, automatic_var_5044_1, automatic_var_5044_2 COMMA_SOURCE_FILE_AT_LINE (170)) ;
  }
  GGS_AC_job  var_cas_job = GGS_C_machineDisplayTerminalStates ::constructor_new (inLexique, var_cas_machineIndex COMMA_SOURCE_FILE_AT_LINE (172)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i5_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (181)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (182)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_check) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_uint  var_cas_machineIndex ;
  GGS_uint  automatic_var_5714_0 ;
  GGS_uint  automatic_var_5714_1 ;
  GGS_M_variablesMap  automatic_var_5714_2 ;
  const GGS_M_machinesMap  temp_5677 = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (191)) ;
  if (temp_5677.isBuilt ()) {
    temp_5677 (HERE)->method_searchKey (inLexique, var_cas_machineName, var_cas_machineIndex, automatic_var_5714_0, automatic_var_5714_1, automatic_var_5714_2 COMMA_SOURCE_FILE_AT_LINE (191)) ;
  }
  GGS_AC_job  var_cas_job = GGS_C_machineCheck ::constructor_new (inLexique, var_cas_machineIndex, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (193)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i6_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (202)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (203)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_checkidentical) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName1 ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName1) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName2 ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName2) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_uint  var_cas_machineIndex1 ;
  GGS_uint  automatic_var_6455_0 ;
  GGS_uint  automatic_var_6455_1 ;
  GGS_M_variablesMap  automatic_var_6455_2 ;
  const GGS_M_machinesMap  temp_6416 = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (215)) ;
  if (temp_6416.isBuilt ()) {
    temp_6416 (HERE)->method_searchKey (inLexique, var_cas_machineName1, var_cas_machineIndex1, automatic_var_6455_0, automatic_var_6455_1, automatic_var_6455_2 COMMA_SOURCE_FILE_AT_LINE (215)) ;
  }
  GGS_uint  var_cas_machineIndex2 ;
  GGS_uint  automatic_var_6602_0 ;
  GGS_uint  automatic_var_6602_1 ;
  GGS_M_variablesMap  automatic_var_6602_2 ;
  const GGS_M_machinesMap  temp_6563 = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (218)) ;
  if (temp_6563.isBuilt ()) {
    temp_6563 (HERE)->method_searchKey (inLexique, var_cas_machineName2, var_cas_machineIndex2, automatic_var_6602_0, automatic_var_6602_1, automatic_var_6602_2 COMMA_SOURCE_FILE_AT_LINE (218)) ;
  }
  GGS_AC_job  var_cas_job = GGS_C_machineCheckIdentical ::constructor_new (inLexique, var_cas_machineIndex1, var_cas_machineIndex2 COMMA_SOURCE_FILE_AT_LINE (220)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i7_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (229)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (230)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_checkbool) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_uint  var_cas_machineIndex ;
  GGS_uint  automatic_var_7285_0 ;
  GGS_uint  automatic_var_7285_1 ;
  GGS_M_variablesMap  automatic_var_7285_2 ;
  const GGS_M_machinesMap  temp_7248 = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (239)) ;
  if (temp_7248.isBuilt ()) {
    temp_7248 (HERE)->method_searchKey (inLexique, var_cas_machineName, var_cas_machineIndex, automatic_var_7285_0, automatic_var_7285_1, automatic_var_7285_2 COMMA_SOURCE_FILE_AT_LINE (239)) ;
  }
  GGS_AC_job  var_cas_job = GGS_C_machineCheck ::constructor_new (inLexique, var_cas_machineIndex, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (241)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i8_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_use_5F_and) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_job  var_cas_job = GGS_typeUse_AND ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (252)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i9_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_use_5F_ite) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_job  var_cas_job = GGS_typeUse_ITE ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (263)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i10_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_use_5F_and_5F_ite) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_job  var_cas_job = GGS_typeUse_AND_ITE ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (274)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i11_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_and_5F_cache) COMMA_HERE) ;
  GGS_luint  var_cas_size ;
  inLexique.assignFromAttribute_ulongValue (var_cas_size) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_literal_5F_integer) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_job  var_cas_job = GGS_typeResize_AND_cache ::constructor_new (inLexique, var_cas_size COMMA_SOURCE_FILE_AT_LINE (287)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i12_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_ite_5F_cache) COMMA_HERE) ;
  GGS_luint  var_cas_size ;
  inLexique.assignFromAttribute_ulongValue (var_cas_size) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_literal_5F_integer) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_job  var_cas_job = GGS_typeResize_ITE_cache ::constructor_new (inLexique, var_cas_size COMMA_SOURCE_FILE_AT_LINE (299)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i13_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_map) COMMA_HERE) ;
  GGS_luint  var_cas_size ;
  inLexique.assignFromAttribute_ulongValue (var_cas_size) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_literal_5F_integer) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_job  var_cas_job = GGS_typeResizeMap ::constructor_new (inLexique, var_cas_size COMMA_SOURCE_FILE_AT_LINE (312)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i14_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_bdd) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_AC_job  var_cas_job = GGS_typeDisplayBDDstats ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (323)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i15_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (332)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (333)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
        GGS_lstring  var_cas_inputVarName ;
        inLexique.assignFromAttribute_identifierString (var_cas_inputVarName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_inputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (343)) ;
      switch (select_sara_5F_parser_1 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  switch (select_sara_5F_parser_2 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_3 = true ;
        while (syntaxRepeat_3) {
            GGS_lstring  var_cas_outputVarName ;
            inLexique.assignFromAttribute_identifierString (var_cas_outputVarName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_outputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (356)) ;
          switch (select_sara_5F_parser_3 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_3 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_4 = true ;
    while (syntaxRepeat_4) {
        GGS_lstring  var_cas_outputVarName ;
        inLexique.assignFromAttribute_identifierString (var_cas_outputVarName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_outputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (368)) ;
      switch (select_sara_5F_parser_4 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_4 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  GGS_AC_machineDefinition  var_cas_definition ;
  nt_definition_5F_expression_ (inLexique, var_cas_ioSemanticContext, var_cas_variablesMap, var_cas_definition) ;
  const GGS_uint  var_cas_machineIndex = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (378)).reader_count () ;
  var_cas_ioSemanticContext.machinesMap.modifier_insertKey (inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap COMMA_SOURCE_FILE_AT_LINE (379)) ;
  GGS_AC_job  var_cas_machine = GGS_C_machineComponent ::constructor_new (inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_definition COMMA_SOURCE_FILE_AT_LINE (381)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_machine) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i16_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (391)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (392)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_modalcompadd) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
        GGS_lstring  var_cas_inputVarName ;
        inLexique.assignFromAttribute_identifierString (var_cas_inputVarName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_inputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (403)) ;
      switch (select_sara_5F_parser_5 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  switch (select_sara_5F_parser_6 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_7 = true ;
        while (syntaxRepeat_7) {
            GGS_lstring  var_cas_outputVarName ;
            inLexique.assignFromAttribute_identifierString (var_cas_outputVarName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_outputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (416)) ;
          switch (select_sara_5F_parser_7 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_7 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
        GGS_lstring  var_cas_outputVarName ;
        inLexique.assignFromAttribute_identifierString (var_cas_outputVarName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_outputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (428)) ;
      switch (select_sara_5F_parser_8 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  GGS_M_modesMap  var_cas_modeMap ;
  GGS_ListForModes  var_cas_inclusionList ;
  nt_modalcompadd_5F_definition_ (inLexique, var_cas_ioSemanticContext, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList) ;
  const GGS_uint  var_cas_machineIndex = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (444)).reader_count () ;
  var_cas_ioSemanticContext.machinesMap.modifier_insertKey (inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap COMMA_SOURCE_FILE_AT_LINE (445)) ;
  GGS_AC_job  var_cas_machine = GGS_C_machineDefinedByAdditiveModalComp ::constructor_new (inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList COMMA_SOURCE_FILE_AT_LINE (447)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_machine) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i17_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (465)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (466)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_modalcompsub) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
        GGS_lstring  var_cas_inputVarName ;
        inLexique.assignFromAttribute_identifierString (var_cas_inputVarName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_inputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (477)) ;
      switch (select_sara_5F_parser_9 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  switch (select_sara_5F_parser_10 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_11 = true ;
        while (syntaxRepeat_11) {
            GGS_lstring  var_cas_outputVarName ;
            inLexique.assignFromAttribute_identifierString (var_cas_outputVarName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_outputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (490)) ;
          switch (select_sara_5F_parser_11 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_11 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
        GGS_lstring  var_cas_outputVarName ;
        inLexique.assignFromAttribute_identifierString (var_cas_outputVarName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_outputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (502)) ;
      switch (select_sara_5F_parser_12 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
  GGS_M_modesMap  var_cas_modeMap ;
  GGS_ListForModes  var_cas_exclusionList ;
  nt_modalcompsub_5F_definition_ (inLexique, var_cas_ioSemanticContext, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList) ;
  const GGS_uint  var_cas_machineIndex = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (518)).reader_count () ;
  var_cas_ioSemanticContext.machinesMap.modifier_insertKey (inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap COMMA_SOURCE_FILE_AT_LINE (519)) ;
  GGS_AC_job  var_cas_machine = GGS_C_machineDefinedBySubstractiveModalComp ::constructor_new (inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList COMMA_SOURCE_FILE_AT_LINE (521)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_machine) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_component_i18_ (C_Lexique_sara_5F_scanner & inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_scenario) COMMA_HERE) ;
  GGS_M_variablesMap  var_cas_variablesMap = GGS_M_variablesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (538)) ;
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (539)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  GGS_lstring  var_cas_machineName ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  GGS_uint  var_cas_machineIndex ;
  GGS_uint  var_cas_inputVariablesCountFromDefinition ;
  GGS_uint  var_cas_inputAndInternalVariablesCountFromDefinition ;
  GGS_M_variablesMap  var_cas_variablesMapFromDefinition ;
  const GGS_M_machinesMap  temp_15713 = var_cas_ioSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (549)) ;
  if (temp_15713.isBuilt ()) {
    temp_15713 (HERE)->method_searchKey (inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCountFromDefinition, var_cas_inputAndInternalVariablesCountFromDefinition, var_cas_variablesMapFromDefinition COMMA_SOURCE_FILE_AT_LINE (549)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_13 = true ;
    while (syntaxRepeat_13) {
        GGS_lstring  var_cas_inputVarName ;
        inLexique.assignFromAttribute_identifierString (var_cas_inputVarName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_inputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (555)) ;
      switch (select_sara_5F_parser_13 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_13 = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  const GGS_bool cond_16444 = (var_cas_inputVariablesCountFromDefinition).operator_isNotEqual (var_cas_inputVariablesCount) ;
  if (cond_16444.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("This declaration names ")).operator_concat (var_cas_inputVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (563)))).operator_concat (GGS_string (" input variable(s), but machine definition names "))).operator_concat (var_cas_inputVariablesCountFromDefinition.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (564)))).operator_concat (GGS_string (" input variable(s)")) COMMA_SOURCE_FILE_AT_LINE (565)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  switch (select_sara_5F_parser_14 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_15 = true ;
        while (syntaxRepeat_15) {
            GGS_lstring  var_cas_outputVarName ;
            inLexique.assignFromAttribute_identifierString (var_cas_outputVarName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_outputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (573)) ;
          switch (select_sara_5F_parser_15 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_15 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count () ;
  const GGS_bool cond_17174 = (var_cas_inputAndInternalVariablesCountFromDefinition).operator_isNotEqual (var_cas_inputAndInternalVariablesCount) ;
  if (cond_17174.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("This declaration names ")).operator_concat (var_cas_inputAndInternalVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (582)))).operator_concat (GGS_string (" input and internal variable(s), but machine definition names "))).operator_concat (var_cas_inputAndInternalVariablesCountFromDefinition.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (583)))).operator_concat (GGS_string (" input and internal variable(s)")) COMMA_SOURCE_FILE_AT_LINE (584)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_16 = true ;
    while (syntaxRepeat_16) {
        GGS_lstring  var_cas_outputVarName ;
        inLexique.assignFromAttribute_identifierString (var_cas_outputVarName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (inLexique, var_cas_outputVarName, var_cas_variablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (590)) ;
      switch (select_sara_5F_parser_16 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_16 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_outputVariablesCount = var_cas_variablesMap.reader_count () ;
  GGS_uint  var_cas_outputVariablesCountFromDefinition = var_cas_variablesMapFromDefinition.reader_count () ;
  const GGS_bool cond_17850 = (var_cas_outputVariablesCountFromDefinition).operator_isNotEqual (var_cas_outputVariablesCount) ;
  if (cond_17850.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("This declaration names ")).operator_concat (var_cas_outputVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (599)))).operator_concat (GGS_string (" variables, but machine definition names "))).operator_concat (var_cas_outputVariablesCountFromDefinition.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (600)))).operator_concat (GGS_string (" variables")) COMMA_SOURCE_FILE_AT_LINE (601)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_L_scenarioList  var_cas_scenarioList = GGS_L_scenarioList ::constructor_emptyList () ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
        GGS_lstring  var_cas_scenarioTitle ;
        inLexique.assignFromAttribute_identifierString (var_cas_scenarioTitle) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
        GGS_L_inputScenario  var_cas_inputScenario = GGS_L_inputScenario ::constructor_emptyList () ;
        { bool syntaxRepeat_18 = true ;
          while (syntaxRepeat_18) {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3A_) COMMA_HERE) ;
              GGS_L_inputConfigurationForScenario  var_cas_inputConfigurationForScenario = GGS_L_inputConfigurationForScenario ::constructor_emptyList () ;
              { bool syntaxRepeat_19 = true ;
                while (syntaxRepeat_19) {
                    GGS_luint  var_cas_v ;
                    inLexique.assignFromAttribute_ulongValue (var_cas_v) ;
                    inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_literal_5F_integer) COMMA_HERE) ;
                    const GGS_bool cond_18299 = (var_cas_v.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (614))).operator_strictSup (GGS_uint (1U)) ;
                    if (cond_18299.isBuiltAndTrue ()) {
                      var_cas_v.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this value is not a  binary digit") COMMA_SOURCE_FILE_AT_LINE (616)) ;
                    }
                    var_cas_inputConfigurationForScenario.addAssign_operation (var_cas_v) ;
                  switch (select_sara_5F_parser_19 (inLexique)) {
                    case 2 : {
                      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_19 = false ;
                      break ;
                  }
                }
              }
              const GGS_bool cond_18653 = (var_cas_inputVariablesCount).operator_isNotEqual (var_cas_inputConfigurationForScenario.reader_length ()) ;
              if (cond_18653.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((GGS_string ("this input configuration names ")).operator_concat (var_cas_inputConfigurationForScenario.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (622)))).operator_concat (GGS_string (" input variable(s), instead of "))).operator_concat (var_cas_inputVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (622))) COMMA_SOURCE_FILE_AT_LINE (623)) ;
              }
              var_cas_inputScenario.addAssign_operation (var_cas_inputConfigurationForScenario) ;
            switch (select_sara_5F_parser_18 (inLexique)) {
              case 2 : {
                } break ;
              default :
                syntaxRepeat_18 = false ;
                break ;
            }
          }
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
        var_cas_scenarioList.addAssign_operation (var_cas_scenarioTitle, var_cas_inputScenario) ;
      switch (select_sara_5F_parser_17 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_AC_job  var_cas_machine = GGS_C_scenarioComponent ::constructor_new (inLexique, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_scenarioList COMMA_SOURCE_FILE_AT_LINE (633)) ;
  var_cas_ioSemanticContext.componentsMap.addAssign_operation (var_cas_machine) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'io_bool_expression'           *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_io_5F_bool_5F_expression_i19_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  nt_io_5F_and_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_outExpression) ;
  { bool syntaxRepeat_20 = true ;
    while (syntaxRepeat_20) {
      switch (select_sara_5F_parser_20 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7C_) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_5F_and_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_orExpression ::constructor_new (inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_SOURCE_FILE_AT_LINE (650)) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__5E_) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_5F_and_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_xorExpression ::constructor_new (inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_SOURCE_FILE_AT_LINE (655)) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_5F_and_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_impliesExpression ::constructor_new (inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_SOURCE_FILE_AT_LINE (660)) ;
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3D_) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_5F_and_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_equalExpression ::constructor_new (inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_SOURCE_FILE_AT_LINE (665)) ;
          } break ;
        default :
          syntaxRepeat_20 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'io_and_expression'            *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_io_5F_and_5F_expression_i20_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  nt_io_5F_primary_ (inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_outExpression) ;
  { bool syntaxRepeat_21 = true ;
    while (syntaxRepeat_21) {
      switch (select_sara_5F_parser_21 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__26_) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_5F_primary_ (inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_andExpression ::constructor_new (inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_SOURCE_FILE_AT_LINE (682)) ;
          } break ;
        default :
          syntaxRepeat_21 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_io_5F_primary_i21_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  nt_io_5F_bool_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_outExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_io_5F_primary_i22_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext /* var_cas_inSemanticContext */,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_inputVarName ;
  inLexique.assignFromAttribute_identifierString (var_cas_inputVarName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_uint  var_cas_inputVarIndex ;
  const GGS_M_variablesMap  temp_21370 = var_cas_ioVarMap ;
  if (temp_21370.isBuilt ()) {
    temp_21370 (HERE)->method_searchKey (inLexique, var_cas_inputVarName, var_cas_inputVarIndex COMMA_SOURCE_FILE_AT_LINE (708)) ;
  }
  var_cas_outExpression = GGS_C_VariableExpression ::constructor_new (inLexique, var_cas_inputVarIndex COMMA_SOURCE_FILE_AT_LINE (709)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_io_5F_primary_i23_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7E_) COMMA_HERE) ;
  GGS_AC_boolExpression  var_cas_expression ;
  nt_io_5F_primary_ (inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_expression) ;
  var_cas_outExpression = GGS_C_notExpression ::constructor_new (inLexique, var_cas_expression COMMA_SOURCE_FILE_AT_LINE (722)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_io_5F_primary_i24_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext /* var_cas_inSemanticContext */,
                                GGS_M_variablesMap  &/* var_cas_ioVarMap */,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_false) COMMA_HERE) ;
  var_cas_outExpression = GGS_C_falseExpression ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (733)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_io_5F_primary_i25_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext /* var_cas_inSemanticContext */,
                                GGS_M_variablesMap  &/* var_cas_ioVarMap */,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_true) COMMA_HERE) ;
  var_cas_outExpression = GGS_C_trueExpression ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (744)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_io_5F_primary_i26_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_machineIdentifier ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineIdentifier) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  GGS_uint  var_cas_machineInputVariableCount ;
  GGS_uint  var_cas_machineInputAndInternalVariableCount ;
  GGS_M_variablesMap  var_cas_machineVariablesMap ;
  GGS_uint  var_cas_indexOfImportedMachine ;
  const GGS_M_machinesMap  temp_22899 = var_cas_inSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (760)) ;
  if (temp_22899.isBuilt ()) {
    temp_22899 (HERE)->method_searchKey (inLexique, var_cas_machineIdentifier, var_cas_indexOfImportedMachine, var_cas_machineInputVariableCount, var_cas_machineInputAndInternalVariableCount, var_cas_machineVariablesMap COMMA_SOURCE_FILE_AT_LINE (760)) ;
  }
  GGS_L_translationVector  var_cas_translationVector = GGS_L_translationVector ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_22 = true ;
    while (syntaxRepeat_22) {
        GGS_lstring  var_cas_inputVar ;
        inLexique.assignFromAttribute_identifierString (var_cas_inputVar) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_uint  var_cas_inputVarIndex ;
        const GGS_M_variablesMap  temp_23234 = var_cas_ioVarMap ;
        if (temp_23234.isBuilt ()) {
          temp_23234 (HERE)->method_searchKey (inLexique, var_cas_inputVar, var_cas_inputVarIndex COMMA_SOURCE_FILE_AT_LINE (768)) ;
        }
        var_cas_translationVector.addAssign_operation (var_cas_inputVarIndex) ;
      switch (select_sara_5F_parser_22 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_22 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_inputVariablesCount = var_cas_translationVector.reader_length () ;
  const GGS_bool cond_23686 = (var_cas_inputVariablesCount).operator_isNotEqual (var_cas_machineInputVariableCount) ;
  if (cond_23686.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((GGS_string ("The '$")).operator_concat (var_cas_machineIdentifier)).operator_concat (GGS_string ("' machine defines "))).operator_concat (var_cas_machineInputVariableCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (776)))).operator_concat (GGS_string (" input variable(s), but this operand defines "))).operator_concat (var_cas_inputVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (777)))).operator_concat (GGS_string (" input variable(s)")) COMMA_SOURCE_FILE_AT_LINE (778)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  switch (select_sara_5F_parser_23 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_24 = true ;
        while (syntaxRepeat_24) {
            GGS_lstring  var_cas_internalVar ;
            inLexique.assignFromAttribute_identifierString (var_cas_internalVar) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_uint  var_cas_internalVarIndex ;
            const GGS_M_variablesMap  temp_23875 = var_cas_ioVarMap ;
            if (temp_23875.isBuilt ()) {
              temp_23875 (HERE)->method_searchKey (inLexique, var_cas_internalVar, var_cas_internalVarIndex COMMA_SOURCE_FILE_AT_LINE (787)) ;
            }
            var_cas_translationVector.addAssign_operation (var_cas_internalVarIndex) ;
          switch (select_sara_5F_parser_24 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_24 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount = var_cas_translationVector.reader_length () ;
  const GGS_bool cond_24450 = (var_cas_inputAndInternalVariablesCount).operator_isNotEqual (var_cas_machineInputAndInternalVariableCount) ;
  if (cond_24450.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((GGS_string ("The '$")).operator_concat (var_cas_machineIdentifier.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (796)))).operator_concat (GGS_string ("' machine defines "))).operator_concat (var_cas_machineInputAndInternalVariableCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (796)))).operator_concat (GGS_string (" input and internal variable(s), but this operand defines "))).operator_concat (var_cas_inputAndInternalVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (797)))).operator_concat (GGS_string (" input and internal variable(s)")) COMMA_SOURCE_FILE_AT_LINE (798)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
        GGS_lstring  var_cas_outputVar ;
        inLexique.assignFromAttribute_identifierString (var_cas_outputVar) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_uint  var_cas_outputVarIndex ;
        const GGS_M_variablesMap  temp_24607 = var_cas_ioVarMap ;
        if (temp_24607.isBuilt ()) {
          temp_24607 (HERE)->method_searchKey (inLexique, var_cas_outputVar, var_cas_outputVarIndex COMMA_SOURCE_FILE_AT_LINE (805)) ;
        }
        var_cas_translationVector.addAssign_operation (var_cas_outputVarIndex) ;
      switch (select_sara_5F_parser_25 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_allVariablesCount = var_cas_translationVector.reader_length () ;
  GGS_uint  var_cas_machineAllVariablesCount = var_cas_machineVariablesMap.reader_count () ;
  const GGS_bool cond_25113 = (var_cas_allVariablesCount).operator_isNotEqual (var_cas_machineAllVariablesCount) ;
  if (cond_25113.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((GGS_string ("The '$")).operator_concat (var_cas_machineIdentifier.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (814)))).operator_concat (GGS_string ("' machine defines "))).operator_concat (var_cas_machineAllVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (814)))).operator_concat (GGS_string (" variables, but this operand defines "))).operator_concat (var_cas_allVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (815)))).operator_concat (GGS_string (" variables")) COMMA_SOURCE_FILE_AT_LINE (816)) ;
  }
  var_cas_outExpression = GGS_C_importBoolMachine ::constructor_new (inLexique, var_cas_indexOfImportedMachine, var_cas_machineIdentifier.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (819)), var_cas_translationVector COMMA_SOURCE_FILE_AT_LINE (817)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'definition_expression'          *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_definition_5F_expression_i27_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  nt_definition_5F_expression_5F_term_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_outDefinition) ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
      switch (select_sara_5F_parser_26 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2B_) COMMA_HERE) ;
          GGS_AC_machineDefinition  var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_5F_expression_5F_term_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_orComposition ::constructor_new (inLexique, var_cas_leftOperand, var_cas_rightOperand COMMA_SOURCE_FILE_AT_LINE (840)) ;
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'definition_expression_term'       *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_definition_5F_expression_5F_term_i28_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  nt_definition_5F_expression_5F_factor_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_outDefinition) ;
  { bool syntaxRepeat_27 = true ;
    while (syntaxRepeat_27) {
      switch (select_sara_5F_parser_27 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2A_) COMMA_HERE) ;
          GGS_location  var_cas_errorLocation = GGS_location (inLexique) ;
          GGS_AC_machineDefinition  var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_5F_expression_5F_factor_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_strongModalComposition ::constructor_new (inLexique, var_cas_leftOperand, var_cas_errorLocation, var_cas_rightOperand COMMA_SOURCE_FILE_AT_LINE (859)) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2A__2A_) COMMA_HERE) ;
          GGS_location  var_cas_errorLocation = GGS_location (inLexique) ;
          GGS_AC_machineDefinition  var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_5F_expression_5F_factor_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_weakModalComposition ::constructor_new (inLexique, var_cas_leftOperand, var_cas_errorLocation, var_cas_rightOperand COMMA_SOURCE_FILE_AT_LINE (866)) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7C__7C_) COMMA_HERE) ;
          GGS_AC_machineDefinition  var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_5F_expression_5F_factor_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_parallelComposition ::constructor_new (inLexique, var_cas_leftOperand, var_cas_rightOperand COMMA_SOURCE_FILE_AT_LINE (872)) ;
          } break ;
        default :
          syntaxRepeat_27 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'modalcompadd_definition'         *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_modalcompadd_5F_definition_i29_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_M_modesMap  &var_cas_outModeMap,
                                GGS_ListForModes  &var_cas_outInclusionList) {
  var_cas_outModeMap = GGS_M_modesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (884)) ;
  var_cas_outInclusionList = GGS_ListForModes ::constructor_emptyList () ;
  { bool syntaxRepeat_28 = true ;
    while (syntaxRepeat_28) {
        GGS_lstring  var_cas_modeName ;
        inLexique.assignFromAttribute_identifierString (var_cas_modeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3A_) COMMA_HERE) ;
        GGS_AC_machineDefinition  var_cas_def ;
        nt_definition_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
        var_cas_outModeMap.modifier_insertKey (inLexique, var_cas_modeName, var_cas_outModeMap.reader_count (), var_cas_def COMMA_SOURCE_FILE_AT_LINE (892)) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
      switch (select_sara_5F_parser_28 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_28 = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat_29 = true ;
    while (syntaxRepeat_29) {
      switch (select_sara_5F_parser_29 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_include) COMMA_HERE) ;
          GGS_lstring  var_cas_sourceModeName ;
          inLexique.assignFromAttribute_identifierString (var_cas_sourceModeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_uint  var_cas_sourceModeIndex ;
          GGS_AC_machineDefinition  automatic_var_28133_0 ;
          const GGS_M_modesMap  temp_28096 = var_cas_outModeMap ;
          if (temp_28096.isBuilt ()) {
            temp_28096 (HERE)->method_searchKey (inLexique, var_cas_sourceModeName, var_cas_sourceModeIndex, automatic_var_28133_0 COMMA_SOURCE_FILE_AT_LINE (902)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_to) COMMA_HERE) ;
          GGS_lstring  var_cas_targetModeName ;
          inLexique.assignFromAttribute_identifierString (var_cas_targetModeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_uint  var_cas_targetModeIndex ;
          GGS_AC_machineDefinition  automatic_var_28303_0 ;
          const GGS_M_modesMap  temp_28266 = var_cas_outModeMap ;
          if (temp_28266.isBuilt ()) {
            temp_28266 (HERE)->method_searchKey (inLexique, var_cas_targetModeName, var_cas_targetModeIndex, automatic_var_28303_0 COMMA_SOURCE_FILE_AT_LINE (907)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
          const GGS_bool cond_28527 = (var_cas_sourceModeIndex).operator_isEqual (var_cas_targetModeIndex) ;
          if (cond_28527.isBuiltAndTrue ()) {
            var_cas_targetModeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("unuseful include: 'modalcompadd' operator never adds transitions from terminal states to initial states of the same mode") COMMA_SOURCE_FILE_AT_LINE (910)) ;
          }else if (cond_28527.isBuiltAndFalse ()) {
            var_cas_outInclusionList.addAssign_operation (var_cas_sourceModeIndex, var_cas_targetModeIndex) ;
          }
          } break ;
        default :
          syntaxRepeat_29 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'modalcompsub_definition'         *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_modalcompsub_5F_definition_i30_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_M_modesMap  &var_cas_outModeMap,
                                GGS_ListForModes  &var_cas_outExclusionList) {
  var_cas_outModeMap = GGS_M_modesMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (925)) ;
  var_cas_outExclusionList = GGS_ListForModes ::constructor_emptyList () ;
  { bool syntaxRepeat_30 = true ;
    while (syntaxRepeat_30) {
        GGS_lstring  var_cas_modeName ;
        inLexique.assignFromAttribute_identifierString (var_cas_modeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3A_) COMMA_HERE) ;
        GGS_AC_machineDefinition  var_cas_def ;
        nt_definition_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
        var_cas_outModeMap.modifier_insertKey (inLexique, var_cas_modeName, var_cas_outModeMap.reader_count (), var_cas_def COMMA_SOURCE_FILE_AT_LINE (933)) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
      switch (select_sara_5F_parser_30 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_30 = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat_31 = true ;
    while (syntaxRepeat_31) {
      switch (select_sara_5F_parser_31 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_exclude) COMMA_HERE) ;
          GGS_lstring  var_cas_sourceModeName ;
          inLexique.assignFromAttribute_identifierString (var_cas_sourceModeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_uint  var_cas_sourceModeIndex ;
          GGS_AC_machineDefinition  automatic_var_29427_0 ;
          const GGS_M_modesMap  temp_29390 = var_cas_outModeMap ;
          if (temp_29390.isBuilt ()) {
            temp_29390 (HERE)->method_searchKey (inLexique, var_cas_sourceModeName, var_cas_sourceModeIndex, automatic_var_29427_0 COMMA_SOURCE_FILE_AT_LINE (943)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_to) COMMA_HERE) ;
          GGS_lstring  var_cas_targetModeName ;
          inLexique.assignFromAttribute_identifierString (var_cas_targetModeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_uint  var_cas_targetModeIndex ;
          GGS_AC_machineDefinition  automatic_var_29597_0 ;
          const GGS_M_modesMap  temp_29560 = var_cas_outModeMap ;
          if (temp_29560.isBuilt ()) {
            temp_29560 (HERE)->method_searchKey (inLexique, var_cas_targetModeName, var_cas_targetModeIndex, automatic_var_29597_0 COMMA_SOURCE_FILE_AT_LINE (948)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
          const GGS_bool cond_29821 = (var_cas_sourceModeIndex).operator_isEqual (var_cas_targetModeIndex) ;
          if (cond_29821.isBuiltAndTrue ()) {
            var_cas_targetModeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("unuseful include: 'modalcompadd' operator never adds transitions from terminal states to initial states of the same mode") COMMA_SOURCE_FILE_AT_LINE (951)) ;
          }else if (cond_29821.isBuiltAndFalse ()) {
            var_cas_outExclusionList.addAssign_operation (var_cas_sourceModeIndex, var_cas_targetModeIndex) ;
          }
          } break ;
        default :
          syntaxRepeat_31 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'definition_expression_factor'      *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_definition_5F_expression_5F_factor_i31_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  switch (select_sara_5F_parser_32 (inLexique)) {
    case 1 : {
      nt_explicit_5F_automaton_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_outDefinition) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
      nt_definition_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_outDefinition) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_M_variablesMap  var_cas_extendedVariablesMap = var_cas_variablesMap ;
      GGS_uint  var_cas_previousVariableCount = var_cas_extendedVariablesMap.reader_count () ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3F_) COMMA_HERE) ;
      { bool syntaxRepeat_33 = true ;
        while (syntaxRepeat_33) {
            GGS_lstring  var_cas_variableName ;
            inLexique.assignFromAttribute_identifierString (var_cas_variableName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_extendedVariablesMap.modifier_insertKey (inLexique, var_cas_variableName, var_cas_extendedVariablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (978)) ;
          switch (select_sara_5F_parser_33 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_33 = false ;
              break ;
          }
        }
      }
      GGS_uint  var_cas_actualVariableCount = var_cas_extendedVariablesMap.reader_count () ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_extendedVariablesMap, var_cas_def) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_existsDefinition ::constructor_new (inLexique, var_cas_previousVariableCount, var_cas_actualVariableCount, var_cas_def COMMA_SOURCE_FILE_AT_LINE (987)) ;
      } break ;
    case 4 : {
      GGS_M_variablesMap  var_cas_extendedVariablesMap = var_cas_variablesMap ;
      GGS_uint  var_cas_previousVariableCount = var_cas_extendedVariablesMap.reader_count () ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__21_) COMMA_HERE) ;
      { bool syntaxRepeat_34 = true ;
        while (syntaxRepeat_34) {
            GGS_lstring  var_cas_variableName ;
            inLexique.assignFromAttribute_identifierString (var_cas_variableName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_extendedVariablesMap.modifier_insertKey (inLexique, var_cas_variableName, var_cas_extendedVariablesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (995)) ;
          switch (select_sara_5F_parser_34 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_34 = false ;
              break ;
          }
        }
      }
      GGS_uint  var_cas_actualVariableCount = var_cas_extendedVariablesMap.reader_count () ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_extendedVariablesMap, var_cas_def) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_forallDefinition ::constructor_new (inLexique, var_cas_previousVariableCount, var_cas_actualVariableCount, var_cas_def COMMA_SOURCE_FILE_AT_LINE (1004)) ;
      } break ;
    case 5 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_bool) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_AC_boolExpression  var_cas_def ;
      nt_io_5F_bool_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_boolToSeqExpression ::constructor_new (inLexique, var_cas_def COMMA_SOURCE_FILE_AT_LINE (1010)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 6 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__40_) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_5F_expression_5F_factor_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_fullSaturationOperation ::constructor_new (inLexique, var_cas_def COMMA_SOURCE_FILE_AT_LINE (1016)) ;
      } break ;
    case 7 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7E_) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_5F_expression_5F_factor_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_complementationOperation ::constructor_new (inLexique, var_cas_def COMMA_SOURCE_FILE_AT_LINE (1021)) ;
      } break ;
    case 8 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_nofirst) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_suppressInitialStatesOperation ::constructor_new (inLexique, var_cas_def COMMA_SOURCE_FILE_AT_LINE (1027)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
      } break ;
    case 9 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_nolast) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_suppressTerminalStatesOperation ::constructor_new (inLexique, var_cas_def COMMA_SOURCE_FILE_AT_LINE (1034)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
      } break ;
    case 10 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_modalcompadd) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_M_modesMap  var_cas_modeMap ;
      GGS_ListForModes  var_cas_inclusionList ;
      nt_modalcompadd_5F_definition_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7D_) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_additiveModalCompositionComponent ::constructor_new (inLexique, var_cas_modeMap, var_cas_inclusionList COMMA_SOURCE_FILE_AT_LINE (1048)) ;
      } break ;
    case 11 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_modalcompsub) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_M_modesMap  var_cas_modeMap ;
      GGS_ListForModes  var_cas_exclusionList ;
      nt_modalcompsub_5F_definition_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7D_) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_substractiveModalCompositionComponent ::constructor_new (inLexique, var_cas_modeMap, var_cas_exclusionList COMMA_SOURCE_FILE_AT_LINE (1061)) ;
      } break ;
    case 12 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_trans) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7B_) COMMA_HERE) ;
      GGS_AC_boolExpression  var_cas_sourceExpression ;
      nt_io_5F_bool_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_sourceExpression) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_to) COMMA_HERE) ;
      GGS_AC_boolExpression  var_cas_targetExpression ;
      nt_io_5F_bool_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_targetExpression) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7D_) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_trans ::constructor_new (inLexique, var_cas_sourceExpression, var_cas_targetExpression COMMA_SOURCE_FILE_AT_LINE (1071)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'definition_expression_factor'      *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_definition_5F_expression_5F_factor_i32_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  GGS_lstring  var_cas_machineIdentifier ;
  inLexique.assignFromAttribute_identifierString (var_cas_machineIdentifier) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_machineIdf) COMMA_HERE) ;
  GGS_uint  var_cas_machineInputVariableCount ;
  GGS_uint  var_cas_machineInputAndInternalVariableCount ;
  GGS_M_variablesMap  var_cas_machineVariablesMap ;
  GGS_uint  var_cas_indexOfImportedMachine ;
  const GGS_M_machinesMap  temp_34110 = var_cas_inSemanticContext.reader_machinesMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1088)) ;
  if (temp_34110.isBuilt ()) {
    temp_34110 (HERE)->method_searchKey (inLexique, var_cas_machineIdentifier, var_cas_indexOfImportedMachine, var_cas_machineInputVariableCount, var_cas_machineInputAndInternalVariableCount, var_cas_machineVariablesMap COMMA_SOURCE_FILE_AT_LINE (1088)) ;
  }
  GGS_L_translationVector  var_cas_translationVector = GGS_L_translationVector ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_35 = true ;
    while (syntaxRepeat_35) {
        GGS_lstring  var_cas_inputVar ;
        inLexique.assignFromAttribute_identifierString (var_cas_inputVar) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_uint  var_cas_inputVarIndex ;
        const GGS_M_variablesMap  temp_34445 = var_cas_ioVarMap ;
        if (temp_34445.isBuilt ()) {
          temp_34445 (HERE)->method_searchKey (inLexique, var_cas_inputVar, var_cas_inputVarIndex COMMA_SOURCE_FILE_AT_LINE (1096)) ;
        }
        var_cas_translationVector.addAssign_operation (var_cas_inputVarIndex) ;
      switch (select_sara_5F_parser_35 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_35 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_inputVariablesCount = var_cas_translationVector.reader_length () ;
  const GGS_bool cond_34906 = (var_cas_inputVariablesCount).operator_isNotEqual (var_cas_machineInputVariableCount) ;
  if (cond_34906.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((GGS_string ("The '$")).operator_concat (var_cas_machineIdentifier.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1104)))).operator_concat (GGS_string ("' machine defines "))).operator_concat (var_cas_machineInputVariableCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1104)))).operator_concat (GGS_string (" input variable(s), but this operand defines "))).operator_concat (var_cas_inputVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1105)))).operator_concat (GGS_string (" input variable(s)")) COMMA_SOURCE_FILE_AT_LINE (1106)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  switch (select_sara_5F_parser_36 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_37 = true ;
        while (syntaxRepeat_37) {
            GGS_lstring  var_cas_internalVar ;
            inLexique.assignFromAttribute_identifierString (var_cas_internalVar) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_uint  var_cas_internalVarIndex ;
            const GGS_M_variablesMap  temp_35095 = var_cas_ioVarMap ;
            if (temp_35095.isBuilt ()) {
              temp_35095 (HERE)->method_searchKey (inLexique, var_cas_internalVar, var_cas_internalVarIndex COMMA_SOURCE_FILE_AT_LINE (1115)) ;
            }
            var_cas_translationVector.addAssign_operation (var_cas_internalVarIndex) ;
          switch (select_sara_5F_parser_37 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_37 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount = var_cas_translationVector.reader_length () ;
  const GGS_bool cond_35670 = (var_cas_inputAndInternalVariablesCount).operator_isNotEqual (var_cas_machineInputAndInternalVariableCount) ;
  if (cond_35670.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((GGS_string ("The '$")).operator_concat (var_cas_machineIdentifier.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1124)))).operator_concat (GGS_string ("' machine defines "))).operator_concat (var_cas_machineInputAndInternalVariableCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1124)))).operator_concat (GGS_string (" input and internal variable(s), but this operand defines "))).operator_concat (var_cas_inputAndInternalVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1125)))).operator_concat (GGS_string (" input and internal variable(s)")) COMMA_SOURCE_FILE_AT_LINE (1126)) ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_38 = true ;
    while (syntaxRepeat_38) {
        GGS_lstring  var_cas_outputVar ;
        inLexique.assignFromAttribute_identifierString (var_cas_outputVar) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_uint  var_cas_outputVarIndex ;
        const GGS_M_variablesMap  temp_35827 = var_cas_ioVarMap ;
        if (temp_35827.isBuilt ()) {
          temp_35827 (HERE)->method_searchKey (inLexique, var_cas_outputVar, var_cas_outputVarIndex COMMA_SOURCE_FILE_AT_LINE (1133)) ;
        }
        var_cas_translationVector.addAssign_operation (var_cas_outputVarIndex) ;
      switch (select_sara_5F_parser_38 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_38 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_uint  var_cas_allVariablesCount = var_cas_translationVector.reader_length () ;
  GGS_uint  var_cas_machineAllVariablesCount = var_cas_machineVariablesMap.reader_count () ;
  const GGS_bool cond_36333 = (var_cas_allVariablesCount).operator_isNotEqual (var_cas_machineAllVariablesCount) ;
  if (cond_36333.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((GGS_string ("The '$")).operator_concat (var_cas_machineIdentifier.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1142)))).operator_concat (GGS_string ("' machine defines "))).operator_concat (var_cas_machineAllVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1142)))).operator_concat (GGS_string (" variables, but this operand defines "))).operator_concat (var_cas_allVariablesCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1143)))).operator_concat (GGS_string (" variables")) COMMA_SOURCE_FILE_AT_LINE (1144)) ;
  }
  var_cas_outDefinition = GGS_C_importMachine ::constructor_new (inLexique, var_cas_indexOfImportedMachine, var_cas_translationVector COMMA_SOURCE_FILE_AT_LINE (1145)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'explicit_automaton'           *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::rule_sara_5F_parser_explicit_5F_automaton_i33_ (C_Lexique_sara_5F_scanner & inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  GGS_M_stateMap  var_cas_statesMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1157)) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList = GGS_L_stateDefinition ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_auto) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_state) COMMA_HERE) ;
  { bool syntaxRepeat_39 = true ;
    while (syntaxRepeat_39) {
        GGS_lstring  var_cas_stateName ;
        inLexique.assignFromAttribute_identifierString (var_cas_stateName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_statesMap.modifier_insertKey (inLexique, var_cas_stateName, var_cas_statesMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (1166)) ;
      switch (select_sara_5F_parser_39 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_39 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_L_statesDefinitionList  var_cas_initialStatesDefinitionList = GGS_L_statesDefinitionList ::constructor_emptyList () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_first) COMMA_HERE) ;
  { bool syntaxRepeat_40 = true ;
    while (syntaxRepeat_40) {
        GGS_lstring  var_cas_initialState ;
        inLexique.assignFromAttribute_identifierString (var_cas_initialState) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_uint  var_cas_initialStateIndex ;
        const GGS_M_stateMap  temp_37350 = var_cas_statesMap ;
        if (temp_37350.isBuilt ()) {
          temp_37350 (HERE)->method_searchKey (inLexique, var_cas_initialState, var_cas_initialStateIndex COMMA_SOURCE_FILE_AT_LINE (1178)) ;
        }
        var_cas_initialStatesDefinitionList.addAssign_operation (var_cas_initialStateIndex, GGS_location (inLexique)) ;
      switch (select_sara_5F_parser_40 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_40 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_L_statesDefinitionList  var_cas_terminalStatesDefinitionList = GGS_L_statesDefinitionList ::constructor_emptyList () ;
  switch (select_sara_5F_parser_41 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_last) COMMA_HERE) ;
      { bool syntaxRepeat_42 = true ;
        while (syntaxRepeat_42) {
            GGS_lstring  var_cas_terminalState ;
            inLexique.assignFromAttribute_identifierString (var_cas_terminalState) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
            GGS_uint  var_cas_terminalStateIndex ;
            const GGS_M_stateMap  temp_37745 = var_cas_statesMap ;
            if (temp_37745.isBuilt ()) {
              temp_37745 (HERE)->method_searchKey (inLexique, var_cas_terminalState, var_cas_terminalStateIndex COMMA_SOURCE_FILE_AT_LINE (1193)) ;
            }
            var_cas_terminalStatesDefinitionList.addAssign_operation (var_cas_terminalStateIndex, GGS_location (inLexique)) ;
          switch (select_sara_5F_parser_42 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_42 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_M_stateMap  var_cas_stateDefinitionMap = GGS_M_stateMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1201)) ;
  { bool syntaxRepeat_43 = true ;
    while (syntaxRepeat_43) {
        GGS_lstring  var_cas_stateName ;
        inLexique.assignFromAttribute_identifierString (var_cas_stateName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_uint  var_cas_stateIndex ;
        const GGS_M_stateMap  temp_38123 = var_cas_statesMap ;
        if (temp_38123.isBuilt ()) {
          temp_38123 (HERE)->method_searchKey (inLexique, var_cas_stateName, var_cas_stateIndex COMMA_SOURCE_FILE_AT_LINE (1207)) ;
        }
        var_cas_stateDefinitionMap.modifier_defineState (inLexique, var_cas_stateName, var_cas_stateDefinitionMap.reader_count () COMMA_SOURCE_FILE_AT_LINE (1208)) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3A_) COMMA_HERE) ;
        GGS_AC_boolExpression  var_cas_stateExpression ;
        nt_io_5F_bool_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_stateExpression) ;
        GGS_location  var_cas_endOfStateExpression = GGS_location (inLexique) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7B_) COMMA_HERE) ;
        GGS_L_transitionDefinition  var_cas_transitionsList = GGS_L_transitionDefinition ::constructor_emptyList () ;
        { bool syntaxRepeat_44 = true ;
          while (syntaxRepeat_44) {
            switch (select_sara_5F_parser_44 (inLexique)) {
              case 2 : {
                GGS_AC_boolExpression  var_cas_transitionInputExpression ;
                nt_io_5F_bool_5F_expression_ (inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_transitionInputExpression) ;
                GGS_location  var_cas_endOfExpression = GGS_location (inLexique) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_goto) COMMA_HERE) ;
                GGS_lstring  var_cas_targetStateName ;
                inLexique.assignFromAttribute_identifierString (var_cas_targetStateName) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken_identifier) COMMA_HERE) ;
                GGS_uint  var_cas_targetStateIndex ;
                const GGS_M_stateMap  temp_38882 = var_cas_statesMap ;
                if (temp_38882.isBuilt ()) {
                  temp_38882 (HERE)->method_searchKey (inLexique, var_cas_targetStateName, var_cas_targetStateIndex COMMA_SOURCE_FILE_AT_LINE (1226)) ;
                }
                var_cas_transitionsList.addAssign_operation (var_cas_transitionInputExpression, var_cas_endOfExpression, var_cas_targetStateIndex) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__3B_) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_44 = false ;
                break ;
            }
          }
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7D_) COMMA_HERE) ;
        var_cas_stateDefinitionList.addAssign_operation (var_cas_stateIndex, var_cas_stateExpression, var_cas_endOfStateExpression, var_cas_transitionsList) ;
      switch (select_sara_5F_parser_43 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_43 = false ;
          break ;
      }
    }
  }
  {
    GGS_M_stateMap::cEnumerator enumerator_39249 (var_cas_statesMap, true) ;
    const GGS_M_stateMap::cElement * operand_39249 = NULL ;
    while (((operand_39249 = enumerator_39249.nextObject ()))) {
      macroValidPointer (operand_39249) ;
      const GGS_bool cond_39387 = (var_cas_stateDefinitionMap.reader_hasKey (operand_39249->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1237)))).operator_not () ;
      if (cond_39387.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("'")).operator_concat (operand_39249->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1238)))).operator_concat (GGS_string ("' state is not described")) COMMA_SOURCE_FILE_AT_LINE (1239)) ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_sara_5F_scanner::kToken__7D_) COMMA_HERE) ;
  var_cas_outDefinition = GGS_C_explicitAutomatonDefinition ::constructor_new (inLexique, var_cas_statesMap, var_cas_initialStatesDefinitionList, var_cas_terminalStatesDefinitionList, var_cas_stateDefinitionList, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1243)) ;
}

//---------------------------------------------------------------------------*

