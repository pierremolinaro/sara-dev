//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'sara_parser.cpp'                           *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     november 2nd, 2006, at 20h52'11"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "sara_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "sara_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'start_symbol'              *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_start_symbol_sara_parser_503_20_ (sara_scanner & _inLexique) {
  GGS_L_jobList  var_cas_componentsMap ;
  var_cas_componentsMap = GGS_L_jobList::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_machinesMap  var_cas_machinesMap ;
  var_cas_machinesMap = GGS_M_machinesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_component_ (_inLexique, var_cas_machinesMap, var_cas_componentsMap) ;
      switch (select_repeat_sara_parser_0 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (var_cas_componentsMap._isBuilt ()) {
    ::routine_performComputations (_inLexique,  var_cas_componentsMap SOURCE_FILE_AT_LINE (511)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_548_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_check) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_luint  var_cas_machineIndex ;
  GGS_uint  var_cas_16168 ;
  GGS_uint  var_cas_16171 ;
  GGS_M_variablesMap  var_cas_16174 ;
  if (var_cas_ioMachinesMap._isBuilt ()) {
    var_cas_ioMachinesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_16168, var_cas_16171, var_cas_16174 SOURCE_FILE_AT_LINE (562)) ;
  }
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_C_machineCheck::constructor_new (_inLexique, var_cas_machineIndex, GGS_bool (true, false) COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_570_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_checkidentical) ;
  GGS_lstring  var_cas_machineName1 ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName1.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
  GGS_lstring  var_cas_machineName2 ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName2.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_luint  var_cas_machineIndex1 ;
  GGS_uint  var_cas_16895 ;
  GGS_uint  var_cas_16898 ;
  GGS_M_variablesMap  var_cas_16901 ;
  if (var_cas_ioMachinesMap._isBuilt ()) {
    var_cas_ioMachinesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName1, var_cas_machineIndex1, var_cas_16895, var_cas_16898, var_cas_16901 SOURCE_FILE_AT_LINE (587)) ;
  }
  GGS_luint  var_cas_machineIndex2 ;
  GGS_uint  var_cas_17033 ;
  GGS_uint  var_cas_17036 ;
  GGS_M_variablesMap  var_cas_17039 ;
  if (var_cas_ioMachinesMap._isBuilt ()) {
    var_cas_ioMachinesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName2, var_cas_machineIndex2, var_cas_17033, var_cas_17036, var_cas_17039 SOURCE_FILE_AT_LINE (590)) ;
  }
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_C_machineCheckIdentical::constructor_new (_inLexique, var_cas_machineIndex1, var_cas_machineIndex2 COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_598_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_checkbool) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_luint  var_cas_machineIndex ;
  GGS_uint  var_cas_17702 ;
  GGS_uint  var_cas_17705 ;
  GGS_M_variablesMap  var_cas_17708 ;
  if (var_cas_ioMachinesMap._isBuilt ()) {
    var_cas_ioMachinesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_17702, var_cas_17705, var_cas_17708 SOURCE_FILE_AT_LINE (612)) ;
  }
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_C_machineCheck::constructor_new (_inLexique, var_cas_machineIndex, GGS_bool (true, true) COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_620_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_use_5Fand) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeUse_AND::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_632_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_use_5Fite) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeUse_ITE::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_644_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_use_5Fand_5Fite) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeUse_AND_ITE::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_656_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_and_5Fcache) ;
  GGS_luint  var_cas_size ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Finteger) ;
  var_cas_size.defineAttributeFromScanner (_inLexique.ulongValue, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeResize_AND_cache::constructor_new (_inLexique, var_cas_size COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_669_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_ite_5Fcache) ;
  GGS_luint  var_cas_size ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Finteger) ;
  var_cas_size.defineAttributeFromScanner (_inLexique.ulongValue, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeResize_ITE_cache::constructor_new (_inLexique, var_cas_size COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_683_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_map) ;
  GGS_luint  var_cas_size ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Finteger) ;
  var_cas_size.defineAttributeFromScanner (_inLexique.ulongValue, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeResizeMap::constructor_new (_inLexique, var_cas_size COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_697_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_bdd) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeDisplayBDDstats::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_709_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVarName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        var_cas_variablesMap.method_insertKey (_inLexique, var_cas_inputVarName SOURCE_FILE_AT_LINE (724)) ;
      switch (select_repeat_sara_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (728)) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_2 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_outputVarName ;
            _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_outputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
            var_cas_variablesMap.method_insertKey (_inLexique, var_cas_outputVarName SOURCE_FILE_AT_LINE (737)) ;
          switch (select_repeat_sara_parser_3 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (743)) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVarName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        var_cas_variablesMap.method_insertKey (_inLexique, var_cas_outputVarName SOURCE_FILE_AT_LINE (749)) ;
      switch (select_repeat_sara_parser_4 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3A_3D) ;
  GGS_AC_machineDefinition  var_cas_definition ;
  nt_definition_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_definition) ;
  GGS_luint  var_cas_machineIndex ;
  var_cas_ioMachinesMap.method_insertKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap SOURCE_FILE_AT_LINE (760)) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_machineComponent::constructor_new (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_definition COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_machine) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_769_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_modalcompadd) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVarName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        var_cas_variablesMap.method_insertKey (_inLexique, var_cas_inputVarName SOURCE_FILE_AT_LINE (785)) ;
      switch (select_repeat_sara_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (789)) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_6 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_outputVarName ;
            _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_outputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
            var_cas_variablesMap.method_insertKey (_inLexique, var_cas_outputVarName SOURCE_FILE_AT_LINE (798)) ;
          switch (select_repeat_sara_parser_7 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (804)) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVarName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        var_cas_variablesMap.method_insertKey (_inLexique, var_cas_outputVarName SOURCE_FILE_AT_LINE (810)) ;
      switch (select_repeat_sara_parser_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3A_3D) ;
  GGS_M_modesMap  var_cas_modeMap ;
  GGS_ListForModes  var_cas_inclusionList ;
  nt_modalcompadd_definition_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList) ;
  GGS_luint  var_cas_machineIndex ;
  var_cas_ioMachinesMap.method_insertKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap SOURCE_FILE_AT_LINE (827)) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_machineDefinedByAdditiveModalComp::constructor_new (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_machine) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_844_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_modalcompsub) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVarName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        var_cas_variablesMap.method_insertKey (_inLexique, var_cas_inputVarName SOURCE_FILE_AT_LINE (860)) ;
      switch (select_repeat_sara_parser_9 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (864)) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_10 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_outputVarName ;
            _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_outputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
            var_cas_variablesMap.method_insertKey (_inLexique, var_cas_outputVarName SOURCE_FILE_AT_LINE (873)) ;
          switch (select_repeat_sara_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (879)) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVarName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        var_cas_variablesMap.method_insertKey (_inLexique, var_cas_outputVarName SOURCE_FILE_AT_LINE (885)) ;
      switch (select_repeat_sara_parser_12 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3A_3D) ;
  GGS_M_modesMap  var_cas_modeMap ;
  GGS_ListForModes  var_cas_exclusionList ;
  nt_modalcompsub_definition_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList) ;
  GGS_luint  var_cas_machineIndex ;
  var_cas_ioMachinesMap.method_insertKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap SOURCE_FILE_AT_LINE (902)) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_machineDefinedBySubstractiveModalComp::constructor_new (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_machine) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_917_17_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_scenario) ;
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  GGS_luint  var_cas_machineIndex ;
  GGS_uint  var_cas_inputVariablesCountFromDefinition ;
  GGS_uint  var_cas_inputAndInternalVariablesCountFromDefinition ;
  GGS_M_variablesMap  var_cas_variablesMapFromDefinition ;
  if (var_cas_ioMachinesMap._isBuilt ()) {
    var_cas_ioMachinesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCountFromDefinition, var_cas_inputAndInternalVariablesCountFromDefinition, var_cas_variablesMapFromDefinition SOURCE_FILE_AT_LINE (933)) ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVarName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        var_cas_variablesMap.method_insertKey (_inLexique, var_cas_inputVarName SOURCE_FILE_AT_LINE (939)) ;
      switch (select_repeat_sara_parser_13 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (943)) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  if (((var_cas_inputVariablesCountFromDefinition) != (var_cas_inputVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "This declaration names ")) + (var_cas_inputVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (947))))) + (GGS_string (true, " input variable(s), but machine definition names ")))) + (var_cas_inputVariablesCountFromDefinition.reader_string (_inLexique SOURCE_FILE_AT_LINE (948))))) + (GGS_string (true, " input variable(s)"))) SOURCE_FILE_AT_LINE (949)) ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_14 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_outputVarName ;
            _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_outputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
            var_cas_variablesMap.method_insertKey (_inLexique, var_cas_outputVarName SOURCE_FILE_AT_LINE (957)) ;
          switch (select_repeat_sara_parser_15 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (964)) ;
  if (((var_cas_inputAndInternalVariablesCountFromDefinition) != (var_cas_inputAndInternalVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "This declaration names ")) + (var_cas_inputAndInternalVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (966))))) + (GGS_string (true, " input and internal variable(s), but machine definition names ")))) + (var_cas_inputAndInternalVariablesCountFromDefinition.reader_string (_inLexique SOURCE_FILE_AT_LINE (967))))) + (GGS_string (true, " input and internal variable(s)"))) SOURCE_FILE_AT_LINE (968)) ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVarName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        var_cas_variablesMap.method_insertKey (_inLexique, var_cas_outputVarName SOURCE_FILE_AT_LINE (974)) ;
      switch (select_repeat_sara_parser_16 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_outputVariablesCount ;
  var_cas_outputVariablesCount = var_cas_variablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (980)) ;
  GGS_uint  var_cas_outputVariablesCountFromDefinition ;
  var_cas_outputVariablesCountFromDefinition = var_cas_variablesMapFromDefinition.reader_count (_inLexique SOURCE_FILE_AT_LINE (981)) ;
  if (((var_cas_outputVariablesCountFromDefinition) != (var_cas_outputVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "This declaration names ")) + (var_cas_outputVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (983))))) + (GGS_string (true, " variables, but machine definition names ")))) + (var_cas_outputVariablesCountFromDefinition.reader_string (_inLexique SOURCE_FILE_AT_LINE (984))))) + (GGS_string (true, " variables"))) SOURCE_FILE_AT_LINE (985)) ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
  GGS_L_scenarioList  var_cas_scenarioList ;
  var_cas_scenarioList = GGS_L_scenarioList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_scenarioTitle ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Fstring) ;
        var_cas_scenarioTitle.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        GGS_L_inputScenario  var_cas_inputScenario ;
        var_cas_inputScenario = GGS_L_inputScenario::constructor_emptyList (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3A) ;
              GGS_L_inputConfigurationForScenario  var_cas_inputConfigurationForScenario ;
              var_cas_inputConfigurationForScenario = GGS_L_inputConfigurationForScenario::constructor_emptyList (_inLexique COMMA_HERE) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    GGS_luint  var_cas_v ;
                    _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Finteger) ;
                    var_cas_v.defineAttributeFromScanner (_inLexique.ulongValue, _inLexique) ;
                    if (((var_cas_v.reader_uint (_inLexique SOURCE_FILE_AT_LINE (998))) > (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
                      var_cas_v.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this value is not a  binary digit") SOURCE_FILE_AT_LINE (1000)) ;
                    }
                    var_cas_inputConfigurationForScenario._addAssign_operation (var_cas_v) ;
                  switch (select_repeat_sara_parser_19 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              if (((var_cas_inputVariablesCount) != (var_cas_inputConfigurationForScenario.reader_length (_inLexique SOURCE_FILE_AT_LINE (1005)))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "this input configuration names ")) + (var_cas_inputConfigurationForScenario.reader_length (_inLexique SOURCE_FILE_AT_LINE (1006)).reader_string (_inLexique SOURCE_FILE_AT_LINE (1006))))) + (GGS_string (true, " input variable(s), instead of ")))) + (var_cas_inputVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1006)))) SOURCE_FILE_AT_LINE (1007)) ;
              }
              var_cas_inputScenario._addAssign_operation (var_cas_inputConfigurationForScenario) ;
            switch (select_repeat_sara_parser_18 (_inLexique)) {
              case 2 : {
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
        var_cas_scenarioList._addAssign_operation (var_cas_scenarioTitle, var_cas_inputScenario) ;
      switch (select_repeat_sara_parser_17 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_scenarioComponent::constructor_new (_inLexique, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_scenarioList COMMA_HERE) ;
  var_cas_ioJobList._addAssign_operation (var_cas_machine) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'io_bool_expression'           *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_bool_expression_sara_parser_1023_26_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  nt_io_and_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_20 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7C) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_orExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__5E) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_xorExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2D_3E) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_impliesExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3D) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_equalExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'io_and_expression'            *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_and_expression_sara_parser_1055_25_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  nt_io_primary_ (_inLexique, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_21 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__26) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_primary_ (_inLexique, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_andExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_1072_18_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  nt_io_bool_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_outExpression) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_1084_18_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_inputVarName ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
  var_cas_inputVarName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  GGS_luint  var_cas_inputVarIndex ;
  if (var_cas_ioVarMap._isBuilt ()) {
    var_cas_ioVarMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_inputVarName, var_cas_inputVarIndex SOURCE_FILE_AT_LINE (1092)) ;
  }
  var_cas_outExpression = GGS_C_VariableExpression::constructor_new (_inLexique, var_cas_inputVarIndex COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_1098_18_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7E) ;
  GGS_AC_boolExpression  var_cas_expression ;
  nt_io_primary_ (_inLexique, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_expression) ;
  var_cas_outExpression = GGS_C_notExpression::constructor_new (_inLexique, var_cas_expression COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_1111_18_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_M_variablesMap  &/* var_cas_ioVarMap */,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_false) ;
  var_cas_outExpression = GGS_C_falseExpression::constructor_new (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_1122_18_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_M_variablesMap  &/* var_cas_ioVarMap */,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_true) ;
  var_cas_outExpression = GGS_C_trueExpression::constructor_new (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_1133_18_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_machineIdentifier ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineIdentifier.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  GGS_uint  var_cas_machineInputVariableCount ;
  GGS_uint  var_cas_machineInputAndInternalVariableCount ;
  GGS_M_variablesMap  var_cas_machineVariablesMap ;
  GGS_luint  var_cas_indexOfImportedMachine ;
  if (var_cas_ioMachinesMap._isBuilt ()) {
    var_cas_ioMachinesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineIdentifier, var_cas_indexOfImportedMachine, var_cas_machineInputVariableCount, var_cas_machineInputAndInternalVariableCount, var_cas_machineVariablesMap SOURCE_FILE_AT_LINE (1144)) ;
  }
  GGS_L_translationVector  var_cas_translationVector ;
  var_cas_translationVector = GGS_L_translationVector::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVar ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVar.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        GGS_luint  var_cas_inputVarIndex ;
        if (var_cas_ioVarMap._isBuilt ()) {
          var_cas_ioVarMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_inputVar, var_cas_inputVarIndex SOURCE_FILE_AT_LINE (1152)) ;
        }
        var_cas_translationVector._addAssign_operation (var_cas_inputVarIndex) ;
      switch (select_repeat_sara_parser_22 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_translationVector.reader_length (_inLexique SOURCE_FILE_AT_LINE (1158)) ;
  if (((var_cas_inputVariablesCount) != (var_cas_machineInputVariableCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (1160))))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineInputVariableCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1160))))) + (GGS_string (true, " input variable(s), but this operand defines ")))) + (var_cas_inputVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1161))))) + (GGS_string (true, " input variable(s)"))) SOURCE_FILE_AT_LINE (1162)) ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_23 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_internalVar ;
            _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_internalVar.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
            GGS_luint  var_cas_internalVarIndex ;
            if (var_cas_ioVarMap._isBuilt ()) {
              var_cas_ioVarMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_internalVar, var_cas_internalVarIndex SOURCE_FILE_AT_LINE (1171)) ;
            }
            var_cas_translationVector._addAssign_operation (var_cas_internalVarIndex) ;
          switch (select_repeat_sara_parser_24 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_translationVector.reader_length (_inLexique SOURCE_FILE_AT_LINE (1178)) ;
  if (((var_cas_inputAndInternalVariablesCount) != (var_cas_machineInputAndInternalVariableCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (1180))))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineInputAndInternalVariableCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1180))))) + (GGS_string (true, " input and internal variable(s), but this operand defines ")))) + (var_cas_inputAndInternalVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1181))))) + (GGS_string (true, " input and internal variable(s)"))) SOURCE_FILE_AT_LINE (1182)) ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVar ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVar.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        GGS_luint  var_cas_outputVarIndex ;
        if (var_cas_ioVarMap._isBuilt ()) {
          var_cas_ioVarMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_outputVar, var_cas_outputVarIndex SOURCE_FILE_AT_LINE (1189)) ;
        }
        var_cas_translationVector._addAssign_operation (var_cas_outputVarIndex) ;
      switch (select_repeat_sara_parser_25 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_allVariablesCount ;
  var_cas_allVariablesCount = var_cas_translationVector.reader_length (_inLexique SOURCE_FILE_AT_LINE (1195)) ;
  GGS_uint  var_cas_machineAllVariablesCount ;
  var_cas_machineAllVariablesCount = var_cas_machineVariablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (1196)) ;
  if (((var_cas_allVariablesCount) != (var_cas_machineAllVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (1198))))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineAllVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1198))))) + (GGS_string (true, " variables, but this operand defines ")))) + (var_cas_allVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1199))))) + (GGS_string (true, " variables"))) SOURCE_FILE_AT_LINE (1200)) ;
  }
  var_cas_outExpression = GGS_C_importBoolMachine::constructor_new (_inLexique, var_cas_indexOfImportedMachine.reader_uint (_inLexique SOURCE_FILE_AT_LINE (1202)), var_cas_machineIdentifier.reader_location (_inLexique SOURCE_FILE_AT_LINE (1203)), var_cas_translationVector COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'definition_expression'          *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_definition_expression_sara_parser_1212_29_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  nt_definition_expression_term_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_outDefinition) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_26 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2B) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_term_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_orComposition::constructor_new (_inLexique, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'definition_expression_term'       *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_definition_expression_term_sara_parser_1230_34_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  nt_definition_expression_factor_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_outDefinition) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_27 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2A) ;
          GGS_location  var_cas_errorLocation ;
          var_cas_errorLocation = GGS_location (_inLexique) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_factor_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_strongModalComposition::constructor_new (_inLexique, var_cas_leftOperand, var_cas_errorLocation, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2A_2A) ;
          GGS_location  var_cas_errorLocation ;
          var_cas_errorLocation = GGS_location (_inLexique) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_factor_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_weakModalComposition::constructor_new (_inLexique, var_cas_leftOperand, var_cas_errorLocation, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7C_7C) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_factor_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_parallelComposition::constructor_new (_inLexique, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'modalcompadd_definition'         *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_modalcompadd_definition_sara_parser_1262_31_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_M_modesMap  &var_cas_outModeMap,
                                GGS_ListForModes  &var_cas_outInclusionList) {
  var_cas_outModeMap = GGS_M_modesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outInclusionList = GGS_ListForModes::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_modeName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_modeName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3A) ;
        GGS_AC_machineDefinition  var_cas_def ;
        nt_definition_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
        var_cas_outModeMap.method_insertKey (_inLexique, var_cas_modeName, var_cas_def SOURCE_FILE_AT_LINE (1276)) ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
      switch (select_repeat_sara_parser_28 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_29 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_include) ;
          GGS_lstring  var_cas_sourceModeName ;
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
          var_cas_sourceModeName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
          GGS_luint  var_cas_sourceModeIndex ;
          GGS_AC_machineDefinition  var_cas_38001 ;
          if (var_cas_outModeMap._isBuilt ()) {
            var_cas_outModeMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_sourceModeName, var_cas_sourceModeIndex, var_cas_38001 SOURCE_FILE_AT_LINE (1286)) ;
          }
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_to) ;
          GGS_lstring  var_cas_targetModeName ;
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
          var_cas_targetModeName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
          GGS_luint  var_cas_targetModeIndex ;
          GGS_AC_machineDefinition  var_cas_38180 ;
          if (var_cas_outModeMap._isBuilt ()) {
            var_cas_outModeMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_targetModeName, var_cas_targetModeIndex, var_cas_38180 SOURCE_FILE_AT_LINE (1291)) ;
          }
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
          if (((var_cas_sourceModeIndex.reader_uint (_inLexique SOURCE_FILE_AT_LINE (1293))) == (var_cas_targetModeIndex.reader_uint (_inLexique SOURCE_FILE_AT_LINE (1293)))).isBuiltAndTrue ()) {
            var_cas_targetModeIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "unuseful include: 'modalcompadd' operator never adds transitions from terminal states to initial states of the same mode") SOURCE_FILE_AT_LINE (1294)) ;
          }else{
            var_cas_outInclusionList._addAssign_operation (var_cas_sourceModeIndex, var_cas_targetModeIndex) ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'modalcompsub_definition'         *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_modalcompsub_definition_sara_parser_1303_31_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_M_modesMap  &var_cas_outModeMap,
                                GGS_ListForModes  &var_cas_outExclusionList) {
  var_cas_outModeMap = GGS_M_modesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outExclusionList = GGS_ListForModes::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_modeName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_modeName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3A) ;
        GGS_AC_machineDefinition  var_cas_def ;
        nt_definition_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
        var_cas_outModeMap.method_insertKey (_inLexique, var_cas_modeName, var_cas_def SOURCE_FILE_AT_LINE (1317)) ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
      switch (select_repeat_sara_parser_30 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_31 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_exclude) ;
          GGS_lstring  var_cas_sourceModeName ;
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
          var_cas_sourceModeName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
          GGS_luint  var_cas_sourceModeIndex ;
          GGS_AC_machineDefinition  var_cas_39299 ;
          if (var_cas_outModeMap._isBuilt ()) {
            var_cas_outModeMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_sourceModeName, var_cas_sourceModeIndex, var_cas_39299 SOURCE_FILE_AT_LINE (1327)) ;
          }
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_to) ;
          GGS_lstring  var_cas_targetModeName ;
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
          var_cas_targetModeName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
          GGS_luint  var_cas_targetModeIndex ;
          GGS_AC_machineDefinition  var_cas_39478 ;
          if (var_cas_outModeMap._isBuilt ()) {
            var_cas_outModeMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_targetModeName, var_cas_targetModeIndex, var_cas_39478 SOURCE_FILE_AT_LINE (1332)) ;
          }
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
          if (((var_cas_sourceModeIndex.reader_uint (_inLexique SOURCE_FILE_AT_LINE (1334))) == (var_cas_targetModeIndex.reader_uint (_inLexique SOURCE_FILE_AT_LINE (1334)))).isBuiltAndTrue ()) {
            var_cas_targetModeIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "unuseful include: 'modalcompadd' operator never adds transitions from terminal states to initial states of the same mode") SOURCE_FILE_AT_LINE (1335)) ;
          }else{
            var_cas_outExclusionList._addAssign_operation (var_cas_sourceModeIndex, var_cas_targetModeIndex) ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'definition_expression_factor'      *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_definition_expression_factor_sara_parser_1344_36_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  switch (select_sara_parser_32 (_inLexique)) {
    case 1 : {
      nt_explicit_automaton_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_outDefinition) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      nt_definition_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_outDefinition) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      } break ;
    case 3 : {
      GGS_M_variablesMap  var_cas_extendedVariablesMap ;
      var_cas_extendedVariablesMap = var_cas_variablesMap ;
      GGS_uint  var_cas_previousVariableCount ;
      var_cas_previousVariableCount = var_cas_extendedVariablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (1357)) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3F) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_variableName ;
            _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_variableName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
            var_cas_extendedVariablesMap.method_insertKey (_inLexique, var_cas_variableName SOURCE_FILE_AT_LINE (1362)) ;
          switch (select_repeat_sara_parser_33 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_uint  var_cas_actualVariableCount ;
      var_cas_actualVariableCount = var_cas_extendedVariablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (1366)) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_extendedVariablesMap, var_cas_def) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      var_cas_outDefinition = GGS_C_existsDefinition::constructor_new (_inLexique, var_cas_previousVariableCount, var_cas_actualVariableCount, var_cas_def COMMA_HERE) ;
      } break ;
    case 4 : {
      GGS_M_variablesMap  var_cas_extendedVariablesMap ;
      var_cas_extendedVariablesMap = var_cas_variablesMap ;
      GGS_uint  var_cas_previousVariableCount ;
      var_cas_previousVariableCount = var_cas_extendedVariablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (1374)) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__21) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_variableName ;
            _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_variableName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
            var_cas_extendedVariablesMap.method_insertKey (_inLexique, var_cas_variableName SOURCE_FILE_AT_LINE (1379)) ;
          switch (select_repeat_sara_parser_34 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_uint  var_cas_actualVariableCount ;
      var_cas_actualVariableCount = var_cas_extendedVariablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (1383)) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_extendedVariablesMap, var_cas_def) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      var_cas_outDefinition = GGS_C_forallDefinition::constructor_new (_inLexique, var_cas_previousVariableCount, var_cas_actualVariableCount, var_cas_def COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_bool) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
      GGS_AC_boolExpression  var_cas_def ;
      nt_io_bool_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_boolToSeqExpression::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
      } break ;
    case 6 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__40) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_factor_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_fullSaturationOperation::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      } break ;
    case 7 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7E) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_factor_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_complementationOperation::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      } break ;
    case 8 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_nofirst) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_suppressInitialStatesOperation::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      } break ;
    case 9 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_nolast) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_suppressTerminalStatesOperation::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      } break ;
    case 10 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_modalcompadd) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
      GGS_M_modesMap  var_cas_modeMap ;
      GGS_ListForModes  var_cas_inclusionList ;
      nt_modalcompadd_definition_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
      var_cas_outDefinition = GGS_C_additiveModalCompositionComponent::constructor_new (_inLexique, var_cas_modeMap, var_cas_inclusionList COMMA_HERE) ;
      } break ;
    case 11 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_modalcompsub) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
      GGS_M_modesMap  var_cas_modeMap ;
      GGS_ListForModes  var_cas_exclusionList ;
      nt_modalcompsub_definition_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
      var_cas_outDefinition = GGS_C_substractiveModalCompositionComponent::constructor_new (_inLexique, var_cas_modeMap, var_cas_exclusionList COMMA_HERE) ;
      } break ;
    case 12 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_trans) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
      GGS_AC_boolExpression  var_cas_sourceExpression ;
      nt_io_bool_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_sourceExpression) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_to) ;
      GGS_AC_boolExpression  var_cas_targetExpression ;
      nt_io_bool_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_targetExpression) ;
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
      var_cas_outDefinition = GGS_C_trans::constructor_new (_inLexique, var_cas_sourceExpression, var_cas_targetExpression COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'definition_expression_factor'      *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_definition_expression_factor_sara_parser_1461_36_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  GGS_lstring  var_cas_machineIdentifier ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineIdentifier.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
  GGS_uint  var_cas_machineInputVariableCount ;
  GGS_uint  var_cas_machineInputAndInternalVariableCount ;
  GGS_M_variablesMap  var_cas_machineVariablesMap ;
  GGS_luint  var_cas_indexOfImportedMachine ;
  if (var_cas_ioMachinesMap._isBuilt ()) {
    var_cas_ioMachinesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineIdentifier, var_cas_indexOfImportedMachine, var_cas_machineInputVariableCount, var_cas_machineInputAndInternalVariableCount, var_cas_machineVariablesMap SOURCE_FILE_AT_LINE (1472)) ;
  }
  GGS_L_translationVector  var_cas_translationVector ;
  var_cas_translationVector = GGS_L_translationVector::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVar ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVar.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        GGS_luint  var_cas_inputVarIndex ;
        if (var_cas_ioVarMap._isBuilt ()) {
          var_cas_ioVarMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_inputVar, var_cas_inputVarIndex SOURCE_FILE_AT_LINE (1480)) ;
        }
        var_cas_translationVector._addAssign_operation (var_cas_inputVarIndex) ;
      switch (select_repeat_sara_parser_35 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_translationVector.reader_length (_inLexique SOURCE_FILE_AT_LINE (1486)) ;
  if (((var_cas_inputVariablesCount) != (var_cas_machineInputVariableCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (1488))))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineInputVariableCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1488))))) + (GGS_string (true, " input variable(s), but this operand defines ")))) + (var_cas_inputVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1489))))) + (GGS_string (true, " input variable(s)"))) SOURCE_FILE_AT_LINE (1490)) ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_36 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_internalVar ;
            _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_internalVar.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
            GGS_luint  var_cas_internalVarIndex ;
            if (var_cas_ioVarMap._isBuilt ()) {
              var_cas_ioVarMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_internalVar, var_cas_internalVarIndex SOURCE_FILE_AT_LINE (1499)) ;
            }
            var_cas_translationVector._addAssign_operation (var_cas_internalVarIndex) ;
          switch (select_repeat_sara_parser_37 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_translationVector.reader_length (_inLexique SOURCE_FILE_AT_LINE (1506)) ;
  if (((var_cas_inputAndInternalVariablesCount) != (var_cas_machineInputAndInternalVariableCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (1508))))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineInputAndInternalVariableCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1508))))) + (GGS_string (true, " input and internal variable(s), but this operand defines ")))) + (var_cas_inputAndInternalVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1509))))) + (GGS_string (true, " input and internal variable(s)"))) SOURCE_FILE_AT_LINE (1510)) ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVar ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVar.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        GGS_luint  var_cas_outputVarIndex ;
        if (var_cas_ioVarMap._isBuilt ()) {
          var_cas_ioVarMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_outputVar, var_cas_outputVarIndex SOURCE_FILE_AT_LINE (1517)) ;
        }
        var_cas_translationVector._addAssign_operation (var_cas_outputVarIndex) ;
      switch (select_repeat_sara_parser_38 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_allVariablesCount ;
  var_cas_allVariablesCount = var_cas_translationVector.reader_length (_inLexique SOURCE_FILE_AT_LINE (1523)) ;
  GGS_uint  var_cas_machineAllVariablesCount ;
  var_cas_machineAllVariablesCount = var_cas_machineVariablesMap.reader_count (_inLexique SOURCE_FILE_AT_LINE (1524)) ;
  if (((var_cas_allVariablesCount) != (var_cas_machineAllVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_string (_inLexique SOURCE_FILE_AT_LINE (1526))))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineAllVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1526))))) + (GGS_string (true, " variables, but this operand defines ")))) + (var_cas_allVariablesCount.reader_string (_inLexique SOURCE_FILE_AT_LINE (1527))))) + (GGS_string (true, " variables"))) SOURCE_FILE_AT_LINE (1528)) ;
  }
  var_cas_outDefinition = GGS_C_importMachine::constructor_new (_inLexique, var_cas_indexOfImportedMachine.reader_uint (_inLexique SOURCE_FILE_AT_LINE (1529)), var_cas_translationVector COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'explicit_automaton'           *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_explicit_automaton_sara_parser_1536_26_ (sara_scanner & _inLexique,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_auto) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_state) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_stateName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_stateName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        var_cas_statesMap.method_insertKey (_inLexique, var_cas_stateName SOURCE_FILE_AT_LINE (1550)) ;
      switch (select_repeat_sara_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_L_statesDefinitionList  var_cas_initialStatesDefinitionList ;
  var_cas_initialStatesDefinitionList = GGS_L_statesDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_first) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_initialState ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_initialState.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        GGS_luint  var_cas_initialStateIndex ;
        if (var_cas_statesMap._isBuilt ()) {
          var_cas_statesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_initialState, var_cas_initialStateIndex SOURCE_FILE_AT_LINE (1562)) ;
        }
        var_cas_initialStatesDefinitionList._addAssign_operation (var_cas_initialStateIndex, GGS_location (_inLexique)) ;
      switch (select_repeat_sara_parser_40 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_L_statesDefinitionList  var_cas_terminalStatesDefinitionList ;
  var_cas_terminalStatesDefinitionList = GGS_L_statesDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_sara_parser_41 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_last) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_terminalState ;
            _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_terminalState.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
            GGS_luint  var_cas_terminalStateIndex ;
            if (var_cas_statesMap._isBuilt ()) {
              var_cas_statesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_terminalState, var_cas_terminalStateIndex SOURCE_FILE_AT_LINE (1577)) ;
            }
            var_cas_terminalStatesDefinitionList._addAssign_operation (var_cas_terminalStateIndex, GGS_location (_inLexique)) ;
          switch (select_repeat_sara_parser_42 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
      } break ;
    default :
      break ;
  }
  GGS_M_stateMap  var_cas_stateDefinitionMap ;
  var_cas_stateDefinitionMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_stateName ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_stateName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
        GGS_luint  var_cas_stateIndex ;
        if (var_cas_statesMap._isBuilt ()) {
          var_cas_statesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_stateName, var_cas_stateIndex SOURCE_FILE_AT_LINE (1591)) ;
        }
        var_cas_stateDefinitionMap.method_defineState (_inLexique, var_cas_stateName SOURCE_FILE_AT_LINE (1592)) ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3A) ;
        GGS_AC_boolExpression  var_cas_stateExpression ;
        nt_io_bool_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_stateExpression) ;
        GGS_location  var_cas_endOfStateExpression ;
        var_cas_endOfStateExpression = GGS_location (_inLexique) ;
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
        GGS_L_transitionDefinition  var_cas_transitionsList ;
        var_cas_transitionsList = GGS_L_transitionDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_sara_parser_44 (_inLexique)) {
              case 2 : {
                GGS_AC_boolExpression  var_cas_transitionInputExpression ;
                nt_io_bool_expression_ (_inLexique, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_transitionInputExpression) ;
                GGS_location  var_cas_endOfExpression ;
                var_cas_endOfExpression = GGS_location (_inLexique) ;
                _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_goto) ;
                GGS_lstring  var_cas_targetStateName ;
                _inLexique.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
                var_cas_targetStateName.defineAttributeFromScanner (_inLexique.identifierString, _inLexique) ;
                GGS_luint  var_cas_targetStateIndex ;
                if (var_cas_statesMap._isBuilt ()) {
                  var_cas_statesMap (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_targetStateName, var_cas_targetStateIndex SOURCE_FILE_AT_LINE (1610)) ;
                }
                var_cas_transitionsList._addAssign_operation (var_cas_transitionInputExpression, var_cas_endOfExpression, var_cas_targetStateIndex) ;
                _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
        var_cas_stateDefinitionList._addAssign_operation (var_cas_stateIndex, var_cas_stateExpression, var_cas_endOfStateExpression, var_cas_transitionsList) ;
      switch (select_repeat_sara_parser_43 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_M_stateMap::element_type * operand_49037 = var_cas_statesMap.firstObject () ;
  while ((operand_49037 != NULL)) {
    macroValidPointer (operand_49037) ;
    if (((! (var_cas_stateDefinitionMap.reader_hasKey (_inLexique, operand_49037->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1621)) SOURCE_FILE_AT_LINE (1621))))).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "'")) + (operand_49037->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (1622))))) + (GGS_string (true, "' state is not described"))) SOURCE_FILE_AT_LINE (1623)) ;
    }
    operand_49037 = operand_49037->nextObject () ;
  }
  _inLexique.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
  var_cas_outDefinition = GGS_C_explicitAutomatonDefinition::constructor_new (_inLexique, var_cas_statesMap, var_cas_initialStatesDefinitionList, var_cas_terminalStatesDefinitionList, var_cas_stateDefinitionList, GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

