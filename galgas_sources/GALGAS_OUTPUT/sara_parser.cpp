//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'sara_parser.cpp'                           *
//                Generated by version 1.2.0 (LL(1) grammar)                 *
//                     october 30th, 2005, at 12h10'18"                      *
//                                                                           *
// This program is free software; you can redistribute it and/or modify it   *
// under the terms of the GNU General Public License as published by the     *
// Free Software Foundation.                                                 *
//                                                                           *
// This program is distributed in the hope it will be useful, but WITHOUT    *
// ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or     *
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
// more details.                                                             *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "sara_parser.h"


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'start_symbol'              *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_start_symbol_sara_parser_492_20_ (sara_scanner & lexique_var_) {
  GGS_L_jobList  var_cas_componentsMap ;
  var_cas_componentsMap = GGS_L_jobList::constructor_empty () ;
  GGS_M_machinesMap  var_cas_machinesMap ;
  var_cas_machinesMap = GGS_M_machinesMap::constructor_empty () ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        nt_component_ (lexique_var_, var_cas_machinesMap, var_cas_componentsMap) ;
      switch (select_repeat_sara_parser_0 (lexique_var_)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (var_cas_componentsMap.isBuilt ()) {
    ::performComputations (lexique_var_,  var_cas_componentsMap) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_505_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_empty () ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_empty () ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_empty () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_check) ;
  GGS_lstring  var_cas_machineName ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_luint  var_cas_machineIndex ;
  GGS_uint  var_cas_14980 ;
  GGS_uint  var_cas_14983 ;
  GGS_M_variablesMap  var_cas_14986 ;
  var_cas_ioMachinesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_machineName, var_cas_machineIndex, var_cas_14980, var_cas_14983, var_cas_14986) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_C_machineCheck::constructor_new (var_cas_machineIndex, GGS_bool (true, false)) ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_527_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_empty () ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_empty () ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_empty () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_checkidentical) ;
  GGS_lstring  var_cas_machineName1 ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName1.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
  GGS_lstring  var_cas_machineName2 ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName2.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_luint  var_cas_machineIndex1 ;
  GGS_uint  var_cas_15699 ;
  GGS_uint  var_cas_15702 ;
  GGS_M_variablesMap  var_cas_15705 ;
  var_cas_ioMachinesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_machineName1, var_cas_machineIndex1, var_cas_15699, var_cas_15702, var_cas_15705) ;
  GGS_luint  var_cas_machineIndex2 ;
  GGS_uint  var_cas_15839 ;
  GGS_uint  var_cas_15842 ;
  GGS_M_variablesMap  var_cas_15845 ;
  var_cas_ioMachinesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_machineName2, var_cas_machineIndex2, var_cas_15839, var_cas_15842, var_cas_15845) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_C_machineCheckIdentical::constructor_new (var_cas_machineIndex1, var_cas_machineIndex2) ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_555_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_empty () ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_empty () ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_empty () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_checkbool) ;
  GGS_lstring  var_cas_machineName ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_luint  var_cas_machineIndex ;
  GGS_uint  var_cas_16500 ;
  GGS_uint  var_cas_16503 ;
  GGS_M_variablesMap  var_cas_16506 ;
  var_cas_ioMachinesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_machineName, var_cas_machineIndex, var_cas_16500, var_cas_16503, var_cas_16506) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_C_machineCheck::constructor_new (var_cas_machineIndex, GGS_bool (true, true)) ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_577_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_use_5Fand) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeUse_AND::constructor_new () ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_589_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_use_5Fite) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeUse_ITE::constructor_new () ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_601_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_use_5Fand_5Fite) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeUse_AND_ITE::constructor_new () ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_613_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_and_5Fcache) ;
  GGS_luint  var_cas_size ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Finteger) ;
  var_cas_size.defineAttribute (lexique_var_.ulongValue, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeResize_AND_cache::constructor_new (var_cas_size) ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_626_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_ite_5Fcache) ;
  GGS_luint  var_cas_size ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Finteger) ;
  var_cas_size.defineAttribute (lexique_var_.ulongValue, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeResize_ITE_cache::constructor_new (var_cas_size) ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_640_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_map) ;
  GGS_luint  var_cas_size ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Finteger) ;
  var_cas_size.defineAttribute (lexique_var_.ulongValue, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeResizeMap::constructor_new (var_cas_size) ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_654_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_L_jobList  &var_cas_ioJobList) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_bdd) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeDisplayBDDstats::constructor_new () ;
  var_cas_ioJobList.addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_666_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_empty () ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_empty () ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_empty () ;
  GGS_lstring  var_cas_machineName ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVarName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_inputVarName) ;
      switch (select_repeat_sara_parser_1 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_2 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_outputVarName ;
            lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_outputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
            var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_outputVarName) ;
          switch (select_repeat_sara_parser_3 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVarName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_outputVarName) ;
      switch (select_repeat_sara_parser_4 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3A_3D) ;
  GGS_AC_machineDefinition  var_cas_definition ;
  nt_definition_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_definition) ;
  GGS_luint  var_cas_machineIndex ;
  var_cas_ioMachinesMap.methode_insertKeyGetIndex (lexique_var_, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_machineComponent::constructor_new (var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_definition) ;
  var_cas_ioJobList.addAssign_operation (var_cas_machine) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_726_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_empty () ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_empty () ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_empty () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_modalcompadd) ;
  GGS_lstring  var_cas_machineName ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVarName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_inputVarName) ;
      switch (select_repeat_sara_parser_5 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_6 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_outputVarName ;
            lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_outputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
            var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_outputVarName) ;
          switch (select_repeat_sara_parser_7 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVarName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_outputVarName) ;
      switch (select_repeat_sara_parser_8 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3A_3D) ;
  GGS_M_modesMap  var_cas_modeMap ;
  GGS_ListForModes  var_cas_inclusionList ;
  nt_modalcompadd_definition_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList) ;
  GGS_luint  var_cas_machineIndex ;
  var_cas_ioMachinesMap.methode_insertKeyGetIndex (lexique_var_, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_machineDefinedByAdditiveModalComp::constructor_new (var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList) ;
  var_cas_ioJobList.addAssign_operation (var_cas_machine) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_801_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_empty () ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_empty () ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_empty () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_modalcompsub) ;
  GGS_lstring  var_cas_machineName ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVarName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_inputVarName) ;
      switch (select_repeat_sara_parser_9 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_10 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_outputVarName ;
            lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_outputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
            var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_outputVarName) ;
          switch (select_repeat_sara_parser_11 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVarName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_outputVarName) ;
      switch (select_repeat_sara_parser_12 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3A_3D) ;
  GGS_M_modesMap  var_cas_modeMap ;
  GGS_ListForModes  var_cas_exclusionList ;
  nt_modalcompsub_definition_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList) ;
  GGS_luint  var_cas_machineIndex ;
  var_cas_ioMachinesMap.methode_insertKeyGetIndex (lexique_var_, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_machineDefinedBySubstractiveModalComp::constructor_new (var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList) ;
  var_cas_ioJobList.addAssign_operation (var_cas_machine) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_component_sara_parser_874_17_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_L_jobList  &var_cas_ioJobList) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_scenario) ;
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_empty () ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_empty () ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_empty () ;
  GGS_lstring  var_cas_machineName ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  GGS_luint  var_cas_machineIndex ;
  GGS_uint  var_cas_inputVariablesCountFromDefinition ;
  GGS_uint  var_cas_inputAndInternalVariablesCountFromDefinition ;
  GGS_M_variablesMap  var_cas_variablesMapFromDefinition ;
  var_cas_ioMachinesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCountFromDefinition, var_cas_inputAndInternalVariablesCountFromDefinition, var_cas_variablesMapFromDefinition) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVarName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_inputVarName) ;
      switch (select_repeat_sara_parser_13 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  if (((var_cas_inputVariablesCountFromDefinition) != (var_cas_inputVariablesCount)).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "This declaration names ")) + (var_cas_inputVariablesCount.reader_string ()))) + (GGS_string (true, " input variable(s), but machine definition names ")))) + (var_cas_inputVariablesCountFromDefinition.reader_string ()))) + (GGS_string (true, " input variable(s)")))) ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_14 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_outputVarName ;
            lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_outputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
            var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_outputVarName) ;
          switch (select_repeat_sara_parser_15 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count () ;
  if (((var_cas_inputAndInternalVariablesCountFromDefinition) != (var_cas_inputAndInternalVariablesCount)).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "This declaration names ")) + (var_cas_inputAndInternalVariablesCount.reader_string ()))) + (GGS_string (true, " input and internal variable(s), but machine definition names ")))) + (var_cas_inputAndInternalVariablesCountFromDefinition.reader_string ()))) + (GGS_string (true, " input and internal variable(s)")))) ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVarName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        var_cas_variablesMap.methode_insertKey (lexique_var_, var_cas_outputVarName) ;
      switch (select_repeat_sara_parser_16 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_outputVariablesCount ;
  var_cas_outputVariablesCount = var_cas_variablesMap.reader_count () ;
  GGS_uint  var_cas_outputVariablesCountFromDefinition ;
  var_cas_outputVariablesCountFromDefinition = var_cas_variablesMapFromDefinition.reader_count () ;
  if (((var_cas_outputVariablesCountFromDefinition) != (var_cas_outputVariablesCount)).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "This declaration names ")) + (var_cas_outputVariablesCount.reader_string ()))) + (GGS_string (true, " variables, but machine definition names ")))) + (var_cas_outputVariablesCountFromDefinition.reader_string ()))) + (GGS_string (true, " variables")))) ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
  GGS_L_scenarioList  var_cas_scenarioList ;
  var_cas_scenarioList = GGS_L_scenarioList::constructor_empty () ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_scenarioTitle ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Fstring) ;
        var_cas_scenarioTitle.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        GGS_L_inputScenario  var_cas_inputScenario ;
        var_cas_inputScenario = GGS_L_inputScenario::constructor_empty () ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3A) ;
              GGS_L_inputConfigurationForScenario  var_cas_inputConfigurationForScenario ;
              var_cas_inputConfigurationForScenario = GGS_L_inputConfigurationForScenario::constructor_empty () ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    GGS_luint  var_cas_v ;
                    lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_literal_5Finteger) ;
                    var_cas_v.defineAttribute (lexique_var_.ulongValue, lexique_var_) ;
                    if (((var_cas_v.reader_value ()) > (GGS_uint (true, 1UL))).isBuiltAndTrue ()) {
                        var_cas_v.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "this value is not a  binary digit")) ;
                    }
                    var_cas_inputConfigurationForScenario.addAssign_operation (var_cas_v) ;
                  switch (select_repeat_sara_parser_19 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              if (((var_cas_inputVariablesCount) != (var_cas_inputConfigurationForScenario.reader_length ())).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((GGS_string (true, "this input configuration names ")) + (var_cas_inputConfigurationForScenario.reader_length ().reader_string ()))) + (GGS_string (true, " input variable(s), instead of ")))) + (var_cas_inputVariablesCount.reader_string ()))) ;
              }
              var_cas_inputScenario.addAssign_operation (var_cas_inputConfigurationForScenario) ;
            switch (select_repeat_sara_parser_18 (lexique_var_)) {
              case 2 : {
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
        var_cas_scenarioList.addAssign_operation (var_cas_scenarioTitle, var_cas_inputScenario) ;
      switch (select_repeat_sara_parser_17 (lexique_var_)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_scenarioComponent::constructor_new (var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_scenarioList) ;
  var_cas_ioJobList.addAssign_operation (var_cas_machine) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'io_bool_expression'           *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_io_bool_expression_sara_parser_980_26_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  nt_io_and_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_20 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7C) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_orExpression::constructor_new (var_cas_outExpression, var_cas_rightExpression) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__5E) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_xorExpression::constructor_new (var_cas_outExpression, var_cas_rightExpression) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2D_3E) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_impliesExpression::constructor_new (var_cas_outExpression, var_cas_rightExpression) ;
          } break ;
        case 5 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3D) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_equalExpression::constructor_new (var_cas_outExpression, var_cas_rightExpression) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'io_and_expression'            *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_io_and_expression_sara_parser_1012_25_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  nt_io_primary_ (lexique_var_, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_outExpression) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_21 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__26) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_primary_ (lexique_var_, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_andExpression::constructor_new (var_cas_outExpression, var_cas_rightExpression) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_io_primary_sara_parser_1029_18_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  nt_io_bool_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_outExpression) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_io_primary_sara_parser_1041_18_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_inputVarName ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
  var_cas_inputVarName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  GGS_luint  var_cas_inputVarIndex ;
  var_cas_ioVarMap.methode_searchKeyGetIndex (lexique_var_, var_cas_inputVarName, var_cas_inputVarIndex) ;
  var_cas_outExpression = GGS_C_VariableExpression::constructor_new (var_cas_inputVarIndex) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_io_primary_sara_parser_1055_18_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7E) ;
  GGS_AC_boolExpression  var_cas_expression ;
  nt_io_primary_ (lexique_var_, var_cas_ioMachinesMap, var_cas_ioVarMap, var_cas_expression) ;
  var_cas_outExpression = GGS_C_notExpression::constructor_new (var_cas_expression) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_io_primary_sara_parser_1068_18_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_M_variablesMap  &/* var_cas_ioVarMap */,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_false) ;
  var_cas_outExpression = GGS_C_falseExpression::constructor_new () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_io_primary_sara_parser_1079_18_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &/* var_cas_ioMachinesMap */,
                                GGS_M_variablesMap  &/* var_cas_ioVarMap */,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_true) ;
  var_cas_outExpression = GGS_C_trueExpression::constructor_new () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_io_primary_sara_parser_1090_18_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_machineIdentifier ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineIdentifier.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  GGS_uint  var_cas_machineInputVariableCount ;
  GGS_uint  var_cas_machineInputAndInternalVariableCount ;
  GGS_M_variablesMap  var_cas_machineVariablesMap ;
  GGS_luint  var_cas_indexOfImportedMachine ;
  var_cas_ioMachinesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_machineIdentifier, var_cas_indexOfImportedMachine, var_cas_machineInputVariableCount, var_cas_machineInputAndInternalVariableCount, var_cas_machineVariablesMap) ;
  GGS_L_translationVector  var_cas_translationVector ;
  var_cas_translationVector = GGS_L_translationVector::constructor_empty () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVar ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVar.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        GGS_luint  var_cas_inputVarIndex ;
        var_cas_ioVarMap.methode_searchKeyGetIndex (lexique_var_, var_cas_inputVar, var_cas_inputVarIndex) ;
        var_cas_translationVector.addAssign_operation (var_cas_inputVarIndex) ;
      switch (select_repeat_sara_parser_22 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_translationVector.reader_length () ;
  if (((var_cas_inputVariablesCount) != (var_cas_machineInputVariableCount)).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_value ()))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineInputVariableCount.reader_string ()))) + (GGS_string (true, " input variable(s), but this operand defines ")))) + (var_cas_inputVariablesCount.reader_string ()))) + (GGS_string (true, " input variable(s)")))) ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_23 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_internalVar ;
            lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_internalVar.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
            GGS_luint  var_cas_internalVarIndex ;
            var_cas_ioVarMap.methode_searchKeyGetIndex (lexique_var_, var_cas_internalVar, var_cas_internalVarIndex) ;
            var_cas_translationVector.addAssign_operation (var_cas_internalVarIndex) ;
          switch (select_repeat_sara_parser_24 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_translationVector.reader_length () ;
  if (((var_cas_inputAndInternalVariablesCount) != (var_cas_machineInputAndInternalVariableCount)).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_value ()))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineInputAndInternalVariableCount.reader_string ()))) + (GGS_string (true, " input and internal variable(s), but this operand defines ")))) + (var_cas_inputAndInternalVariablesCount.reader_string ()))) + (GGS_string (true, " input and internal variable(s)")))) ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVar ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVar.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        GGS_luint  var_cas_outputVarIndex ;
        var_cas_ioVarMap.methode_searchKeyGetIndex (lexique_var_, var_cas_outputVar, var_cas_outputVarIndex) ;
        var_cas_translationVector.addAssign_operation (var_cas_outputVarIndex) ;
      switch (select_repeat_sara_parser_25 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_allVariablesCount ;
  var_cas_allVariablesCount = var_cas_translationVector.reader_length () ;
  GGS_uint  var_cas_machineAllVariablesCount ;
  var_cas_machineAllVariablesCount = var_cas_machineVariablesMap.reader_count () ;
  if (((var_cas_allVariablesCount) != (var_cas_machineAllVariablesCount)).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_value ()))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineAllVariablesCount.reader_string ()))) + (GGS_string (true, " variables, but this operand defines ")))) + (var_cas_allVariablesCount.reader_string ()))) + (GGS_string (true, " variables")))) ;
  }
  var_cas_outExpression = GGS_C_importBoolMachine::constructor_new (var_cas_indexOfImportedMachine.reader_value (), var_cas_machineIdentifier.reader_location (), var_cas_translationVector) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'definition_expression'          *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_definition_expression_sara_parser_1169_29_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  nt_definition_expression_term_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_outDefinition) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_26 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2B) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_term_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_orComposition::constructor_new (var_cas_leftOperand, var_cas_rightOperand) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'definition_expression_term'       *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_definition_expression_term_sara_parser_1187_34_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  nt_definition_expression_factor_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_outDefinition) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_27 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2A) ;
          GGS_location  var_cas_errorLocation ;
          var_cas_errorLocation = GGS_location (lexique_var_) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_factor_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_strongModalComposition::constructor_new (var_cas_leftOperand, var_cas_errorLocation, var_cas_rightOperand) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2A_2A) ;
          GGS_location  var_cas_errorLocation ;
          var_cas_errorLocation = GGS_location (lexique_var_) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_factor_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_weakModalComposition::constructor_new (var_cas_leftOperand, var_cas_errorLocation, var_cas_rightOperand) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7C_7C) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_factor_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_parallelComposition::constructor_new (var_cas_leftOperand, var_cas_rightOperand) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'modalcompadd_definition'         *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_modalcompadd_definition_sara_parser_1219_31_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_M_modesMap  &var_cas_outModeMap,
                                GGS_ListForModes  &var_cas_outInclusionList) {
  var_cas_outModeMap = GGS_M_modesMap::constructor_empty () ;
  var_cas_outInclusionList = GGS_ListForModes::constructor_empty () ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_modeName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_modeName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3A) ;
        GGS_AC_machineDefinition  var_cas_def ;
        nt_definition_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
        var_cas_outModeMap.methode_insertKey (lexique_var_, var_cas_modeName, var_cas_def) ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
      switch (select_repeat_sara_parser_28 (lexique_var_)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_29 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_include) ;
          GGS_lstring  var_cas_sourceModeName ;
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
          var_cas_sourceModeName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
          GGS_luint  var_cas_sourceModeIndex ;
          GGS_AC_machineDefinition  var_cas_36749 ;
          var_cas_outModeMap.methode_searchKeyGetIndex (lexique_var_, var_cas_sourceModeName, var_cas_sourceModeIndex, var_cas_36749) ;
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_to) ;
          GGS_lstring  var_cas_targetModeName ;
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
          var_cas_targetModeName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
          GGS_luint  var_cas_targetModeIndex ;
          GGS_AC_machineDefinition  var_cas_36930 ;
          var_cas_outModeMap.methode_searchKeyGetIndex (lexique_var_, var_cas_targetModeName, var_cas_targetModeIndex, var_cas_36930) ;
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
          if (((var_cas_sourceModeIndex.reader_value ()) == (var_cas_targetModeIndex.reader_value ())).isBuiltAndTrue ()) {
              var_cas_targetModeIndex.reader_location ().signalGGSSemanticWarning (lexique_var_, GGS_string (true, "unuseful include: 'modalcompadd' operator never adds transitions from terminal states to initial states of the same mode")) ;
          }else{
            var_cas_outInclusionList.addAssign_operation (var_cas_sourceModeIndex, var_cas_targetModeIndex) ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'modalcompsub_definition'         *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_modalcompsub_definition_sara_parser_1260_31_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_M_modesMap  &var_cas_outModeMap,
                                GGS_ListForModes  &var_cas_outExclusionList) {
  var_cas_outModeMap = GGS_M_modesMap::constructor_empty () ;
  var_cas_outExclusionList = GGS_ListForModes::constructor_empty () ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_modeName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_modeName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3A) ;
        GGS_AC_machineDefinition  var_cas_def ;
        nt_definition_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
        var_cas_outModeMap.methode_insertKey (lexique_var_, var_cas_modeName, var_cas_def) ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
      switch (select_repeat_sara_parser_30 (lexique_var_)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_sara_parser_31 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_exclude) ;
          GGS_lstring  var_cas_sourceModeName ;
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
          var_cas_sourceModeName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
          GGS_luint  var_cas_sourceModeIndex ;
          GGS_AC_machineDefinition  var_cas_38046 ;
          var_cas_outModeMap.methode_searchKeyGetIndex (lexique_var_, var_cas_sourceModeName, var_cas_sourceModeIndex, var_cas_38046) ;
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_to) ;
          GGS_lstring  var_cas_targetModeName ;
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
          var_cas_targetModeName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
          GGS_luint  var_cas_targetModeIndex ;
          GGS_AC_machineDefinition  var_cas_38227 ;
          var_cas_outModeMap.methode_searchKeyGetIndex (lexique_var_, var_cas_targetModeName, var_cas_targetModeIndex, var_cas_38227) ;
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
          if (((var_cas_sourceModeIndex.reader_value ()) == (var_cas_targetModeIndex.reader_value ())).isBuiltAndTrue ()) {
              var_cas_targetModeIndex.reader_location ().signalGGSSemanticWarning (lexique_var_, GGS_string (true, "unuseful include: 'modalcompadd' operator never adds transitions from terminal states to initial states of the same mode")) ;
          }else{
            var_cas_outExclusionList.addAssign_operation (var_cas_sourceModeIndex, var_cas_targetModeIndex) ;
          }
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'definition_expression_factor'      *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_definition_expression_factor_sara_parser_1301_36_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  switch (select_sara_parser_32 (lexique_var_)) {
    case 1 : {
      nt_explicit_automaton_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_outDefinition) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      nt_definition_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_outDefinition) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      } break ;
    case 3 : {
      GGS_M_variablesMap  var_cas_extendedVariablesMap ;
      var_cas_extendedVariablesMap = var_cas_variablesMap ;
      GGS_uint  var_cas_previousVariableCount ;
      var_cas_previousVariableCount = var_cas_extendedVariablesMap.reader_count () ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3F) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_variableName ;
            lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_variableName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
            var_cas_extendedVariablesMap.methode_insertKey (lexique_var_, var_cas_variableName) ;
          switch (select_repeat_sara_parser_33 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_uint  var_cas_actualVariableCount ;
      var_cas_actualVariableCount = var_cas_extendedVariablesMap.reader_count () ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_extendedVariablesMap, var_cas_def) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      var_cas_outDefinition = GGS_C_existsDefinition::constructor_new (var_cas_previousVariableCount, var_cas_actualVariableCount, var_cas_def) ;
      } break ;
    case 4 : {
      GGS_M_variablesMap  var_cas_extendedVariablesMap ;
      var_cas_extendedVariablesMap = var_cas_variablesMap ;
      GGS_uint  var_cas_previousVariableCount ;
      var_cas_previousVariableCount = var_cas_extendedVariablesMap.reader_count () ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__21) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_variableName ;
            lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_variableName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
            var_cas_extendedVariablesMap.methode_insertKey (lexique_var_, var_cas_variableName) ;
          switch (select_repeat_sara_parser_34 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      GGS_uint  var_cas_actualVariableCount ;
      var_cas_actualVariableCount = var_cas_extendedVariablesMap.reader_count () ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_extendedVariablesMap, var_cas_def) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      var_cas_outDefinition = GGS_C_forallDefinition::constructor_new (var_cas_previousVariableCount, var_cas_actualVariableCount, var_cas_def) ;
      } break ;
    case 5 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_bool) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
      GGS_AC_boolExpression  var_cas_def ;
      nt_io_bool_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_boolToSeqExpression::constructor_new (var_cas_def) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
      } break ;
    case 6 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__40) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_factor_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_fullSaturationOperation::constructor_new (var_cas_def) ;
      } break ;
    case 7 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7E) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_factor_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_complementationOperation::constructor_new (var_cas_def) ;
      } break ;
    case 8 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_nofirst) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_suppressInitialStatesOperation::constructor_new (var_cas_def) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      } break ;
    case 9 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_nolast) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_suppressTerminalStatesOperation::constructor_new (var_cas_def) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
      } break ;
    case 10 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_modalcompadd) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
      GGS_M_modesMap  var_cas_modeMap ;
      GGS_ListForModes  var_cas_inclusionList ;
      nt_modalcompadd_definition_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
      var_cas_outDefinition = GGS_C_additiveModalCompositionComponent::constructor_new (var_cas_modeMap, var_cas_inclusionList) ;
      } break ;
    case 11 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_modalcompsub) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
      GGS_M_modesMap  var_cas_modeMap ;
      GGS_ListForModes  var_cas_exclusionList ;
      nt_modalcompsub_definition_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
      var_cas_outDefinition = GGS_C_substractiveModalCompositionComponent::constructor_new (var_cas_modeMap, var_cas_exclusionList) ;
      } break ;
    case 12 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_trans) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
      GGS_AC_boolExpression  var_cas_sourceExpression ;
      nt_io_bool_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_sourceExpression) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_to) ;
      GGS_AC_boolExpression  var_cas_targetExpression ;
      nt_io_bool_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_targetExpression) ;
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
      var_cas_outDefinition = GGS_C_trans::constructor_new (var_cas_sourceExpression, var_cas_targetExpression) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'definition_expression_factor'      *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_definition_expression_factor_sara_parser_1418_36_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  GGS_lstring  var_cas_machineIdentifier ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_machineIdf) ;
  var_cas_machineIdentifier.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
  GGS_uint  var_cas_machineInputVariableCount ;
  GGS_uint  var_cas_machineInputAndInternalVariableCount ;
  GGS_M_variablesMap  var_cas_machineVariablesMap ;
  GGS_luint  var_cas_indexOfImportedMachine ;
  var_cas_ioMachinesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_machineIdentifier, var_cas_indexOfImportedMachine, var_cas_machineInputVariableCount, var_cas_machineInputAndInternalVariableCount, var_cas_machineVariablesMap) ;
  GGS_L_translationVector  var_cas_translationVector ;
  var_cas_translationVector = GGS_L_translationVector::constructor_empty () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_inputVar ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_inputVar.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        GGS_luint  var_cas_inputVarIndex ;
        var_cas_ioVarMap.methode_searchKeyGetIndex (lexique_var_, var_cas_inputVar, var_cas_inputVarIndex) ;
        var_cas_translationVector.addAssign_operation (var_cas_inputVarIndex) ;
      switch (select_repeat_sara_parser_35 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_translationVector.reader_length () ;
  if (((var_cas_inputVariablesCount) != (var_cas_machineInputVariableCount)).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_value ()))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineInputVariableCount.reader_string ()))) + (GGS_string (true, " input variable(s), but this operand defines ")))) + (var_cas_inputVariablesCount.reader_string ()))) + (GGS_string (true, " input variable(s)")))) ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  switch (select_sara_parser_36 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_internalVar ;
            lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_internalVar.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
            GGS_luint  var_cas_internalVarIndex ;
            var_cas_ioVarMap.methode_searchKeyGetIndex (lexique_var_, var_cas_internalVar, var_cas_internalVarIndex) ;
            var_cas_translationVector.addAssign_operation (var_cas_internalVarIndex) ;
          switch (select_repeat_sara_parser_37 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_translationVector.reader_length () ;
  if (((var_cas_inputAndInternalVariablesCount) != (var_cas_machineInputAndInternalVariableCount)).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_value ()))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineInputAndInternalVariableCount.reader_string ()))) + (GGS_string (true, " input and internal variable(s), but this operand defines ")))) + (var_cas_inputAndInternalVariablesCount.reader_string ()))) + (GGS_string (true, " input and internal variable(s)")))) ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__28) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_outputVar ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_outputVar.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        GGS_luint  var_cas_outputVarIndex ;
        var_cas_ioVarMap.methode_searchKeyGetIndex (lexique_var_, var_cas_outputVar, var_cas_outputVarIndex) ;
        var_cas_translationVector.addAssign_operation (var_cas_outputVarIndex) ;
      switch (select_repeat_sara_parser_38 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__29) ;
  GGS_uint  var_cas_allVariablesCount ;
  var_cas_allVariablesCount = var_cas_translationVector.reader_length () ;
  GGS_uint  var_cas_machineAllVariablesCount ;
  var_cas_machineAllVariablesCount = var_cas_machineVariablesMap.reader_count () ;
  if (((var_cas_allVariablesCount) != (var_cas_machineAllVariablesCount)).isBuiltAndTrue ()) {
      GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((((((((((GGS_string (true, "The '$")) + (var_cas_machineIdentifier.reader_value ()))) + (GGS_string (true, "' machine defines ")))) + (var_cas_machineAllVariablesCount.reader_string ()))) + (GGS_string (true, " variables, but this operand defines ")))) + (var_cas_allVariablesCount.reader_string ()))) + (GGS_string (true, " variables")))) ;
  }
  var_cas_outDefinition = GGS_C_importMachine::constructor_new (var_cas_indexOfImportedMachine.reader_value (), var_cas_translationVector) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'explicit_automaton'           *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
pr_explicit_automaton_sara_parser_1493_26_ (sara_scanner & lexique_var_,
                                GGS_M_machinesMap  &var_cas_ioMachinesMap,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_empty () ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_empty () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_auto) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_state) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_stateName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_stateName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        var_cas_statesMap.methode_insertKey (lexique_var_, var_cas_stateName) ;
      switch (select_repeat_sara_parser_39 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_L_statesDefinitionList  var_cas_initialStatesDefinitionList ;
  var_cas_initialStatesDefinitionList = GGS_L_statesDefinitionList::constructor_empty () ;
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_first) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_initialState ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_initialState.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        GGS_luint  var_cas_initialStateIndex ;
        var_cas_statesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_initialState, var_cas_initialStateIndex) ;
        var_cas_initialStatesDefinitionList.addAssign_operation (var_cas_initialStateIndex, GGS_location (lexique_var_)) ;
      switch (select_repeat_sara_parser_40 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
  GGS_L_statesDefinitionList  var_cas_terminalStatesDefinitionList ;
  var_cas_terminalStatesDefinitionList = GGS_L_statesDefinitionList::constructor_empty () ;
  switch (select_sara_parser_41 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_last) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_terminalState ;
            lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
            var_cas_terminalState.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
            GGS_luint  var_cas_terminalStateIndex ;
            var_cas_statesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_terminalState, var_cas_terminalStateIndex) ;
            var_cas_terminalStatesDefinitionList.addAssign_operation (var_cas_terminalStateIndex, GGS_location (lexique_var_)) ;
          switch (select_repeat_sara_parser_42 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
      } break ;
    default :
      break ;
  }
  GGS_M_stateMap  var_cas_stateDefinitionMap ;
  var_cas_stateDefinitionMap = GGS_M_stateMap::constructor_empty () ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_stateName ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
        var_cas_stateName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
        GGS_luint  var_cas_stateIndex ;
        var_cas_statesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_stateName, var_cas_stateIndex) ;
        var_cas_stateDefinitionMap.methode_defineState (lexique_var_, var_cas_stateName) ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3A) ;
        GGS_AC_boolExpression  var_cas_stateExpression ;
        nt_io_bool_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_stateExpression) ;
        GGS_location  var_cas_endOfStateExpression ;
        var_cas_endOfStateExpression = GGS_location (lexique_var_) ;
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7B) ;
        GGS_L_transitionDefinition  var_cas_transitionsList ;
        var_cas_transitionsList = GGS_L_transitionDefinition::constructor_empty () ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_sara_parser_44 (lexique_var_)) {
              case 2 : {
                GGS_AC_boolExpression  var_cas_transitionInputExpression ;
                nt_io_bool_expression_ (lexique_var_, var_cas_ioMachinesMap, var_cas_variablesMap, var_cas_transitionInputExpression) ;
                GGS_location  var_cas_endOfExpression ;
                var_cas_endOfExpression = GGS_location (lexique_var_) ;
                lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_goto) ;
                GGS_lstring  var_cas_targetStateName ;
                lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1_identifier) ;
                var_cas_targetStateName.defineAttribute (lexique_var_.identifierString, lexique_var_) ;
                GGS_luint  var_cas_targetStateIndex ;
                var_cas_statesMap.methode_searchKeyGetIndex (lexique_var_, var_cas_targetStateName, var_cas_targetStateIndex) ;
                var_cas_transitionsList.addAssign_operation (var_cas_transitionInputExpression, var_cas_endOfExpression, var_cas_targetStateIndex) ;
                lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__3B) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
        var_cas_stateDefinitionList.addAssign_operation (var_cas_stateIndex, var_cas_stateExpression, var_cas_endOfStateExpression, var_cas_transitionsList) ;
      switch (select_repeat_sara_parser_43 (lexique_var_)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_M_stateMap::element_type * operand_47776 = var_cas_statesMap.firstObject () ;
  while ((operand_47776 != NULL)) {
    macroValidPointer (operand_47776) ;
    if (((! var_cas_stateDefinitionMap.reader_hasKey (operand_47776->mKey.reader_value ()))).isBuiltAndTrue ()) {
        GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "'")) + (operand_47776->mKey.reader_value ()))) + (GGS_string (true, "' state is not described")))) ;
    }
    operand_47776 = operand_47776->nextObject () ;
  }
  lexique_var_.acceptTerminal (sara_scanner::sara_scanner_1__7D) ;
  var_cas_outDefinition = GGS_C_explicitAutomatonDefinition::constructor_new (var_cas_statesMap, var_cas_initialStatesDefinitionList, var_cas_terminalStatesDefinitionList, var_cas_stateDefinitionList, GGS_location (lexique_var_)) ;
}

//---------------------------------------------------------------------------*

