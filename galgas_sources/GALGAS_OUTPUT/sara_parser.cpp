//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'sara_parser.cpp'                           *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       april 7th, 2008, at 20h21'9"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "sara_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "sara_parser.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'start_symbol'              *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_start_symbol_sara_parser_72_4_ (sara_scanner & _inLexique) {
  GGS_semanticContext var_cas_semanticContext ;
  var_cas_semanticContext = GGS_semanticContext::constructor_new (_inLexique, GGS_L_jobList::constructor_emptyList (_inLexique COMMA_HERE), GGS_M_machinesMap::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
        nt_component_ (_inLexique, var_cas_semanticContext) ;
      switch (select_repeat_sara_parser_0 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  if (var_cas_semanticContext.reader_componentsMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (82))._isBuilt ()) {
    ::routine_performComputations (_inLexique,  var_cas_semanticContext.reader_componentsMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (82)) COMMA_SOURCE_FILE_AT_LINE (81)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_87_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_check) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_luint  var_cas_machineIndex ;
  GGS_uint  automatic_var_0 ;
  GGS_uint  automatic_var_1 ;
  GGS_M_variablesMap  automatic_var_2 ;
  const GGS_M_machinesMap  _temp_2878 = var_cas_ioSemanticContext.reader_machinesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
  if (_temp_2878._isBuilt ()) {
    _temp_2878 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, automatic_var_0, automatic_var_1, automatic_var_2 COMMA_SOURCE_FILE_AT_LINE (100)) ;
  }
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_C_machineCheck::constructor_new (_inLexique, var_cas_machineIndex, GGS_bool (true, false) COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_108_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_checkidentical) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName1 ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineName1) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName2 ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineName2) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_luint  var_cas_machineIndex1 ;
  GGS_uint  automatic_var_3 ;
  GGS_uint  automatic_var_4 ;
  GGS_M_variablesMap  automatic_var_5 ;
  const GGS_M_machinesMap  _temp_3625 = var_cas_ioSemanticContext.reader_machinesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (124)) ;
  if (_temp_3625._isBuilt ()) {
    _temp_3625 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName1, var_cas_machineIndex1, automatic_var_3, automatic_var_4, automatic_var_5 COMMA_SOURCE_FILE_AT_LINE (124)) ;
  }
  GGS_luint  var_cas_machineIndex2 ;
  GGS_uint  automatic_var_6 ;
  GGS_uint  automatic_var_7 ;
  GGS_M_variablesMap  automatic_var_8 ;
  const GGS_M_machinesMap  _temp_3781 = var_cas_ioSemanticContext.reader_machinesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (127)) ;
  if (_temp_3781._isBuilt ()) {
    _temp_3781 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName2, var_cas_machineIndex2, automatic_var_6, automatic_var_7, automatic_var_8 COMMA_SOURCE_FILE_AT_LINE (127)) ;
  }
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_C_machineCheckIdentical::constructor_new (_inLexique, var_cas_machineIndex1, var_cas_machineIndex2 COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_135_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_checkbool) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_luint  var_cas_machineIndex ;
  GGS_uint  automatic_var_9 ;
  GGS_uint  automatic_var_10 ;
  GGS_M_variablesMap  automatic_var_11 ;
  const GGS_M_machinesMap  _temp_4474 = var_cas_ioSemanticContext.reader_machinesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (148)) ;
  if (_temp_4474._isBuilt ()) {
    _temp_4474 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, automatic_var_9, automatic_var_10, automatic_var_11 COMMA_SOURCE_FILE_AT_LINE (148)) ;
  }
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_C_machineCheck::constructor_new (_inLexique, var_cas_machineIndex, GGS_bool (true, true) COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_156_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_use_5Fand) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeUse_AND::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_167_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_use_5Fite) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeUse_ITE::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_178_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_use_5Fand_5Fite) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeUse_AND_ITE::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_189_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_and_5Fcache) COMMA_HERE) ;
  GGS_luint  var_cas_size ;
  _inLexique._assignFromAttribute_ulongValue (var_cas_size) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_literal_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeResize_AND_cache::constructor_new (_inLexique, var_cas_size COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_201_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_ite_5Fcache) COMMA_HERE) ;
  GGS_luint  var_cas_size ;
  _inLexique._assignFromAttribute_ulongValue (var_cas_size) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_literal_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeResize_ITE_cache::constructor_new (_inLexique, var_cas_size COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_214_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_map) COMMA_HERE) ;
  GGS_luint  var_cas_size ;
  _inLexique._assignFromAttribute_ulongValue (var_cas_size) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_literal_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeResizeMap::constructor_new (_inLexique, var_cas_size COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_227_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_bdd) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_AC_job  var_cas_job ;
  var_cas_job = GGS_typeDisplayBDDstats::constructor_new (_inLexique COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_job) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_238_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
        GGS_lstring  var_cas_inputVarName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_inputVarName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_inputVarName COMMA_SOURCE_FILE_AT_LINE (252)) ;
      switch (select_repeat_sara_parser_1 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (256)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  switch (select_sara_parser_2 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_3 = true ;
        while (syntaxRepeat_3) {
            GGS_lstring  var_cas_outputVarName ;
            _inLexique._assignFromAttribute_identifierString (var_cas_outputVarName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_outputVarName COMMA_SOURCE_FILE_AT_LINE (265)) ;
          switch (select_repeat_sara_parser_3 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_3 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_4 = true ;
    while (syntaxRepeat_4) {
        GGS_lstring  var_cas_outputVarName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_outputVarName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_outputVarName COMMA_SOURCE_FILE_AT_LINE (277)) ;
      switch (select_repeat_sara_parser_4 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_4 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_AC_machineDefinition  var_cas_definition ;
  nt_definition_expression_ (_inLexique, var_cas_ioSemanticContext, var_cas_variablesMap, var_cas_definition) ;
  GGS_luint  var_cas_machineIndex ;
  var_cas_ioSemanticContext.machinesMap.modifier_insertKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap COMMA_SOURCE_FILE_AT_LINE (288)) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_machineComponent::constructor_new (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_definition COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_machine) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_297_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_modalcompadd) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
        GGS_lstring  var_cas_inputVarName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_inputVarName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_inputVarName COMMA_SOURCE_FILE_AT_LINE (312)) ;
      switch (select_repeat_sara_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (316)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  switch (select_sara_parser_6 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_7 = true ;
        while (syntaxRepeat_7) {
            GGS_lstring  var_cas_outputVarName ;
            _inLexique._assignFromAttribute_identifierString (var_cas_outputVarName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_outputVarName COMMA_SOURCE_FILE_AT_LINE (325)) ;
          switch (select_repeat_sara_parser_7 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_7 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (331)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
        GGS_lstring  var_cas_outputVarName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_outputVarName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_outputVarName COMMA_SOURCE_FILE_AT_LINE (337)) ;
      switch (select_repeat_sara_parser_8 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_M_modesMap  var_cas_modeMap ;
  GGS_ListForModes  var_cas_inclusionList ;
  nt_modalcompadd_definition_ (_inLexique, var_cas_ioSemanticContext, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList) ;
  GGS_luint  var_cas_machineIndex ;
  var_cas_ioSemanticContext.machinesMap.modifier_insertKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap COMMA_SOURCE_FILE_AT_LINE (354)) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_machineDefinedByAdditiveModalComp::constructor_new (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_machine) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_371_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_modalcompsub) COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
        GGS_lstring  var_cas_inputVarName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_inputVarName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_inputVarName COMMA_SOURCE_FILE_AT_LINE (386)) ;
      switch (select_repeat_sara_parser_9 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (390)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  switch (select_sara_parser_10 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_11 = true ;
        while (syntaxRepeat_11) {
            GGS_lstring  var_cas_outputVarName ;
            _inLexique._assignFromAttribute_identifierString (var_cas_outputVarName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_outputVarName COMMA_SOURCE_FILE_AT_LINE (399)) ;
          switch (select_repeat_sara_parser_11 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_11 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (405)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
        GGS_lstring  var_cas_outputVarName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_outputVarName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_outputVarName COMMA_SOURCE_FILE_AT_LINE (411)) ;
      switch (select_repeat_sara_parser_12 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3A_3D) COMMA_HERE) ;
  GGS_M_modesMap  var_cas_modeMap ;
  GGS_ListForModes  var_cas_exclusionList ;
  nt_modalcompsub_definition_ (_inLexique, var_cas_ioSemanticContext, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList) ;
  GGS_luint  var_cas_machineIndex ;
  var_cas_ioSemanticContext.machinesMap.modifier_insertKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap COMMA_SOURCE_FILE_AT_LINE (428)) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_machineDefinedBySubstractiveModalComp::constructor_new (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_machine) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'component'                *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_component_sara_parser_443_4_ (sara_scanner & _inLexique,
                                GGS_semanticContext &var_cas_ioSemanticContext) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_scenario) COMMA_HERE) ;
  GGS_M_variablesMap  var_cas_variablesMap ;
  var_cas_variablesMap = GGS_M_variablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_lstring  var_cas_machineName ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  GGS_luint  var_cas_machineIndex ;
  GGS_uint  var_cas_inputVariablesCountFromDefinition ;
  GGS_uint  var_cas_inputAndInternalVariablesCountFromDefinition ;
  GGS_M_variablesMap  var_cas_variablesMapFromDefinition ;
  const GGS_M_machinesMap  _temp_12616 = var_cas_ioSemanticContext.reader_machinesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (458)) ;
  if (_temp_12616._isBuilt ()) {
    _temp_12616 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineName, var_cas_machineIndex, var_cas_inputVariablesCountFromDefinition, var_cas_inputAndInternalVariablesCountFromDefinition, var_cas_variablesMapFromDefinition COMMA_SOURCE_FILE_AT_LINE (458)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_13 = true ;
    while (syntaxRepeat_13) {
        GGS_lstring  var_cas_inputVarName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_inputVarName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_inputVarName COMMA_SOURCE_FILE_AT_LINE (464)) ;
      switch (select_repeat_sara_parser_13 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_13 = false ;
          break ;
      }
    }
  }
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_variablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (468)) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  if (((var_cas_inputVariablesCountFromDefinition)._operator_isNotEqual (var_cas_inputVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This declaration names "))._operator_concat (var_cas_inputVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (472))))._operator_concat (GGS_string (true, " input variable(s), but machine definition names ")))._operator_concat (var_cas_inputVariablesCountFromDefinition.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (473))))._operator_concat (GGS_string (true, " input variable(s)")) COMMA_SOURCE_FILE_AT_LINE (473)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  switch (select_sara_parser_14 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_15 = true ;
        while (syntaxRepeat_15) {
            GGS_lstring  var_cas_outputVarName ;
            _inLexique._assignFromAttribute_identifierString (var_cas_outputVarName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_outputVarName COMMA_SOURCE_FILE_AT_LINE (482)) ;
          switch (select_repeat_sara_parser_15 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_15 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_variablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (489)) ;
  if (((var_cas_inputAndInternalVariablesCountFromDefinition)._operator_isNotEqual (var_cas_inputAndInternalVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This declaration names "))._operator_concat (var_cas_inputAndInternalVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (491))))._operator_concat (GGS_string (true, " input and internal variable(s), but machine definition names ")))._operator_concat (var_cas_inputAndInternalVariablesCountFromDefinition.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (492))))._operator_concat (GGS_string (true, " input and internal variable(s)")) COMMA_SOURCE_FILE_AT_LINE (492)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_16 = true ;
    while (syntaxRepeat_16) {
        GGS_lstring  var_cas_outputVarName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_outputVarName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        var_cas_variablesMap.modifier_insertKey (_inLexique, var_cas_outputVarName COMMA_SOURCE_FILE_AT_LINE (499)) ;
      switch (select_repeat_sara_parser_16 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_16 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_outputVariablesCount ;
  var_cas_outputVariablesCount = var_cas_variablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (505)) ;
  GGS_uint  var_cas_outputVariablesCountFromDefinition ;
  var_cas_outputVariablesCountFromDefinition = var_cas_variablesMapFromDefinition.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (506)) ;
  if (((var_cas_outputVariablesCountFromDefinition)._operator_isNotEqual (var_cas_outputVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "This declaration names "))._operator_concat (var_cas_outputVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (508))))._operator_concat (GGS_string (true, " variables, but machine definition names ")))._operator_concat (var_cas_outputVariablesCountFromDefinition.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (509))))._operator_concat (GGS_string (true, " variables")) COMMA_SOURCE_FILE_AT_LINE (509)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7B) COMMA_HERE) ;
  GGS_L_scenarioList  var_cas_scenarioList ;
  var_cas_scenarioList = GGS_L_scenarioList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
        GGS_lstring  var_cas_scenarioTitle ;
        _inLexique._assignFromAttribute_identifierString (var_cas_scenarioTitle) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_literal_5Fstring) COMMA_HERE) ;
        GGS_L_inputScenario  var_cas_inputScenario ;
        var_cas_inputScenario = GGS_L_inputScenario::constructor_emptyList (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat_18 = true ;
          while (syntaxRepeat_18) {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3A) COMMA_HERE) ;
              GGS_L_inputConfigurationForScenario  var_cas_inputConfigurationForScenario ;
              var_cas_inputConfigurationForScenario = GGS_L_inputConfigurationForScenario::constructor_emptyList (_inLexique COMMA_HERE) ;
              { bool syntaxRepeat_19 = true ;
                while (syntaxRepeat_19) {
                    GGS_luint  var_cas_v ;
                    _inLexique._assignFromAttribute_ulongValue (var_cas_v) ;
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_literal_5Finteger) COMMA_HERE) ;
                    if (((var_cas_v.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (523)))._operator_strictSup (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
                      var_cas_v.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this value is not a  binary digit") COMMA_SOURCE_FILE_AT_LINE (524)) ;
                    }
                    var_cas_inputConfigurationForScenario._addAssign_operation (var_cas_v) ;
                  switch (select_repeat_sara_parser_19 (_inLexique)) {
                    case 2 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
                      } break ;
                    default :
                      syntaxRepeat_19 = false ;
                      break ;
                  }
                }
              }
              if (((var_cas_inputVariablesCount)._operator_isNotEqual (var_cas_inputConfigurationForScenario.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (530)))).isBuiltAndTrue ()) {
                GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((GGS_string (true, "this input configuration names "))._operator_concat (var_cas_inputConfigurationForScenario.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (531)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (531))))._operator_concat (GGS_string (true, " input variable(s), instead of ")))._operator_concat (var_cas_inputVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (531))) COMMA_SOURCE_FILE_AT_LINE (531)) ;
              }
              var_cas_inputScenario._addAssign_operation (var_cas_inputConfigurationForScenario) ;
            switch (select_repeat_sara_parser_18 (_inLexique)) {
              case 2 : {
                } break ;
              default :
                syntaxRepeat_18 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
        var_cas_scenarioList._addAssign_operation (var_cas_scenarioTitle, var_cas_inputScenario) ;
      switch (select_repeat_sara_parser_17 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7D) COMMA_HERE) ;
  GGS_AC_job  var_cas_machine ;
  var_cas_machine = GGS_C_scenarioComponent::constructor_new (_inLexique, var_cas_machineIndex, var_cas_inputVariablesCount, var_cas_inputAndInternalVariablesCount, var_cas_variablesMap, var_cas_scenarioList COMMA_HERE) ;
  var_cas_ioSemanticContext.componentsMap._addAssign_operation (var_cas_machine) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'io_bool_expression'           *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_bool_expression_sara_parser_548_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  nt_io_and_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_outExpression) ;
  { bool syntaxRepeat_20 = true ;
    while (syntaxRepeat_20) {
      switch (select_repeat_sara_parser_20 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7C) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_orExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__5E) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_xorExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2D_3E) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_impliesExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        case 5 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3D) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_and_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_equalExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_20 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'io_and_expression'            *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_and_expression_sara_parser_580_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  nt_io_primary_ (_inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_outExpression) ;
  { bool syntaxRepeat_21 = true ;
    while (syntaxRepeat_21) {
      switch (select_repeat_sara_parser_21 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__26) COMMA_HERE) ;
          GGS_AC_boolExpression  var_cas_rightExpression ;
          nt_io_primary_ (_inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_rightExpression) ;
          var_cas_outExpression = GGS_C_andExpression::constructor_new (_inLexique, var_cas_outExpression, var_cas_rightExpression COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_21 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_597_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  nt_io_bool_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_outExpression) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_609_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext /* var_cas_inSemanticContext */,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_inputVarName ;
  _inLexique._assignFromAttribute_identifierString (var_cas_inputVarName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
  GGS_luint  var_cas_inputVarIndex ;
  const GGS_M_variablesMap  _temp_18215 = var_cas_ioVarMap ;
  if (_temp_18215._isBuilt ()) {
    _temp_18215 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_inputVarName, var_cas_inputVarIndex COMMA_SOURCE_FILE_AT_LINE (617)) ;
  }
  var_cas_outExpression = GGS_C_VariableExpression::constructor_new (_inLexique, var_cas_inputVarIndex COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_623_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7E) COMMA_HERE) ;
  GGS_AC_boolExpression  var_cas_expression ;
  nt_io_primary_ (_inLexique, var_cas_inSemanticContext, var_cas_ioVarMap, var_cas_expression) ;
  var_cas_outExpression = GGS_C_notExpression::constructor_new (_inLexique, var_cas_expression COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_636_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext /* var_cas_inSemanticContext */,
                                GGS_M_variablesMap  &/* var_cas_ioVarMap */,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_false) COMMA_HERE) ;
  var_cas_outExpression = GGS_C_falseExpression::constructor_new (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_647_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext /* var_cas_inSemanticContext */,
                                GGS_M_variablesMap  &/* var_cas_ioVarMap */,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_true) COMMA_HERE) ;
  var_cas_outExpression = GGS_C_trueExpression::constructor_new (_inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'io_primary'               *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_io_primary_sara_parser_658_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_boolExpression  &var_cas_outExpression) {
  GGS_lstring  var_cas_machineIdentifier ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineIdentifier) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  GGS_uint  var_cas_machineInputVariableCount ;
  GGS_uint  var_cas_machineInputAndInternalVariableCount ;
  GGS_M_variablesMap  var_cas_machineVariablesMap ;
  GGS_luint  var_cas_indexOfImportedMachine ;
  const GGS_M_machinesMap  _temp_19754 = var_cas_inSemanticContext.reader_machinesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (669)) ;
  if (_temp_19754._isBuilt ()) {
    _temp_19754 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineIdentifier, var_cas_indexOfImportedMachine, var_cas_machineInputVariableCount, var_cas_machineInputAndInternalVariableCount, var_cas_machineVariablesMap COMMA_SOURCE_FILE_AT_LINE (669)) ;
  }
  GGS_L_translationVector  var_cas_translationVector ;
  var_cas_translationVector = GGS_L_translationVector::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_22 = true ;
    while (syntaxRepeat_22) {
        GGS_lstring  var_cas_inputVar ;
        _inLexique._assignFromAttribute_identifierString (var_cas_inputVar) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        GGS_luint  var_cas_inputVarIndex ;
        const GGS_M_variablesMap  _temp_20098 = var_cas_ioVarMap ;
        if (_temp_20098._isBuilt ()) {
          _temp_20098 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_inputVar, var_cas_inputVarIndex COMMA_SOURCE_FILE_AT_LINE (677)) ;
        }
        var_cas_translationVector._addAssign_operation (var_cas_inputVarIndex) ;
      switch (select_repeat_sara_parser_22 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_22 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_translationVector.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (683)) ;
  if (((var_cas_inputVariablesCount)._operator_isNotEqual (var_cas_machineInputVariableCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "The '$"))._operator_concat (var_cas_machineIdentifier))._operator_concat (GGS_string (true, "' machine defines ")))._operator_concat (var_cas_machineInputVariableCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (685))))._operator_concat (GGS_string (true, " input variable(s), but this operand defines ")))._operator_concat (var_cas_inputVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (686))))._operator_concat (GGS_string (true, " input variable(s)")) COMMA_SOURCE_FILE_AT_LINE (686)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  switch (select_sara_parser_23 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_24 = true ;
        while (syntaxRepeat_24) {
            GGS_lstring  var_cas_internalVar ;
            _inLexique._assignFromAttribute_identifierString (var_cas_internalVar) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
            GGS_luint  var_cas_internalVarIndex ;
            const GGS_M_variablesMap  _temp_20748 = var_cas_ioVarMap ;
            if (_temp_20748._isBuilt ()) {
              _temp_20748 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_internalVar, var_cas_internalVarIndex COMMA_SOURCE_FILE_AT_LINE (696)) ;
            }
            var_cas_translationVector._addAssign_operation (var_cas_internalVarIndex) ;
          switch (select_repeat_sara_parser_24 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_24 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_translationVector.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (703)) ;
  if (((var_cas_inputAndInternalVariablesCount)._operator_isNotEqual (var_cas_machineInputAndInternalVariableCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "The '$"))._operator_concat (var_cas_machineIdentifier.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (705))))._operator_concat (GGS_string (true, "' machine defines ")))._operator_concat (var_cas_machineInputAndInternalVariableCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (705))))._operator_concat (GGS_string (true, " input and internal variable(s), but this operand defines ")))._operator_concat (var_cas_inputAndInternalVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (706))))._operator_concat (GGS_string (true, " input and internal variable(s)")) COMMA_SOURCE_FILE_AT_LINE (706)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
        GGS_lstring  var_cas_outputVar ;
        _inLexique._assignFromAttribute_identifierString (var_cas_outputVar) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        GGS_luint  var_cas_outputVarIndex ;
        const GGS_M_variablesMap  _temp_21489 = var_cas_ioVarMap ;
        if (_temp_21489._isBuilt ()) {
          _temp_21489 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_outputVar, var_cas_outputVarIndex COMMA_SOURCE_FILE_AT_LINE (714)) ;
        }
        var_cas_translationVector._addAssign_operation (var_cas_outputVarIndex) ;
      switch (select_repeat_sara_parser_25 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_allVariablesCount ;
  var_cas_allVariablesCount = var_cas_translationVector.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (720)) ;
  GGS_uint  var_cas_machineAllVariablesCount ;
  var_cas_machineAllVariablesCount = var_cas_machineVariablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (721)) ;
  if (((var_cas_allVariablesCount)._operator_isNotEqual (var_cas_machineAllVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "The '$"))._operator_concat (var_cas_machineIdentifier.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (723))))._operator_concat (GGS_string (true, "' machine defines ")))._operator_concat (var_cas_machineAllVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (723))))._operator_concat (GGS_string (true, " variables, but this operand defines ")))._operator_concat (var_cas_allVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (724))))._operator_concat (GGS_string (true, " variables")) COMMA_SOURCE_FILE_AT_LINE (724)) ;
  }
  var_cas_outExpression = GGS_C_importBoolMachine::constructor_new (_inLexique, var_cas_indexOfImportedMachine.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (727)), var_cas_machineIdentifier.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (728)), var_cas_translationVector COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'definition_expression'          *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_definition_expression_sara_parser_737_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  nt_definition_expression_term_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_outDefinition) ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
      switch (select_repeat_sara_parser_26 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2B) COMMA_HERE) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_term_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_orComposition::constructor_new (_inLexique, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'definition_expression_term'       *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_definition_expression_term_sara_parser_755_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  nt_definition_expression_factor_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_outDefinition) ;
  { bool syntaxRepeat_27 = true ;
    while (syntaxRepeat_27) {
      switch (select_repeat_sara_parser_27 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2A) COMMA_HERE) ;
          GGS_location  var_cas_errorLocation ;
          var_cas_errorLocation = GGS_location (_inLexique) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_factor_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_strongModalComposition::constructor_new (_inLexique, var_cas_leftOperand, var_cas_errorLocation, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2A_2A) COMMA_HERE) ;
          GGS_location  var_cas_errorLocation ;
          var_cas_errorLocation = GGS_location (_inLexique) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_factor_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_weakModalComposition::constructor_new (_inLexique, var_cas_leftOperand, var_cas_errorLocation, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 4 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7C_7C) COMMA_HERE) ;
          GGS_AC_machineDefinition  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_outDefinition ;
          GGS_AC_machineDefinition  var_cas_rightOperand ;
          nt_definition_expression_factor_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_rightOperand) ;
          var_cas_outDefinition = GGS_C_parallelComposition::constructor_new (_inLexique, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_27 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'modalcompadd_definition'         *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_modalcompadd_definition_sara_parser_787_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_M_modesMap  &var_cas_outModeMap,
                                GGS_ListForModes  &var_cas_outInclusionList) {
  var_cas_outModeMap = GGS_M_modesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outInclusionList = GGS_ListForModes::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_28 = true ;
    while (syntaxRepeat_28) {
        GGS_lstring  var_cas_modeName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_modeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3A) COMMA_HERE) ;
        GGS_AC_machineDefinition  var_cas_def ;
        nt_definition_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
        var_cas_outModeMap.modifier_insertKey (_inLexique, var_cas_modeName, var_cas_def COMMA_SOURCE_FILE_AT_LINE (801)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_sara_parser_28 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_28 = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat_29 = true ;
    while (syntaxRepeat_29) {
      switch (select_repeat_sara_parser_29 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_include) COMMA_HERE) ;
          GGS_lstring  var_cas_sourceModeName ;
          _inLexique._assignFromAttribute_identifierString (var_cas_sourceModeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
          GGS_luint  var_cas_sourceModeIndex ;
          GGS_AC_machineDefinition  automatic_var_12 ;
          const GGS_M_modesMap  _temp_24974 = var_cas_outModeMap ;
          if (_temp_24974._isBuilt ()) {
            _temp_24974 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_sourceModeName, var_cas_sourceModeIndex, automatic_var_12 COMMA_SOURCE_FILE_AT_LINE (811)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_to) COMMA_HERE) ;
          GGS_lstring  var_cas_targetModeName ;
          _inLexique._assignFromAttribute_identifierString (var_cas_targetModeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
          GGS_luint  var_cas_targetModeIndex ;
          GGS_AC_machineDefinition  automatic_var_13 ;
          const GGS_M_modesMap  _temp_25153 = var_cas_outModeMap ;
          if (_temp_25153._isBuilt ()) {
            _temp_25153 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_targetModeName, var_cas_targetModeIndex, automatic_var_13 COMMA_SOURCE_FILE_AT_LINE (816)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
          if (((var_cas_sourceModeIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (818)))._operator_isEqual (var_cas_targetModeIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (818)))).isBuiltAndTrue ()) {
            var_cas_targetModeIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "unuseful include: 'modalcompadd' operator never adds transitions from terminal states to initial states of the same mode") COMMA_SOURCE_FILE_AT_LINE (819)) ;
          }else{
            var_cas_outInclusionList._addAssign_operation (var_cas_sourceModeIndex, var_cas_targetModeIndex) ;
          }
          } break ;
        default :
          syntaxRepeat_29 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'modalcompsub_definition'         *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_modalcompsub_definition_sara_parser_828_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_M_modesMap  &var_cas_outModeMap,
                                GGS_ListForModes  &var_cas_outExclusionList) {
  var_cas_outModeMap = GGS_M_modesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  var_cas_outExclusionList = GGS_ListForModes::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_30 = true ;
    while (syntaxRepeat_30) {
        GGS_lstring  var_cas_modeName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_modeName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3A) COMMA_HERE) ;
        GGS_AC_machineDefinition  var_cas_def ;
        nt_definition_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
        var_cas_outModeMap.modifier_insertKey (_inLexique, var_cas_modeName, var_cas_def COMMA_SOURCE_FILE_AT_LINE (842)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
      switch (select_repeat_sara_parser_30 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_30 = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat_31 = true ;
    while (syntaxRepeat_31) {
      switch (select_repeat_sara_parser_31 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_exclude) COMMA_HERE) ;
          GGS_lstring  var_cas_sourceModeName ;
          _inLexique._assignFromAttribute_identifierString (var_cas_sourceModeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
          GGS_luint  var_cas_sourceModeIndex ;
          GGS_AC_machineDefinition  automatic_var_14 ;
          const GGS_M_modesMap  _temp_26281 = var_cas_outModeMap ;
          if (_temp_26281._isBuilt ()) {
            _temp_26281 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_sourceModeName, var_cas_sourceModeIndex, automatic_var_14 COMMA_SOURCE_FILE_AT_LINE (852)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_to) COMMA_HERE) ;
          GGS_lstring  var_cas_targetModeName ;
          _inLexique._assignFromAttribute_identifierString (var_cas_targetModeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
          GGS_luint  var_cas_targetModeIndex ;
          GGS_AC_machineDefinition  automatic_var_15 ;
          const GGS_M_modesMap  _temp_26460 = var_cas_outModeMap ;
          if (_temp_26460._isBuilt ()) {
            _temp_26460 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_targetModeName, var_cas_targetModeIndex, automatic_var_15 COMMA_SOURCE_FILE_AT_LINE (857)) ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
          if (((var_cas_sourceModeIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (859)))._operator_isEqual (var_cas_targetModeIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (859)))).isBuiltAndTrue ()) {
            var_cas_targetModeIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "unuseful include: 'modalcompadd' operator never adds transitions from terminal states to initial states of the same mode") COMMA_SOURCE_FILE_AT_LINE (860)) ;
          }else{
            var_cas_outExclusionList._addAssign_operation (var_cas_sourceModeIndex, var_cas_targetModeIndex) ;
          }
          } break ;
        default :
          syntaxRepeat_31 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'definition_expression_factor'      *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_definition_expression_factor_sara_parser_869_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  switch (select_sara_parser_32 (_inLexique)) {
    case 1 : {
      nt_explicit_automaton_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_outDefinition) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
      nt_definition_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_outDefinition) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_M_variablesMap  var_cas_extendedVariablesMap ;
      var_cas_extendedVariablesMap = var_cas_variablesMap ;
      GGS_uint  var_cas_previousVariableCount ;
      var_cas_previousVariableCount = var_cas_extendedVariablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (882)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3F) COMMA_HERE) ;
      { bool syntaxRepeat_33 = true ;
        while (syntaxRepeat_33) {
            GGS_lstring  var_cas_variableName ;
            _inLexique._assignFromAttribute_identifierString (var_cas_variableName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
            var_cas_extendedVariablesMap.modifier_insertKey (_inLexique, var_cas_variableName COMMA_SOURCE_FILE_AT_LINE (887)) ;
          switch (select_repeat_sara_parser_33 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_33 = false ;
              break ;
          }
        }
      }
      GGS_uint  var_cas_actualVariableCount ;
      var_cas_actualVariableCount = var_cas_extendedVariablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (891)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_extendedVariablesMap, var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_existsDefinition::constructor_new (_inLexique, var_cas_previousVariableCount, var_cas_actualVariableCount, var_cas_def COMMA_HERE) ;
      } break ;
    case 4 : {
      GGS_M_variablesMap  var_cas_extendedVariablesMap ;
      var_cas_extendedVariablesMap = var_cas_variablesMap ;
      GGS_uint  var_cas_previousVariableCount ;
      var_cas_previousVariableCount = var_cas_extendedVariablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (899)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__21) COMMA_HERE) ;
      { bool syntaxRepeat_34 = true ;
        while (syntaxRepeat_34) {
            GGS_lstring  var_cas_variableName ;
            _inLexique._assignFromAttribute_identifierString (var_cas_variableName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
            var_cas_extendedVariablesMap.modifier_insertKey (_inLexique, var_cas_variableName COMMA_SOURCE_FILE_AT_LINE (904)) ;
          switch (select_repeat_sara_parser_34 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_34 = false ;
              break ;
          }
        }
      }
      GGS_uint  var_cas_actualVariableCount ;
      var_cas_actualVariableCount = var_cas_extendedVariablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (908)) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_extendedVariablesMap, var_cas_def) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_forallDefinition::constructor_new (_inLexique, var_cas_previousVariableCount, var_cas_actualVariableCount, var_cas_def COMMA_HERE) ;
      } break ;
    case 5 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_bool) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7B) COMMA_HERE) ;
      GGS_AC_boolExpression  var_cas_def ;
      nt_io_bool_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_boolToSeqExpression::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7D) COMMA_HERE) ;
      } break ;
    case 6 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__40) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_factor_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_fullSaturationOperation::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      } break ;
    case 7 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7E) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_factor_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_complementationOperation::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      } break ;
    case 8 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_nofirst) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_suppressInitialStatesOperation::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
      } break ;
    case 9 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_nolast) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
      GGS_AC_machineDefinition  var_cas_def ;
      nt_definition_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_def) ;
      var_cas_outDefinition = GGS_C_suppressTerminalStatesOperation::constructor_new (_inLexique, var_cas_def COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
      } break ;
    case 10 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_modalcompadd) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7B) COMMA_HERE) ;
      GGS_M_modesMap  var_cas_modeMap ;
      GGS_ListForModes  var_cas_inclusionList ;
      nt_modalcompadd_definition_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_modeMap, var_cas_inclusionList) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7D) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_additiveModalCompositionComponent::constructor_new (_inLexique, var_cas_modeMap, var_cas_inclusionList COMMA_HERE) ;
      } break ;
    case 11 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_modalcompsub) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7B) COMMA_HERE) ;
      GGS_M_modesMap  var_cas_modeMap ;
      GGS_ListForModes  var_cas_exclusionList ;
      nt_modalcompsub_definition_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_modeMap, var_cas_exclusionList) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7D) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_substractiveModalCompositionComponent::constructor_new (_inLexique, var_cas_modeMap, var_cas_exclusionList COMMA_HERE) ;
      } break ;
    case 12 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_trans) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7B) COMMA_HERE) ;
      GGS_AC_boolExpression  var_cas_sourceExpression ;
      nt_io_bool_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_sourceExpression) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_to) COMMA_HERE) ;
      GGS_AC_boolExpression  var_cas_targetExpression ;
      nt_io_bool_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_targetExpression) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7D) COMMA_HERE) ;
      var_cas_outDefinition = GGS_C_trans::constructor_new (_inLexique, var_cas_sourceExpression, var_cas_targetExpression COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of production rule 'definition_expression_factor'      *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_definition_expression_factor_sara_parser_986_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_ioVarMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  GGS_lstring  var_cas_machineIdentifier ;
  _inLexique._assignFromAttribute_identifierString (var_cas_machineIdentifier) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_machineIdf) COMMA_HERE) ;
  GGS_uint  var_cas_machineInputVariableCount ;
  GGS_uint  var_cas_machineInputAndInternalVariableCount ;
  GGS_M_variablesMap  var_cas_machineVariablesMap ;
  GGS_luint  var_cas_indexOfImportedMachine ;
  const GGS_M_machinesMap  _temp_30974 = var_cas_inSemanticContext.reader_machinesMap (_inLexique COMMA_SOURCE_FILE_AT_LINE (997)) ;
  if (_temp_30974._isBuilt ()) {
    _temp_30974 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_machineIdentifier, var_cas_indexOfImportedMachine, var_cas_machineInputVariableCount, var_cas_machineInputAndInternalVariableCount, var_cas_machineVariablesMap COMMA_SOURCE_FILE_AT_LINE (997)) ;
  }
  GGS_L_translationVector  var_cas_translationVector ;
  var_cas_translationVector = GGS_L_translationVector::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_35 = true ;
    while (syntaxRepeat_35) {
        GGS_lstring  var_cas_inputVar ;
        _inLexique._assignFromAttribute_identifierString (var_cas_inputVar) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        GGS_luint  var_cas_inputVarIndex ;
        const GGS_M_variablesMap  _temp_31318 = var_cas_ioVarMap ;
        if (_temp_31318._isBuilt ()) {
          _temp_31318 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_inputVar, var_cas_inputVarIndex COMMA_SOURCE_FILE_AT_LINE (1005)) ;
        }
        var_cas_translationVector._addAssign_operation (var_cas_inputVarIndex) ;
      switch (select_repeat_sara_parser_35 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_35 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_inputVariablesCount ;
  var_cas_inputVariablesCount = var_cas_translationVector.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1011)) ;
  if (((var_cas_inputVariablesCount)._operator_isNotEqual (var_cas_machineInputVariableCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "The '$"))._operator_concat (var_cas_machineIdentifier.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1013))))._operator_concat (GGS_string (true, "' machine defines ")))._operator_concat (var_cas_machineInputVariableCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1013))))._operator_concat (GGS_string (true, " input variable(s), but this operand defines ")))._operator_concat (var_cas_inputVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1014))))._operator_concat (GGS_string (true, " input variable(s)")) COMMA_SOURCE_FILE_AT_LINE (1014)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  switch (select_sara_parser_36 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_37 = true ;
        while (syntaxRepeat_37) {
            GGS_lstring  var_cas_internalVar ;
            _inLexique._assignFromAttribute_identifierString (var_cas_internalVar) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
            GGS_luint  var_cas_internalVarIndex ;
            const GGS_M_variablesMap  _temp_31977 = var_cas_ioVarMap ;
            if (_temp_31977._isBuilt ()) {
              _temp_31977 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_internalVar, var_cas_internalVarIndex COMMA_SOURCE_FILE_AT_LINE (1024)) ;
            }
            var_cas_translationVector._addAssign_operation (var_cas_internalVarIndex) ;
          switch (select_repeat_sara_parser_37 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_37 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_inputAndInternalVariablesCount ;
  var_cas_inputAndInternalVariablesCount = var_cas_translationVector.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1031)) ;
  if (((var_cas_inputAndInternalVariablesCount)._operator_isNotEqual (var_cas_machineInputAndInternalVariableCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "The '$"))._operator_concat (var_cas_machineIdentifier.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1033))))._operator_concat (GGS_string (true, "' machine defines ")))._operator_concat (var_cas_machineInputAndInternalVariableCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1033))))._operator_concat (GGS_string (true, " input and internal variable(s), but this operand defines ")))._operator_concat (var_cas_inputAndInternalVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1034))))._operator_concat (GGS_string (true, " input and internal variable(s)")) COMMA_SOURCE_FILE_AT_LINE (1034)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__28) COMMA_HERE) ;
  { bool syntaxRepeat_38 = true ;
    while (syntaxRepeat_38) {
        GGS_lstring  var_cas_outputVar ;
        _inLexique._assignFromAttribute_identifierString (var_cas_outputVar) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        GGS_luint  var_cas_outputVarIndex ;
        const GGS_M_variablesMap  _temp_32718 = var_cas_ioVarMap ;
        if (_temp_32718._isBuilt ()) {
          _temp_32718 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_outputVar, var_cas_outputVarIndex COMMA_SOURCE_FILE_AT_LINE (1042)) ;
        }
        var_cas_translationVector._addAssign_operation (var_cas_outputVarIndex) ;
      switch (select_repeat_sara_parser_38 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_38 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__29) COMMA_HERE) ;
  GGS_uint  var_cas_allVariablesCount ;
  var_cas_allVariablesCount = var_cas_translationVector.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1048)) ;
  GGS_uint  var_cas_machineAllVariablesCount ;
  var_cas_machineAllVariablesCount = var_cas_machineVariablesMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (1049)) ;
  if (((var_cas_allVariablesCount)._operator_isNotEqual (var_cas_machineAllVariablesCount)).isBuiltAndTrue ()) {
    GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "The '$"))._operator_concat (var_cas_machineIdentifier.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1051))))._operator_concat (GGS_string (true, "' machine defines ")))._operator_concat (var_cas_machineAllVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1051))))._operator_concat (GGS_string (true, " variables, but this operand defines ")))._operator_concat (var_cas_allVariablesCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1052))))._operator_concat (GGS_string (true, " variables")) COMMA_SOURCE_FILE_AT_LINE (1052)) ;
  }
  var_cas_outDefinition = GGS_C_importMachine::constructor_new (_inLexique, var_cas_indexOfImportedMachine.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1054)), var_cas_translationVector COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'explicit_automaton'           *
//                                                                           *
//---------------------------------------------------------------------------*

void sara_parser::
sara_parser::
pr_explicit_automaton_sara_parser_1061_4_ (sara_scanner & _inLexique,
                                const GGS_semanticContext var_cas_inSemanticContext,
                                GGS_M_variablesMap  &var_cas_variablesMap,
                                GGS_AC_machineDefinition  &var_cas_outDefinition) {
  GGS_M_stateMap  var_cas_statesMap ;
  var_cas_statesMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_L_stateDefinition  var_cas_stateDefinitionList ;
  var_cas_stateDefinitionList = GGS_L_stateDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_auto) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_state) COMMA_HERE) ;
  { bool syntaxRepeat_39 = true ;
    while (syntaxRepeat_39) {
        GGS_lstring  var_cas_stateName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_stateName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        var_cas_statesMap.modifier_insertKey (_inLexique, var_cas_stateName COMMA_SOURCE_FILE_AT_LINE (1075)) ;
      switch (select_repeat_sara_parser_39 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_39 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_L_statesDefinitionList  var_cas_initialStatesDefinitionList ;
  var_cas_initialStatesDefinitionList = GGS_L_statesDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_first) COMMA_HERE) ;
  { bool syntaxRepeat_40 = true ;
    while (syntaxRepeat_40) {
        GGS_lstring  var_cas_initialState ;
        _inLexique._assignFromAttribute_identifierString (var_cas_initialState) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        GGS_luint  var_cas_initialStateIndex ;
        const GGS_M_stateMap  _temp_34238 = var_cas_statesMap ;
        if (_temp_34238._isBuilt ()) {
          _temp_34238 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_initialState, var_cas_initialStateIndex COMMA_SOURCE_FILE_AT_LINE (1087)) ;
        }
        var_cas_initialStatesDefinitionList._addAssign_operation (var_cas_initialStateIndex, GGS_location (_inLexique)) ;
      switch (select_repeat_sara_parser_40 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_40 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
  GGS_L_statesDefinitionList  var_cas_terminalStatesDefinitionList ;
  var_cas_terminalStatesDefinitionList = GGS_L_statesDefinitionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  switch (select_sara_parser_41 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_last) COMMA_HERE) ;
      { bool syntaxRepeat_42 = true ;
        while (syntaxRepeat_42) {
            GGS_lstring  var_cas_terminalState ;
            _inLexique._assignFromAttribute_identifierString (var_cas_terminalState) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
            GGS_luint  var_cas_terminalStateIndex ;
            const GGS_M_stateMap  _temp_34642 = var_cas_statesMap ;
            if (_temp_34642._isBuilt ()) {
              _temp_34642 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_terminalState, var_cas_terminalStateIndex COMMA_SOURCE_FILE_AT_LINE (1102)) ;
            }
            var_cas_terminalStatesDefinitionList._addAssign_operation (var_cas_terminalStateIndex, GGS_location (_inLexique)) ;
          switch (select_repeat_sara_parser_42 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_42 = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_M_stateMap  var_cas_stateDefinitionMap ;
  var_cas_stateDefinitionMap = GGS_M_stateMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_43 = true ;
    while (syntaxRepeat_43) {
        GGS_lstring  var_cas_stateName ;
        _inLexique._assignFromAttribute_identifierString (var_cas_stateName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
        GGS_luint  var_cas_stateIndex ;
        const GGS_M_stateMap  _temp_35029 = var_cas_statesMap ;
        if (_temp_35029._isBuilt ()) {
          _temp_35029 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_stateName, var_cas_stateIndex COMMA_SOURCE_FILE_AT_LINE (1116)) ;
        }
        var_cas_stateDefinitionMap.modifier_defineState (_inLexique, var_cas_stateName COMMA_SOURCE_FILE_AT_LINE (1117)) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3A) COMMA_HERE) ;
        GGS_AC_boolExpression  var_cas_stateExpression ;
        nt_io_bool_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_stateExpression) ;
        GGS_location  var_cas_endOfStateExpression ;
        var_cas_endOfStateExpression = GGS_location (_inLexique) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7B) COMMA_HERE) ;
        GGS_L_transitionDefinition  var_cas_transitionsList ;
        var_cas_transitionsList = GGS_L_transitionDefinition::constructor_emptyList (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat_44 = true ;
          while (syntaxRepeat_44) {
            switch (select_repeat_sara_parser_44 (_inLexique)) {
              case 2 : {
                GGS_AC_boolExpression  var_cas_transitionInputExpression ;
                nt_io_bool_expression_ (_inLexique, var_cas_inSemanticContext, var_cas_variablesMap, var_cas_transitionInputExpression) ;
                GGS_location  var_cas_endOfExpression ;
                var_cas_endOfExpression = GGS_location (_inLexique) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_goto) COMMA_HERE) ;
                GGS_lstring  var_cas_targetStateName ;
                _inLexique._assignFromAttribute_identifierString (var_cas_targetStateName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1_identifier) COMMA_HERE) ;
                GGS_luint  var_cas_targetStateIndex ;
                const GGS_M_stateMap  _temp_35769 = var_cas_statesMap ;
                if (_temp_35769._isBuilt ()) {
                  _temp_35769 (HERE)->method_searchKeyGetIndex (_inLexique, var_cas_targetStateName, var_cas_targetStateIndex COMMA_SOURCE_FILE_AT_LINE (1135)) ;
                }
                var_cas_transitionsList._addAssign_operation (var_cas_transitionInputExpression, var_cas_endOfExpression, var_cas_targetStateIndex) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__3B) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_44 = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7D) COMMA_HERE) ;
        var_cas_stateDefinitionList._addAssign_operation (var_cas_stateIndex, var_cas_stateExpression, var_cas_endOfStateExpression, var_cas_transitionsList) ;
      switch (select_repeat_sara_parser_43 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_43 = false ;
          break ;
      }
    }
  }
  {
    GGS_M_stateMap::cEnumerator enumerator_36144 (var_cas_statesMap, true) ;
    const GGS_M_stateMap::cElement * operand_36144 = NULL ;
    while (((operand_36144 = (GGS_M_stateMap::cElement *) enumerator_36144.nextObject ()))) {
      macroValidPointer (operand_36144) ;
      if (((var_cas_stateDefinitionMap.reader_hasKey (_inLexique, operand_36144->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1146)) COMMA_SOURCE_FILE_AT_LINE (1146)))._operator_not ()).isBuiltAndTrue ()) {
        GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "'"))._operator_concat (operand_36144->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1147))))._operator_concat (GGS_string (true, "' state is not described")) COMMA_SOURCE_FILE_AT_LINE (1147)) ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (sara_scanner::sara_scanner_1__7D) COMMA_HERE) ;
  var_cas_outDefinition = GGS_C_explicitAutomatonDefinition::constructor_new (_inLexique, var_cas_statesMap, var_cas_initialStatesDefinitionList, var_cas_terminalStatesDefinitionList, var_cas_stateDefinitionList, GGS_location (_inLexique) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

