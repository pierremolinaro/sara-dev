//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'include_C_orComposition.h'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 24th, 2010, at 10h11'22"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_C_orComposition'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_C_orComposition : public cPtr_AC_machineDefinition {
  private : typedef cPtr_AC_machineDefinition inherited ;
//--- START OF USER ZONE 2

  public : virtual void computeFromExpression (C_Compiler & inLexique,
                                               const TC_Array <C_saraMachine> & inSaraSystemArray,
                                               const PMUInt16 inVariablesCount,
                                               C_BDD & outInitialStatesBDD,
                                               C_BDD & outTerminalStatesBDD,
                                               C_BDD & outAccessibilityRelationBDD) const ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_C_orComposition (const GGS_AC_machineDefinition & ,
                                const GGS_AC_machineDefinition & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_AC_machineDefinition  mLeftOperand ;
  public : GGS_AC_machineDefinition  mRightOperand ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

