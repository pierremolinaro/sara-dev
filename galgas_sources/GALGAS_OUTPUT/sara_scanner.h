//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'sara_scanner.h'                            *
//               Generated by version 0.14.1 (LL(1) grammar)                 *
//                     october 14th, 2005, at 11h31'43"                      *
//                                                                           *
// This program is free software; you can redistribute it and/or modify it   *
// under the terms of the GNU General Public License as published by the     *
// Free Software Foundation.                                                 *
//                                                                           *
// This program is distributed in the hope it will be useful, but WITHOUT    *
// ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or     *
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
// more details.                                                             *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef sara_scanner_0_DEFINED
#define sara_scanner_0_DEFINED
#include "galgas/C_Lexique.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Lexical scanner class                            *
//                                                                           *
//---------------------------------------------------------------------------*

class sara_scanner : public C_Lexique {
// Terminal symbols enumeration
  public : enum {sara_scanner_1_,
  sara_scanner_1_identifier,
  sara_scanner_1_auto,
  sara_scanner_1_state,
  sara_scanner_1_first,
  sara_scanner_1_last,
  sara_scanner_1_goto,
  sara_scanner_1_timer,
  sara_scanner_1_true,
  sara_scanner_1_false,
  sara_scanner_1_check,
  sara_scanner_1_checkbool,
  sara_scanner_1_nofirst,
  sara_scanner_1_nolast,
  sara_scanner_1_modalcompadd,
  sara_scanner_1_exclude,
  sara_scanner_1_modalcompsub,
  sara_scanner_1_include,
  sara_scanner_1_to,
  sara_scanner_1_scenario,
  sara_scanner_1_trans,
  sara_scanner_1_ite_5Fcache,
  sara_scanner_1_and_5Fcache,
  sara_scanner_1_map,
  sara_scanner_1_bdd,
  sara_scanner_1_bool,
  sara_scanner_1_use_5Fand,
  sara_scanner_1_use_5Fite,
  sara_scanner_1_use_5Fand_5Fite,
  sara_scanner_1__2C,
  sara_scanner_1__3B,
  sara_scanner_1__3A,
  sara_scanner_1__7B,
  sara_scanner_1__7D,
  sara_scanner_1__2D_3E,
  sara_scanner_1__26,
  sara_scanner_1__7E,
  sara_scanner_1__3F,
  sara_scanner_1__7C,
  sara_scanner_1__7C_7C,
  sara_scanner_1__2B,
  sara_scanner_1__28,
  sara_scanner_1__29,
  sara_scanner_1__3A_3D,
  sara_scanner_1__5E,
  sara_scanner_1__3D,
  sara_scanner_1__2A,
  sara_scanner_1__40,
  sara_scanner_1__2A_2A,
  sara_scanner_1_literal_5Fstring,
  sara_scanner_1_machineIdf,
  sara_scanner_1_literal_5Finteger} ;

//--- Key words table 'delimitorsList'
  public : static const sint16 sara_scanner_table_size_delimitorsList ;
  private : static const C_lexique_table_entry sara_scanner_table_for_delimitorsList [20] ;
  public : static sint16 search_into_delimitorsList (const C_String & inSearchedString) ;

//--- Key words table 'keyWordList'
  public : static const sint16 sara_scanner_table_size_keyWordList ;
  private : static const C_lexique_table_entry sara_scanner_table_for_keyWordList [27] ;
  public : static sint16 search_into_keyWordList (const C_String & inSearchedString) ;

  protected : virtual void parseLexicalToken (const bool inPropagateLexicaleErrorException) ;
  protected : virtual void appendTerminalMessageToSyntaxErrorMessage (const sint16 numeroTerminal,
                                                              C_String & messageErreur) ;

//--- Constructor
  public : sara_scanner (AC_galgas_io * inGalgasInputOutput) ;
  public : C_String identifierString ; // user defined attribute
  public : uint32 ulongValue ; // user defined attribute
  public : virtual sint16 terminalVocabularyCount (void) const { return 51 ; }

  public : static sint32 getStylesCount (void) ;
  public : static const char * getStyleName (const sint32 inIndex) ;
//--- Virtual method called getting terminal style index
  public : virtual uint8 terminalStyleIndex (const sint32 inTerminal) ;
} ;

//---------------------------------------------------------------------------*

#endif
