//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'sara_scanner.h'                            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       july 10th, 2009, at 17h0'30"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1


#ifndef sara_scanner_0_DEFINED
#define sara_scanner_0_DEFINED

//---------------------------------------------------------------------------*

#include "galgas/GGS_lstring.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_lbool.h"
#include "galgas/C_Lexique.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    E X T E R N    R O U T I N E S                         *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*
//                                                                           *
//                    E X T E R N    F U N C T I O N S                       *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*
//                                                                           *
//                       T O K E N    C L A S S                              *
//                                                                           *
//---------------------------------------------------------------------------*

class cTokenFor_sara_scanner : public cToken {
  public : C_String mLexicalAttribute_identifierString ;
  public : uint32 mLexicalAttribute_ulongValue ;

  public : cTokenFor_sara_scanner (void) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     S C A N N E R    C L A S S                            *
//                                                                           *
//---------------------------------------------------------------------------*

class sara_scanner : public C_Lexique {
//--- Constructors
  public : sara_scanner (C_Compiler * inCallerCompiler,
                       const C_String & inDependencyFileExtension,
                       const C_String & inDependencyFilePath,
                       C_galgas_io * inParametersPtr,
                       const C_String & inSourceFileName
                       COMMA_LOCATION_ARGS) ;

  public : sara_scanner (C_Compiler * inCallerCompiler,
                       C_galgas_io * inParametersPtr,
                       const C_String & inSourceString,
                       const C_String & inStringForError
                       COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~sara_scanner (void) {}
  #endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


//--- Terminal symbols enumeration
  public : enum {sara_scanner_1_,
  sara_scanner_1_identifier,
  sara_scanner_1_literal_5F_string,
  sara_scanner_1_machineIdf,
  sara_scanner_1_literal_5F_integer,
  sara_scanner_1_auto,
  sara_scanner_1_state,
  sara_scanner_1_first,
  sara_scanner_1_last,
  sara_scanner_1_goto,
  sara_scanner_1_timer,
  sara_scanner_1_true,
  sara_scanner_1_false,
  sara_scanner_1_nofirst,
  sara_scanner_1_nolast,
  sara_scanner_1_modalcompadd,
  sara_scanner_1_exclude,
  sara_scanner_1_modalcompsub,
  sara_scanner_1_include,
  sara_scanner_1_to,
  sara_scanner_1_scenario,
  sara_scanner_1_trans,
  sara_scanner_1_ite_5F_cache,
  sara_scanner_1_and_5F_cache,
  sara_scanner_1_map,
  sara_scanner_1_bdd,
  sara_scanner_1_bool,
  sara_scanner_1_use_5F_and,
  sara_scanner_1_use_5F_ite,
  sara_scanner_1_use_5F_and_5F_ite,
  sara_scanner_1_check,
  sara_scanner_1_checkbool,
  sara_scanner_1_checkidentical,
  sara_scanner_1__2C_,
  sara_scanner_1__3B_,
  sara_scanner_1__3A_,
  sara_scanner_1__7B_,
  sara_scanner_1__7D_,
  sara_scanner_1__2D__3E_,
  sara_scanner_1__26_,
  sara_scanner_1__7E_,
  sara_scanner_1__3F_,
  sara_scanner_1__21_,
  sara_scanner_1__7C_,
  sara_scanner_1__7C__7C_,
  sara_scanner_1__2B_,
  sara_scanner_1__28_,
  sara_scanner_1__29_,
  sara_scanner_1__3A__3D_,
  sara_scanner_1__5E_,
  sara_scanner_1__3D_,
  sara_scanner_1__2A_,
  sara_scanner_1__40_,
  sara_scanner_1__2A__2A_} ;

//--- Key words table 'keyWordList'
  public : static sint16 search_into_keyWordList (const C_String & inSearchedString) ;

//--- Key words table 'delimitorsList'
  public : static sint16 search_into_delimitorsList (const C_String & inSearchedString) ;
  

//--- Assign from attribute
  public : void assignFromAttribute_identifierString (GGS_lstring & outValue) const ;
  public : void assignFromAttribute_ulongValue (GGS_luint & outValue) const ;


//--- Attribute access
  public : C_String attributeValue_identifierString (void) const ;
  public : uint32 attributeValue_ulongValue (void) const ;


//--- Parse lexical token
  protected : virtual bool parseLexicalToken (void) ;

//--- Append terminal message
  protected : virtual void appendTerminalMessageToSyntaxErrorMessage (const sint16 numeroTerminal,
                                                              C_String & messageErreur) ;

//--- Get terminal count
  public : virtual sint16 terminalVocabularyCount (void) const { return 53 ; }

//--- Get Token String
  public : virtual C_String getCurrentTokenString (const cToken * inTokenPtr) const ;

//--- Enter Token
  protected : void enterToken (const cTokenFor_sara_scanner & inToken) ;
} ;

//---------------------------------------------------------------------------*

#endif
