//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'separateHeaderFor_C_5F_trans.h'                    *
//             Generated by version version GALGAS_BETA_VERSION              *
//                      july 16th, 2011, at 15h22'18"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                     Pointer class for @C_trans class                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_C_5F_trans : public cPtr_AC_5F_machineDefinition {
//--- START OF USER ZONE 2

  public : virtual void computeFromExpression (C_Compiler * inCompiler,
                                               const TC_Array <C_saraMachine> & inSaraSystemArray,
                                               const PMUInt16 inVariablesCount,
                                               C_BDD & outInitialStatesBDD,
                                               C_BDD & outTerminalStatesBDD,
                                               C_BDD & outAccessibilityRelationBDD) const ;

//--- END OF USER ZONE 2

//--- Attributes
  public : GALGAS_AC_5F_boolExpression mAttribute_mSourceStateExpression ;
  public : GALGAS_AC_5F_boolExpression mAttribute_mTargetStateExpression ;

//--- Constructor
  public : cPtr_C_5F_trans (const GALGAS_AC_5F_boolExpression & in_mSourceStateExpression,
                            const GALGAS_AC_5F_boolExpression & in_mTargetStateExpression
                            COMMA_LOCATION_ARGS) ;

//--- Description
  public : virtual void description (C_String & ioString,
                                     const PMSInt32 inIndentation) const ;

  public : virtual typeComparisonResult dynamicObjectCompare (const acPtr_class * inOperandPtr) const ;

  public : virtual const C_galgas_type_descriptor * classDescriptor (void) const ;

} ;

