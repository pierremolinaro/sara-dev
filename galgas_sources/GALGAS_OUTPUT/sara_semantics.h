//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'sara_semantics.h'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 14th, 2010, at 22h7'50"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef sara_semantics_DEFINED
#define sara_semantics_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_M_variablesMap ;
class GGS_M_stateMap ;
class GGS_L_translationVector ;
class GGS_AC_boolExpression ;
class cPtr_AC_boolExpression ;
class GGS_C_importBoolMachine ;
class cPtr_C_importBoolMachine ;
class GGS_C_andExpression ;
class cPtr_C_andExpression ;
class GGS_C_orExpression ;
class cPtr_C_orExpression ;
class GGS_C_xorExpression ;
class cPtr_C_xorExpression ;
class GGS_C_impliesExpression ;
class cPtr_C_impliesExpression ;
class GGS_C_equalExpression ;
class cPtr_C_equalExpression ;
class GGS_C_notExpression ;
class cPtr_C_notExpression ;
class GGS_C_VariableExpression ;
class cPtr_C_VariableExpression ;
class GGS_C_trueExpression ;
class cPtr_C_trueExpression ;
class GGS_C_falseExpression ;
class cPtr_C_falseExpression ;
class GGS_L_transitionDefinition ;
class GGS_L_stateDefinition ;
class GGS_L_statesDefinitionList ;
class GGS_AC_machineDefinition ;
class cPtr_AC_machineDefinition ;
class GGS_M_modesMap ;
class GGS_ListForModes ;
class GGS_C_substractiveModalCompositionComponent ;
class cPtr_C_substractiveModalCompositionComponent ;
class GGS_C_additiveModalCompositionComponent ;
class cPtr_C_additiveModalCompositionComponent ;
class GGS_C_trans ;
class cPtr_C_trans ;
class GGS_C_importMachine ;
class cPtr_C_importMachine ;
class GGS_C_explicitAutomatonDefinition ;
class cPtr_C_explicitAutomatonDefinition ;
class GGS_C_boolToSeqExpression ;
class cPtr_C_boolToSeqExpression ;
class GGS_C_existsDefinition ;
class cPtr_C_existsDefinition ;
class GGS_C_forallDefinition ;
class cPtr_C_forallDefinition ;
class GGS_C_parallelComposition ;
class cPtr_C_parallelComposition ;
class GGS_C_orComposition ;
class cPtr_C_orComposition ;
class GGS_C_strongModalComposition ;
class cPtr_C_strongModalComposition ;
class GGS_C_weakModalComposition ;
class cPtr_C_weakModalComposition ;
class GGS_C_fullSaturationOperation ;
class cPtr_C_fullSaturationOperation ;
class GGS_C_complementationOperation ;
class cPtr_C_complementationOperation ;
class GGS_C_suppressTerminalStatesOperation ;
class cPtr_C_suppressTerminalStatesOperation ;
class GGS_C_suppressInitialStatesOperation ;
class cPtr_C_suppressInitialStatesOperation ;
class GGS_AC_job ;
class cPtr_AC_job ;
class GGS_C_machineDisplayStates ;
class cPtr_C_machineDisplayStates ;
class GGS_C_machineDisplayInitialStates ;
class cPtr_C_machineDisplayInitialStates ;
class GGS_C_machineDisplayTerminalStates ;
class cPtr_C_machineDisplayTerminalStates ;
class GGS_C_machineDisplayTransitions ;
class cPtr_C_machineDisplayTransitions ;
class GGS_C_machineCheck ;
class cPtr_C_machineCheck ;
class GGS_C_machineCheckIdentical ;
class cPtr_C_machineCheckIdentical ;
class GGS_C_machineComponent ;
class cPtr_C_machineComponent ;
class GGS_C_machineDefinedByAdditiveModalComp ;
class cPtr_C_machineDefinedByAdditiveModalComp ;
class GGS_C_machineDefinedBySubstractiveModalComp ;
class cPtr_C_machineDefinedBySubstractiveModalComp ;
class GGS_L_inputConfigurationForScenario ;
class GGS_L_inputScenario ;
class GGS_L_scenarioList ;
class GGS_C_scenarioComponent ;
class cPtr_C_scenarioComponent ;
class GGS_typeUse_AND ;
class cPtr_typeUse_AND ;
class GGS_typeUse_ITE ;
class cPtr_typeUse_ITE ;
class GGS_typeUse_AND_ITE ;
class cPtr_typeUse_AND_ITE ;
class GGS_typeResize_AND_cache ;
class cPtr_typeResize_AND_cache ;
class GGS_typeResize_ITE_cache ;
class cPtr_typeResize_ITE_cache ;
class GGS_typeResizeMap ;
class cPtr_typeResizeMap ;
class GGS_typeDisplayBDDstats ;
class cPtr_typeDisplayBDDstats ;
class GGS_L_jobList ;
class GGS_M_machinesMap ;
class GGS_semanticContext ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@M_variablesMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_variablesMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_variablesMap ;

//---------------------------------------------------------------------------*

class GGS_M_variablesMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_variablesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_variablesMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_variablesMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_variablesMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_variablesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_variablesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_variablesMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_variablesMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_variablesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_variablesMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_variablesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_variablesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@M_stateMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_stateMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_stateMap ;

//---------------------------------------------------------------------------*

class GGS_M_stateMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_stateMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_stateMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_stateMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_stateMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_stateMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_stateMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_stateMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

  public : static const utf32 kInsertMessage_defineState [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

//--- 'defineState' Insert Modifier
  public : void modifier_defineState (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_stateMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_stateMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_stateMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_stateMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_stateMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@L_translationVector'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_translationVector ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_translationVector ;

//---------------------------------------------------------------------------*

class GGS_L_translationVector : public AC_GGS_list {
  public : typedef elementOf_GGS_L_translationVector cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_translationVector constructor_emptyList (void) ;
  public : static GGS_L_translationVector constructor_listWithValue (const GGS_uint & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_translationVector & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_translationVector
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_translationVector
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_translationVector * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_uint & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_uint & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_uint & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_uint & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_translationVector inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_translationVector operator_concat (const GGS_L_translationVector & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uint 
  reader_mTargetSlotAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTargetSlotAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_translationVector castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_translationVector & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mTargetSlot (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_AC_boolExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_AC_boolExpression ;

//---------------------------------------------------------------------------*

class GGS_AC_boolExpression : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_AC_boolExpression (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_boolExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_boolExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_AC_boolExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_boolExpression * getPtr (void) const {
    return (cPtr_AC_boolExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_boolExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_boolExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_boolExpression *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_AC_boolExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__AC_boolExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_importBoolMachine'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_importBoolMachine ;

//---------------------------------------------------------------------------*

class GGS_C_importBoolMachine : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_importBoolMachine (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_importBoolMachine (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_importBoolMachine (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_importBoolMachine
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_importBoolMachine constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_location & argument_1,
                                const GGS_L_translationVector & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_importBoolMachine * getPtr (void) const {
    return (cPtr_C_importBoolMachine *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mIndexOfImportedMachine (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mErrorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_translationVector  reader_mTranslationVector (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_importBoolMachine * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_importBoolMachine * operator () (LOCATION_ARGS) const {
      return (cPtr_C_importBoolMachine *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_importBoolMachine castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_importBoolMachine ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_C_andExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_andExpression ;

//---------------------------------------------------------------------------*

class GGS_C_andExpression : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_andExpression (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_andExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_andExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_andExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_andExpression constructor_new (C_Compiler & inLexique,
                                const GGS_AC_boolExpression & argument_0,
                                const GGS_AC_boolExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_andExpression * getPtr (void) const {
    return (cPtr_C_andExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_boolExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_boolExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_andExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_andExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_andExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_andExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_andExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_C_orExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_orExpression ;

//---------------------------------------------------------------------------*

class GGS_C_orExpression : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_orExpression (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_orExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_orExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_orExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_orExpression constructor_new (C_Compiler & inLexique,
                                const GGS_AC_boolExpression & argument_0,
                                const GGS_AC_boolExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_orExpression * getPtr (void) const {
    return (cPtr_C_orExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_boolExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_boolExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_orExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_orExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_orExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_orExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_orExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_C_xorExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_xorExpression ;

//---------------------------------------------------------------------------*

class GGS_C_xorExpression : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_xorExpression (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_xorExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_xorExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_xorExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_xorExpression constructor_new (C_Compiler & inLexique,
                                const GGS_AC_boolExpression & argument_0,
                                const GGS_AC_boolExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_xorExpression * getPtr (void) const {
    return (cPtr_C_xorExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_boolExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_boolExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_xorExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_xorExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_xorExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_xorExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_xorExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_impliesExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_impliesExpression ;

//---------------------------------------------------------------------------*

class GGS_C_impliesExpression : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_impliesExpression (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_impliesExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_impliesExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_impliesExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_impliesExpression constructor_new (C_Compiler & inLexique,
                                const GGS_AC_boolExpression & argument_0,
                                const GGS_AC_boolExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_impliesExpression * getPtr (void) const {
    return (cPtr_C_impliesExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_boolExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_boolExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_impliesExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_impliesExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_impliesExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_impliesExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_impliesExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_C_equalExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_equalExpression ;

//---------------------------------------------------------------------------*

class GGS_C_equalExpression : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_equalExpression (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_equalExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_equalExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_equalExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_equalExpression constructor_new (C_Compiler & inLexique,
                                const GGS_AC_boolExpression & argument_0,
                                const GGS_AC_boolExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_equalExpression * getPtr (void) const {
    return (cPtr_C_equalExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_boolExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_boolExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_equalExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_equalExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_equalExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_equalExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_equalExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_C_notExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_notExpression ;

//---------------------------------------------------------------------------*

class GGS_C_notExpression : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_notExpression (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_notExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_notExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_notExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_notExpression constructor_new (C_Compiler & inLexique,
                                const GGS_AC_boolExpression & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_notExpression * getPtr (void) const {
    return (cPtr_C_notExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_boolExpression  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_notExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_notExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_notExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_notExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_notExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_VariableExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_VariableExpression ;

//---------------------------------------------------------------------------*

class GGS_C_VariableExpression : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_VariableExpression (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_VariableExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_VariableExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_VariableExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_VariableExpression constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_VariableExpression * getPtr (void) const {
    return (cPtr_C_VariableExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mInputVarIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_VariableExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_VariableExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_VariableExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_VariableExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_VariableExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_C_trueExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_trueExpression ;

//---------------------------------------------------------------------------*

class GGS_C_trueExpression : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_trueExpression (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_trueExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_trueExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_trueExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_trueExpression constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_trueExpression * getPtr (void) const {
    return (cPtr_C_trueExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_trueExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_trueExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_trueExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_trueExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_trueExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_C_falseExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_falseExpression ;

//---------------------------------------------------------------------------*

class GGS_C_falseExpression : public GGS_AC_boolExpression {
//--- Default constructor
  public : inline GGS_C_falseExpression (void) :
  GGS_AC_boolExpression () {}

//--- Pointer assignment constructor
  public : GGS_C_falseExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_falseExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_falseExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_falseExpression constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_falseExpression * getPtr (void) const {
    return (cPtr_C_falseExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_falseExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_falseExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_falseExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_falseExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_falseExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@L_transitionDefinition'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_transitionDefinition ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_transitionDefinition ;

//---------------------------------------------------------------------------*

class GGS_L_transitionDefinition : public AC_GGS_list {
  public : typedef elementOf_GGS_L_transitionDefinition cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_transitionDefinition constructor_emptyList (void) ;
  public : static GGS_L_transitionDefinition constructor_listWithValue (const GGS_AC_boolExpression & argument_0,
                                const GGS_location & argument_1,
                                const GGS_uint & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_transitionDefinition & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_transitionDefinition
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_transitionDefinition
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_transitionDefinition * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_AC_boolExpression & _out_0,
                              GGS_location & _out_1,
                              GGS_uint & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_AC_boolExpression & _out_0,
                             GGS_location & _out_1,
                             GGS_uint & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_AC_boolExpression & _out_0,
                                GGS_location & _out_1,
                                GGS_uint & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_AC_boolExpression & _out_0,
                                 GGS_location & _out_1,
                                 GGS_uint & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_transitionDefinition inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_AC_boolExpression & argument_0,
                                const GGS_location & argument_1,
                                const GGS_uint & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_transitionDefinition operator_concat (const GGS_L_transitionDefinition & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_AC_boolExpression & argument_0,
                                const GGS_location & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_AC_boolExpression & argument_0,
                                const GGS_location & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_AC_boolExpression & argument_0,
                                const GGS_location & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_boolExpression 
  reader_mActionExpressionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfExpressionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mTargetStateIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMActionExpressionAtIndex (C_Compiler & inLexique,
                              const GGS_AC_boolExpression  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfExpressionAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTargetStateIndexAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_transitionDefinition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_transitionDefinition & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_boolExpression   & _mActionExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mEndOfExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mTargetStateIndex (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@L_stateDefinition'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_stateDefinition ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_stateDefinition ;

//---------------------------------------------------------------------------*

class GGS_L_stateDefinition : public AC_GGS_list {
  public : typedef elementOf_GGS_L_stateDefinition cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_stateDefinition constructor_emptyList (void) ;
  public : static GGS_L_stateDefinition constructor_listWithValue (const GGS_uint & argument_0,
                                const GGS_AC_boolExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_L_transitionDefinition & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_stateDefinition & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_stateDefinition
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_stateDefinition
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_stateDefinition * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_uint & _out_0,
                              GGS_AC_boolExpression & _out_1,
                              GGS_location & _out_2,
                              GGS_L_transitionDefinition & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_uint & _out_0,
                             GGS_AC_boolExpression & _out_1,
                             GGS_location & _out_2,
                             GGS_L_transitionDefinition & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_uint & _out_0,
                                GGS_AC_boolExpression & _out_1,
                                GGS_location & _out_2,
                                GGS_L_transitionDefinition & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_AC_boolExpression & _out_1,
                                 GGS_location & _out_2,
                                 GGS_L_transitionDefinition & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_stateDefinition inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_AC_boolExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_L_transitionDefinition & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_stateDefinition operator_concat (const GGS_L_stateDefinition & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_AC_boolExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_L_transitionDefinition & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_AC_boolExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_L_transitionDefinition & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_uint & argument_0,
                                const GGS_AC_boolExpression & argument_1,
                                const GGS_location & argument_2,
                                const GGS_L_transitionDefinition & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uint 
  reader_mStateIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_boolExpression 
  reader_mStateExpressionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfStateExpressionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_L_transitionDefinition 
  reader_mTransitionsListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMStateIndexAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMStateExpressionAtIndex (C_Compiler & inLexique,
                              const GGS_AC_boolExpression  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfStateExpressionAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTransitionsListAtIndex (C_Compiler & inLexique,
                              const GGS_L_transitionDefinition  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_stateDefinition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_stateDefinition & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_AC_boolExpression   & _mStateExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mEndOfStateExpression (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_transitionDefinition   & _mTransitionsList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@L_statesDefinitionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_statesDefinitionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_statesDefinitionList ;

//---------------------------------------------------------------------------*

class GGS_L_statesDefinitionList : public AC_GGS_list {
  public : typedef elementOf_GGS_L_statesDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_statesDefinitionList constructor_emptyList (void) ;
  public : static GGS_L_statesDefinitionList constructor_listWithValue (const GGS_uint & argument_0,
                                const GGS_location & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_statesDefinitionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_statesDefinitionList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_statesDefinitionList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_statesDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_uint & _out_0,
                              GGS_location & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_uint & _out_0,
                             GGS_location & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_uint & _out_0,
                                GGS_location & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_location & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_statesDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_location & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_statesDefinitionList operator_concat (const GGS_L_statesDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_uint & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uint 
  reader_mStateIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mStateLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMStateIndexAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMStateLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_statesDefinitionList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_statesDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mStateIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mStateLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_AC_machineDefinition'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_AC_machineDefinition ;

//---------------------------------------------------------------------------*

class GGS_AC_machineDefinition : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_AC_machineDefinition (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_machineDefinition (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_machineDefinition (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_AC_machineDefinition
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_machineDefinition * getPtr (void) const {
    return (cPtr_AC_machineDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_machineDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_machineDefinition * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_machineDefinition *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_AC_machineDefinition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__AC_machineDefinition ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@M_modesMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_modesMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_modesMap ;

//---------------------------------------------------------------------------*

class GGS_M_modesMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_modesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_modesMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_modesMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_modesMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_modesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_modesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_modesMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0,
                                const GGS_AC_machineDefinition &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0,
                                GGS_AC_machineDefinition   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   const GGS_AC_machineDefinition & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_AC_machineDefinition & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_modesMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_modesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_modesMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_modesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_modesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_AC_machineDefinition   & _mModeDefinition (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@ListForModes'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ListForModes ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ListForModes ;

//---------------------------------------------------------------------------*

class GGS_ListForModes : public AC_GGS_list {
  public : typedef elementOf_GGS_ListForModes cElement ;

//--- Constructor 'emptyList'
  public : static GGS_ListForModes constructor_emptyList (void) ;
  public : static GGS_ListForModes constructor_listWithValue (const GGS_uint & argument_0,
                                const GGS_uint & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_ListForModes & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_ListForModes
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_ListForModes
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_ListForModes * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_uint & _out_0,
                              GGS_uint & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_uint & _out_0,
                             GGS_uint & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_uint & _out_0,
                                GGS_uint & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_uint & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_ListForModes inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_uint & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_ListForModes operator_concat (const GGS_ListForModes & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_uint & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uint 
  reader_mSourceModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mTargetModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSourceModeAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTargetModeAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ListForModes castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_ListForModes & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mSourceMode (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mTargetMode (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_C_substractiveModalCompositionComponent'         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_substractiveModalCompositionComponent ;

//---------------------------------------------------------------------------*

class GGS_C_substractiveModalCompositionComponent : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_substractiveModalCompositionComponent (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_substractiveModalCompositionComponent (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_substractiveModalCompositionComponent (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_substractiveModalCompositionComponent
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_substractiveModalCompositionComponent constructor_new (C_Compiler & inLexique,
                                const GGS_M_modesMap & argument_0,
                                const GGS_ListForModes & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_substractiveModalCompositionComponent * getPtr (void) const {
    return (cPtr_C_substractiveModalCompositionComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_M_modesMap  reader_mModeMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_ListForModes  reader_mExclusionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_substractiveModalCompositionComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_substractiveModalCompositionComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_C_substractiveModalCompositionComponent *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_substractiveModalCompositionComponent castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_substractiveModalCompositionComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_C_additiveModalCompositionComponent'           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_additiveModalCompositionComponent ;

//---------------------------------------------------------------------------*

class GGS_C_additiveModalCompositionComponent : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_additiveModalCompositionComponent (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_additiveModalCompositionComponent (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_additiveModalCompositionComponent (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_additiveModalCompositionComponent
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_additiveModalCompositionComponent constructor_new (C_Compiler & inLexique,
                                const GGS_M_modesMap & argument_0,
                                const GGS_ListForModes & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_additiveModalCompositionComponent * getPtr (void) const {
    return (cPtr_C_additiveModalCompositionComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_M_modesMap  reader_mModeMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_ListForModes  reader_mInclusionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_additiveModalCompositionComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_additiveModalCompositionComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_C_additiveModalCompositionComponent *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_additiveModalCompositionComponent castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_additiveModalCompositionComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        GALGAS class 'GGS_C_trans'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_trans ;

//---------------------------------------------------------------------------*

class GGS_C_trans : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_trans (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_trans (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_trans (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_trans
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_trans constructor_new (C_Compiler & inLexique,
                                const GGS_AC_boolExpression & argument_0,
                                const GGS_AC_boolExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_trans * getPtr (void) const {
    return (cPtr_C_trans *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_boolExpression  reader_mSourceStateExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_boolExpression  reader_mTargetStateExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_trans * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_trans * operator () (LOCATION_ARGS) const {
      return (cPtr_C_trans *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_trans castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_trans ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_C_importMachine'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_importMachine ;

//---------------------------------------------------------------------------*

class GGS_C_importMachine : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_importMachine (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_importMachine (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_importMachine (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_importMachine
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_importMachine constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_L_translationVector & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_importMachine * getPtr (void) const {
    return (cPtr_C_importMachine *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mIndexOfImportedMachine (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_translationVector  reader_mTranslationVector (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_importMachine * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_importMachine * operator () (LOCATION_ARGS) const {
      return (cPtr_C_importMachine *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_importMachine castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_importMachine ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_C_explicitAutomatonDefinition'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_explicitAutomatonDefinition ;

//---------------------------------------------------------------------------*

class GGS_C_explicitAutomatonDefinition : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_explicitAutomatonDefinition (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_explicitAutomatonDefinition (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_explicitAutomatonDefinition (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_explicitAutomatonDefinition
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_explicitAutomatonDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_M_stateMap & argument_0,
                                const GGS_L_statesDefinitionList & argument_1,
                                const GGS_L_statesDefinitionList & argument_2,
                                const GGS_L_stateDefinition & argument_3,
                                const GGS_location & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_explicitAutomatonDefinition * getPtr (void) const {
    return (cPtr_C_explicitAutomatonDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_M_stateMap  reader_mStatesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_statesDefinitionList  reader_mInitialStatesDefinitionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_statesDefinitionList  reader_mTerminalStatesDefinitionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_stateDefinition  reader_mStateDefinitionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mEndOfDefinition (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_explicitAutomatonDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_explicitAutomatonDefinition * operator () (LOCATION_ARGS) const {
      return (cPtr_C_explicitAutomatonDefinition *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_explicitAutomatonDefinition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_explicitAutomatonDefinition ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_boolToSeqExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_boolToSeqExpression ;

//---------------------------------------------------------------------------*

class GGS_C_boolToSeqExpression : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_boolToSeqExpression (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_boolToSeqExpression (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_boolToSeqExpression (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_boolToSeqExpression
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_boolToSeqExpression constructor_new (C_Compiler & inLexique,
                                const GGS_AC_boolExpression & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_boolToSeqExpression * getPtr (void) const {
    return (cPtr_C_boolToSeqExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_boolExpression  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_boolToSeqExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_boolToSeqExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_C_boolToSeqExpression *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_boolToSeqExpression castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_boolToSeqExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_existsDefinition'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_existsDefinition ;

//---------------------------------------------------------------------------*

class GGS_C_existsDefinition : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_existsDefinition (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_existsDefinition (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_existsDefinition (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_existsDefinition
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_existsDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_AC_machineDefinition & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_existsDefinition * getPtr (void) const {
    return (cPtr_C_existsDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mPreviousVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mTotalVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_machineDefinition  reader_mOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_existsDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_existsDefinition * operator () (LOCATION_ARGS) const {
      return (cPtr_C_existsDefinition *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_existsDefinition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_existsDefinition ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_forallDefinition'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_forallDefinition ;

//---------------------------------------------------------------------------*

class GGS_C_forallDefinition : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_forallDefinition (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_forallDefinition (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_forallDefinition (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_forallDefinition
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_forallDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_AC_machineDefinition & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_forallDefinition * getPtr (void) const {
    return (cPtr_C_forallDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mPreviousVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mTotalVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_machineDefinition  reader_mOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_forallDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_forallDefinition * operator () (LOCATION_ARGS) const {
      return (cPtr_C_forallDefinition *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_forallDefinition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_forallDefinition ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_parallelComposition'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_parallelComposition ;

//---------------------------------------------------------------------------*

class GGS_C_parallelComposition : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_parallelComposition (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_parallelComposition (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_parallelComposition (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_parallelComposition
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_parallelComposition constructor_new (C_Compiler & inLexique,
                                const GGS_AC_machineDefinition & argument_0,
                                const GGS_AC_machineDefinition & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_parallelComposition * getPtr (void) const {
    return (cPtr_C_parallelComposition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_machineDefinition  reader_mLeftOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_machineDefinition  reader_mRightOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_parallelComposition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_parallelComposition * operator () (LOCATION_ARGS) const {
      return (cPtr_C_parallelComposition *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_parallelComposition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_parallelComposition ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_C_orComposition'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_orComposition ;

//---------------------------------------------------------------------------*

class GGS_C_orComposition : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_orComposition (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_orComposition (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_orComposition (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_orComposition
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_orComposition constructor_new (C_Compiler & inLexique,
                                const GGS_AC_machineDefinition & argument_0,
                                const GGS_AC_machineDefinition & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_orComposition * getPtr (void) const {
    return (cPtr_C_orComposition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_machineDefinition  reader_mLeftOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_machineDefinition  reader_mRightOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_orComposition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_orComposition * operator () (LOCATION_ARGS) const {
      return (cPtr_C_orComposition *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_orComposition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_orComposition ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_C_strongModalComposition'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_strongModalComposition ;

//---------------------------------------------------------------------------*

class GGS_C_strongModalComposition : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_strongModalComposition (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_strongModalComposition (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_strongModalComposition (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_strongModalComposition
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_strongModalComposition constructor_new (C_Compiler & inLexique,
                                const GGS_AC_machineDefinition & argument_0,
                                const GGS_location & argument_1,
                                const GGS_AC_machineDefinition & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_strongModalComposition * getPtr (void) const {
    return (cPtr_C_strongModalComposition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_machineDefinition  reader_mLeftOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mErrorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_machineDefinition  reader_mRightOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_strongModalComposition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_strongModalComposition * operator () (LOCATION_ARGS) const {
      return (cPtr_C_strongModalComposition *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_strongModalComposition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_strongModalComposition ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_C_weakModalComposition'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_weakModalComposition ;

//---------------------------------------------------------------------------*

class GGS_C_weakModalComposition : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_weakModalComposition (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_weakModalComposition (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_weakModalComposition (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_weakModalComposition
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_weakModalComposition constructor_new (C_Compiler & inLexique,
                                const GGS_AC_machineDefinition & argument_0,
                                const GGS_location & argument_1,
                                const GGS_AC_machineDefinition & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_weakModalComposition * getPtr (void) const {
    return (cPtr_C_weakModalComposition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_machineDefinition  reader_mLeftOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mErrorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_machineDefinition  reader_mRightOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_weakModalComposition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_weakModalComposition * operator () (LOCATION_ARGS) const {
      return (cPtr_C_weakModalComposition *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_weakModalComposition castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_weakModalComposition ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_C_fullSaturationOperation'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_fullSaturationOperation ;

//---------------------------------------------------------------------------*

class GGS_C_fullSaturationOperation : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_fullSaturationOperation (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_fullSaturationOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_fullSaturationOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_fullSaturationOperation
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_fullSaturationOperation constructor_new (C_Compiler & inLexique,
                                const GGS_AC_machineDefinition & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_fullSaturationOperation * getPtr (void) const {
    return (cPtr_C_fullSaturationOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_machineDefinition  reader_mOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_fullSaturationOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_fullSaturationOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_C_fullSaturationOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_fullSaturationOperation castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_fullSaturationOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_C_complementationOperation'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_complementationOperation ;

//---------------------------------------------------------------------------*

class GGS_C_complementationOperation : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_complementationOperation (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_complementationOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_complementationOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_complementationOperation
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_complementationOperation constructor_new (C_Compiler & inLexique,
                                const GGS_AC_machineDefinition & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_complementationOperation * getPtr (void) const {
    return (cPtr_C_complementationOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_machineDefinition  reader_mOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_complementationOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_complementationOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_C_complementationOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_complementationOperation castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_complementationOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_C_suppressTerminalStatesOperation'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_suppressTerminalStatesOperation ;

//---------------------------------------------------------------------------*

class GGS_C_suppressTerminalStatesOperation : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_suppressTerminalStatesOperation (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_suppressTerminalStatesOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_suppressTerminalStatesOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_suppressTerminalStatesOperation
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_suppressTerminalStatesOperation constructor_new (C_Compiler & inLexique,
                                const GGS_AC_machineDefinition & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_suppressTerminalStatesOperation * getPtr (void) const {
    return (cPtr_C_suppressTerminalStatesOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_machineDefinition  reader_mOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_suppressTerminalStatesOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_suppressTerminalStatesOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_C_suppressTerminalStatesOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_suppressTerminalStatesOperation castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_suppressTerminalStatesOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_C_suppressInitialStatesOperation'             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_suppressInitialStatesOperation ;

//---------------------------------------------------------------------------*

class GGS_C_suppressInitialStatesOperation : public GGS_AC_machineDefinition {
//--- Default constructor
  public : inline GGS_C_suppressInitialStatesOperation (void) :
  GGS_AC_machineDefinition () {}

//--- Pointer assignment constructor
  public : GGS_C_suppressInitialStatesOperation (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_suppressInitialStatesOperation (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_suppressInitialStatesOperation
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_suppressInitialStatesOperation constructor_new (C_Compiler & inLexique,
                                const GGS_AC_machineDefinition & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_suppressInitialStatesOperation * getPtr (void) const {
    return (cPtr_C_suppressInitialStatesOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_machineDefinition  reader_mOperand (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_suppressInitialStatesOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_suppressInitialStatesOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_C_suppressInitialStatesOperation *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_suppressInitialStatesOperation castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_suppressInitialStatesOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        GALGAS class 'GGS_AC_job'                          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_AC_job ;

//---------------------------------------------------------------------------*

class GGS_AC_job : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_AC_job (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_job (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_job (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_AC_job
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_job * getPtr (void) const {
    return (cPtr_AC_job *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_job * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_job * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_job *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_AC_job castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__AC_job ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_C_machineDisplayStates'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_machineDisplayStates ;

//---------------------------------------------------------------------------*

class GGS_C_machineDisplayStates : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_machineDisplayStates (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_machineDisplayStates (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_machineDisplayStates (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_machineDisplayStates
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_machineDisplayStates constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_machineDisplayStates * getPtr (void) const {
    return (cPtr_C_machineDisplayStates *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mMachineIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_machineDisplayStates * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_machineDisplayStates * operator () (LOCATION_ARGS) const {
      return (cPtr_C_machineDisplayStates *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_machineDisplayStates castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_machineDisplayStates ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_C_machineDisplayInitialStates'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_machineDisplayInitialStates ;

//---------------------------------------------------------------------------*

class GGS_C_machineDisplayInitialStates : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_machineDisplayInitialStates (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_machineDisplayInitialStates (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_machineDisplayInitialStates (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_machineDisplayInitialStates
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_machineDisplayInitialStates constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_machineDisplayInitialStates * getPtr (void) const {
    return (cPtr_C_machineDisplayInitialStates *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mMachineIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_machineDisplayInitialStates * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_machineDisplayInitialStates * operator () (LOCATION_ARGS) const {
      return (cPtr_C_machineDisplayInitialStates *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_machineDisplayInitialStates castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_machineDisplayInitialStates ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_C_machineDisplayTerminalStates'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_machineDisplayTerminalStates ;

//---------------------------------------------------------------------------*

class GGS_C_machineDisplayTerminalStates : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_machineDisplayTerminalStates (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_machineDisplayTerminalStates (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_machineDisplayTerminalStates (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_machineDisplayTerminalStates
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_machineDisplayTerminalStates constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_machineDisplayTerminalStates * getPtr (void) const {
    return (cPtr_C_machineDisplayTerminalStates *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mMachineIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_machineDisplayTerminalStates * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_machineDisplayTerminalStates * operator () (LOCATION_ARGS) const {
      return (cPtr_C_machineDisplayTerminalStates *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_machineDisplayTerminalStates castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_machineDisplayTerminalStates ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_C_machineDisplayTransitions'               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_machineDisplayTransitions ;

//---------------------------------------------------------------------------*

class GGS_C_machineDisplayTransitions : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_machineDisplayTransitions (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_machineDisplayTransitions (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_machineDisplayTransitions (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_machineDisplayTransitions
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_machineDisplayTransitions constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_machineDisplayTransitions * getPtr (void) const {
    return (cPtr_C_machineDisplayTransitions *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mMachineIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_machineDisplayTransitions * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_machineDisplayTransitions * operator () (LOCATION_ARGS) const {
      return (cPtr_C_machineDisplayTransitions *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_machineDisplayTransitions castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_machineDisplayTransitions ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_C_machineCheck'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_machineCheck ;

//---------------------------------------------------------------------------*

class GGS_C_machineCheck : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_machineCheck (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_machineCheck (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_machineCheck (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_machineCheck
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_machineCheck constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_machineCheck * getPtr (void) const {
    return (cPtr_C_machineCheck *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mMachineIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mCheckMachineIsBoolean (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_machineCheck * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_machineCheck * operator () (LOCATION_ARGS) const {
      return (cPtr_C_machineCheck *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_machineCheck castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_machineCheck ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_C_machineCheckIdentical'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_machineCheckIdentical ;

//---------------------------------------------------------------------------*

class GGS_C_machineCheckIdentical : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_machineCheckIdentical (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_machineCheckIdentical (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_machineCheckIdentical (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_machineCheckIdentical
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_machineCheckIdentical constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_machineCheckIdentical * getPtr (void) const {
    return (cPtr_C_machineCheckIdentical *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mMachineIndex1 (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mMachineIndex2 (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_machineCheckIdentical * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_machineCheckIdentical * operator () (LOCATION_ARGS) const {
      return (cPtr_C_machineCheckIdentical *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_machineCheckIdentical castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_machineCheckIdentical ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_machineComponent'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_machineComponent ;

//---------------------------------------------------------------------------*

class GGS_C_machineComponent : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_machineComponent (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_machineComponent (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_machineComponent (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_machineComponent
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_machineComponent constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_uint & argument_2,
                                const GGS_uint & argument_3,
                                const GGS_M_variablesMap & argument_4,
                                const GGS_AC_machineDefinition & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_machineComponent * getPtr (void) const {
    return (cPtr_C_machineComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMachineName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mMachineIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mInputVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mInputAndInternalVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_M_variablesMap  reader_mVariablesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_machineDefinition  reader_mDefinition (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_machineComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_machineComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_C_machineComponent *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_machineComponent castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_machineComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_C_machineDefinedByAdditiveModalComp'           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_machineDefinedByAdditiveModalComp ;

//---------------------------------------------------------------------------*

class GGS_C_machineDefinedByAdditiveModalComp : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_machineDefinedByAdditiveModalComp (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_machineDefinedByAdditiveModalComp (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_machineDefinedByAdditiveModalComp (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_machineDefinedByAdditiveModalComp
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_machineDefinedByAdditiveModalComp constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_uint & argument_2,
                                const GGS_uint & argument_3,
                                const GGS_M_variablesMap & argument_4,
                                const GGS_M_modesMap & argument_5,
                                const GGS_ListForModes & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_machineDefinedByAdditiveModalComp * getPtr (void) const {
    return (cPtr_C_machineDefinedByAdditiveModalComp *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMachineName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mMachineIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mInputVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mInputAndInternalVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_M_variablesMap  reader_mVariablesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_M_modesMap  reader_mModeMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_ListForModes  reader_mInclusionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_machineDefinedByAdditiveModalComp * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_machineDefinedByAdditiveModalComp * operator () (LOCATION_ARGS) const {
      return (cPtr_C_machineDefinedByAdditiveModalComp *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_machineDefinedByAdditiveModalComp castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_machineDefinedByAdditiveModalComp ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_C_machineDefinedBySubstractiveModalComp'         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_machineDefinedBySubstractiveModalComp ;

//---------------------------------------------------------------------------*

class GGS_C_machineDefinedBySubstractiveModalComp : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_machineDefinedBySubstractiveModalComp (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_machineDefinedBySubstractiveModalComp (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_machineDefinedBySubstractiveModalComp (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_machineDefinedBySubstractiveModalComp
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_machineDefinedBySubstractiveModalComp constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_uint & argument_2,
                                const GGS_uint & argument_3,
                                const GGS_M_variablesMap & argument_4,
                                const GGS_M_modesMap & argument_5,
                                const GGS_ListForModes & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_machineDefinedBySubstractiveModalComp * getPtr (void) const {
    return (cPtr_C_machineDefinedBySubstractiveModalComp *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMachineName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mMachineIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mInputVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mInputAndInternalVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_M_variablesMap  reader_mVariablesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_M_modesMap  reader_mModeMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_ListForModes  reader_mExclusionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_machineDefinedBySubstractiveModalComp * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_machineDefinedBySubstractiveModalComp * operator () (LOCATION_ARGS) const {
      return (cPtr_C_machineDefinedBySubstractiveModalComp *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_machineDefinedBySubstractiveModalComp castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_machineDefinedBySubstractiveModalComp ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 list '@L_inputConfigurationForScenario'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_inputConfigurationForScenario ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_inputConfigurationForScenario ;

//---------------------------------------------------------------------------*

class GGS_L_inputConfigurationForScenario : public AC_GGS_list {
  public : typedef elementOf_GGS_L_inputConfigurationForScenario cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_inputConfigurationForScenario constructor_emptyList (void) ;
  public : static GGS_L_inputConfigurationForScenario constructor_listWithValue (const GGS_luint & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_inputConfigurationForScenario & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_inputConfigurationForScenario
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_inputConfigurationForScenario
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_inputConfigurationForScenario * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_luint & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_luint & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_luint & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_luint & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_inputConfigurationForScenario inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_luint & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_inputConfigurationForScenario operator_concat (const GGS_L_inputConfigurationForScenario & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_luint 
  reader_mInputValueAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInputValueAtIndex (C_Compiler & inLexique,
                              const GGS_luint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_inputConfigurationForScenario castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_inputConfigurationForScenario & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_luint   & _mInputValue (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@L_inputScenario'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_inputScenario ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_inputScenario ;

//---------------------------------------------------------------------------*

class GGS_L_inputScenario : public AC_GGS_list {
  public : typedef elementOf_GGS_L_inputScenario cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_inputScenario constructor_emptyList (void) ;
  public : static GGS_L_inputScenario constructor_listWithValue (const GGS_L_inputConfigurationForScenario & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_inputScenario & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_inputScenario
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_inputScenario
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_inputScenario * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_L_inputConfigurationForScenario & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_L_inputConfigurationForScenario & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_L_inputConfigurationForScenario & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_L_inputConfigurationForScenario & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_inputScenario inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_L_inputConfigurationForScenario & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_inputScenario operator_concat (const GGS_L_inputScenario & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_L_inputConfigurationForScenario & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_L_inputConfigurationForScenario & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_L_inputConfigurationForScenario & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_L_inputConfigurationForScenario 
  reader_mInputConfigurationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInputConfigurationAtIndex (C_Compiler & inLexique,
                              const GGS_L_inputConfigurationForScenario  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_inputScenario castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_inputScenario & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_inputConfigurationForScenario   & _mInputConfiguration (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_scenarioList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_scenarioList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_scenarioList ;

//---------------------------------------------------------------------------*

class GGS_L_scenarioList : public AC_GGS_list {
  public : typedef elementOf_GGS_L_scenarioList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_scenarioList constructor_emptyList (void) ;
  public : static GGS_L_scenarioList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_L_inputScenario & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_scenarioList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_scenarioList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_scenarioList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_scenarioList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_L_inputScenario & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_L_inputScenario & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_L_inputScenario & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_L_inputScenario & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_scenarioList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_L_inputScenario & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_scenarioList operator_concat (const GGS_L_scenarioList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_L_inputScenario & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_L_inputScenario & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_L_inputScenario & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mScenarioTitleAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_L_inputScenario 
  reader_mInputScenarioAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMScenarioTitleAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInputScenarioAtIndex (C_Compiler & inLexique,
                              const GGS_L_inputScenario  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_scenarioList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_scenarioList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mScenarioTitle (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_inputScenario   & _mInputScenario (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_C_scenarioComponent'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_C_scenarioComponent ;

//---------------------------------------------------------------------------*

class GGS_C_scenarioComponent : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_C_scenarioComponent (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_C_scenarioComponent (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_scenarioComponent (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_C_scenarioComponent
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_scenarioComponent constructor_new (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_uint & argument_2,
                                const GGS_M_variablesMap & argument_3,
                                const GGS_L_scenarioList & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_scenarioComponent * getPtr (void) const {
    return (cPtr_C_scenarioComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mMachineIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mInputVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mInputAndInternalVariableCount (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_M_variablesMap  reader_mVariablesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_scenarioList  reader_mScenarioList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_scenarioComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_scenarioComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_C_scenarioComponent *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_C_scenarioComponent castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__C_scenarioComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_typeUse_AND'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeUse_AND ;

//---------------------------------------------------------------------------*

class GGS_typeUse_AND : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_typeUse_AND (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_typeUse_AND (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeUse_AND (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeUse_AND
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeUse_AND constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeUse_AND * getPtr (void) const {
    return (cPtr_typeUse_AND *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeUse_AND * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeUse_AND * operator () (LOCATION_ARGS) const {
      return (cPtr_typeUse_AND *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeUse_AND castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeUse_AND ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_typeUse_ITE'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeUse_ITE ;

//---------------------------------------------------------------------------*

class GGS_typeUse_ITE : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_typeUse_ITE (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_typeUse_ITE (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeUse_ITE (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeUse_ITE
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeUse_ITE constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeUse_ITE * getPtr (void) const {
    return (cPtr_typeUse_ITE *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeUse_ITE * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeUse_ITE * operator () (LOCATION_ARGS) const {
      return (cPtr_typeUse_ITE *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeUse_ITE castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeUse_ITE ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeUse_AND_ITE'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeUse_AND_ITE ;

//---------------------------------------------------------------------------*

class GGS_typeUse_AND_ITE : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_typeUse_AND_ITE (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_typeUse_AND_ITE (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeUse_AND_ITE (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeUse_AND_ITE
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeUse_AND_ITE constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeUse_AND_ITE * getPtr (void) const {
    return (cPtr_typeUse_AND_ITE *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeUse_AND_ITE * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeUse_AND_ITE * operator () (LOCATION_ARGS) const {
      return (cPtr_typeUse_AND_ITE *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeUse_AND_ITE castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeUse_AND_ITE ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeResize_AND_cache'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeResize_AND_cache ;

//---------------------------------------------------------------------------*

class GGS_typeResize_AND_cache : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_typeResize_AND_cache (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_typeResize_AND_cache (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeResize_AND_cache (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeResize_AND_cache
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeResize_AND_cache constructor_new (C_Compiler & inLexique,
                                const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeResize_AND_cache * getPtr (void) const {
    return (cPtr_typeResize_AND_cache *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint  reader_mNewSize (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeResize_AND_cache * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeResize_AND_cache * operator () (LOCATION_ARGS) const {
      return (cPtr_typeResize_AND_cache *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeResize_AND_cache castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeResize_AND_cache ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeResize_ITE_cache'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeResize_ITE_cache ;

//---------------------------------------------------------------------------*

class GGS_typeResize_ITE_cache : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_typeResize_ITE_cache (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_typeResize_ITE_cache (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeResize_ITE_cache (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeResize_ITE_cache
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeResize_ITE_cache constructor_new (C_Compiler & inLexique,
                                const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeResize_ITE_cache * getPtr (void) const {
    return (cPtr_typeResize_ITE_cache *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint  reader_mNewSize (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeResize_ITE_cache * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeResize_ITE_cache * operator () (LOCATION_ARGS) const {
      return (cPtr_typeResize_ITE_cache *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeResize_ITE_cache castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeResize_ITE_cache ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeResizeMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeResizeMap ;

//---------------------------------------------------------------------------*

class GGS_typeResizeMap : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_typeResizeMap (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_typeResizeMap (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeResizeMap (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeResizeMap
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeResizeMap constructor_new (C_Compiler & inLexique,
                                const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeResizeMap * getPtr (void) const {
    return (cPtr_typeResizeMap *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint  reader_mNewSize (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeResizeMap * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeResizeMap * operator () (LOCATION_ARGS) const {
      return (cPtr_typeResizeMap *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeResizeMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeResizeMap ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeDisplayBDDstats'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeDisplayBDDstats ;

//---------------------------------------------------------------------------*

class GGS_typeDisplayBDDstats : public GGS_AC_job {
//--- Default constructor
  public : inline GGS_typeDisplayBDDstats (void) :
  GGS_AC_job () {}

//--- Pointer assignment constructor
  public : GGS_typeDisplayBDDstats (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeDisplayBDDstats (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeDisplayBDDstats
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeDisplayBDDstats constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeDisplayBDDstats * getPtr (void) const {
    return (cPtr_typeDisplayBDDstats *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDisplayBDDstats * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDisplayBDDstats * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDisplayBDDstats *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeDisplayBDDstats castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeDisplayBDDstats ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            list '@L_jobList'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_jobList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_L_jobList ;

//---------------------------------------------------------------------------*

class GGS_L_jobList : public AC_GGS_list {
  public : typedef elementOf_GGS_L_jobList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_jobList constructor_emptyList (void) ;
  public : static GGS_L_jobList constructor_listWithValue (const GGS_AC_job & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_jobList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_L_jobList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_jobList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_jobList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_AC_job & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_AC_job & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_AC_job & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_AC_job & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_L_jobList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_AC_job & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_jobList operator_concat (const GGS_L_jobList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_AC_job & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_AC_job & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_AC_job & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_job 
  reader_mComponentAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMComponentAtIndex (C_Compiler & inLexique,
                              const GGS_AC_job  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_L_jobList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_jobList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_job   & _mComponent (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@M_machinesMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_machinesMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_M_machinesMap ;

//---------------------------------------------------------------------------*

class GGS_M_machinesMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_M_machinesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_M_machinesMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_M_machinesMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_M_machinesMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_machinesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_machinesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_machinesMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kRemoveMessage_removeKey [] ;

//--- 'removeKey' Remove Modifier
  public : void modifier_removeKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint & outParameter0,
                                GGS_uint & outParameter1,
                                GGS_uint & outParameter2,
                                GGS_M_variablesMap & outParameter3 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0,
                                const GGS_uint &  inParameter1,
                                const GGS_uint &  inParameter2,
                                const GGS_M_variablesMap &  inParameter3 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0,
                                GGS_uint   & outParameter1,
                                GGS_uint   & outParameter2,
                                GGS_M_variablesMap   & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- Internal method for removing an element
  protected : void removeElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_uint & outParameter1,
                                   GGS_uint & outParameter2,
                                   GGS_M_variablesMap & outParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   const GGS_uint & inParameter1,
                                   const GGS_uint & inParameter2,
                                   const GGS_M_variablesMap & inParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_uint & outParameter1,
                                   GGS_uint & outParameter2,
                                   GGS_M_variablesMap & outParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_M_machinesMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_machinesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_machinesMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_machinesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_machinesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mInputVariableCount (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mInputAndInternalVariableCount (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_variablesMap   & _mVariablesMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@M_variablesMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_variablesMap {
  public : GGS_uint  mIndex ;

  public : e_M_variablesMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_variablesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_variablesMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_variablesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_variablesMap * nextObject (void) const { return (elementOf_GGS_M_variablesMap *) mNextItem ; }
  public : inline elementOf_GGS_M_variablesMap * infObject (void) const { return (elementOf_GGS_M_variablesMap *) mInfPtr ; }
  public : inline elementOf_GGS_M_variablesMap * supObject (void) const { return (elementOf_GGS_M_variablesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_variablesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@M_stateMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_stateMap {
  public : GGS_uint  mIndex ;

  public : e_M_stateMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_stateMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_stateMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_stateMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_stateMap * nextObject (void) const { return (elementOf_GGS_M_stateMap *) mNextItem ; }
  public : inline elementOf_GGS_M_stateMap * infObject (void) const { return (elementOf_GGS_M_stateMap *) mInfPtr ; }
  public : inline elementOf_GGS_M_stateMap * supObject (void) const { return (elementOf_GGS_M_stateMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_stateMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@L_translationVector'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_translationVector : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_uint  mTargetSlot ;
//--- Constructor
  public : elementOf_GGS_L_translationVector (const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_translationVector * nextObject (void) const { return (elementOf_GGS_L_translationVector *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_translationVector * previousObject (void) const { return (elementOf_GGS_L_translationVector *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_translationVector ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_boolExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_importBoolMachine.h"

//---------------------------------------------------------------------------*

#include "include_C_andExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_orExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_xorExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_impliesExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_equalExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_notExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_VariableExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_trueExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_falseExpression.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@L_transitionDefinition'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_transitionDefinition : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_AC_boolExpression  mActionExpression ;
  public : GGS_location  mEndOfExpression ;
  public : GGS_uint  mTargetStateIndex ;
//--- Constructor
  public : elementOf_GGS_L_transitionDefinition (const GGS_AC_boolExpression & ,
                                const GGS_location & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_transitionDefinition * nextObject (void) const { return (elementOf_GGS_L_transitionDefinition *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_transitionDefinition * previousObject (void) const { return (elementOf_GGS_L_transitionDefinition *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_transitionDefinition ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@L_stateDefinition'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_stateDefinition : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_uint  mStateIndex ;
  public : GGS_AC_boolExpression  mStateExpression ;
  public : GGS_location  mEndOfStateExpression ;
  public : GGS_L_transitionDefinition  mTransitionsList ;
//--- Constructor
  public : elementOf_GGS_L_stateDefinition (const GGS_uint & ,
                                const GGS_AC_boolExpression & ,
                                const GGS_location & ,
                                const GGS_L_transitionDefinition & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_stateDefinition * nextObject (void) const { return (elementOf_GGS_L_stateDefinition *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_stateDefinition * previousObject (void) const { return (elementOf_GGS_L_stateDefinition *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_stateDefinition ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@L_statesDefinitionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_statesDefinitionList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_uint  mStateIndex ;
  public : GGS_location  mStateLocation ;
//--- Constructor
  public : elementOf_GGS_L_statesDefinitionList (const GGS_uint & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_statesDefinitionList * nextObject (void) const { return (elementOf_GGS_L_statesDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_statesDefinitionList * previousObject (void) const { return (elementOf_GGS_L_statesDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_statesDefinitionList ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_machineDefinition.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@M_modesMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_modesMap {
  public : GGS_uint  mIndex ;
  public : GGS_AC_machineDefinition  mModeDefinition ;

  public : e_M_modesMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_modesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_modesMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_modesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_modesMap * nextObject (void) const { return (elementOf_GGS_M_modesMap *) mNextItem ; }
  public : inline elementOf_GGS_M_modesMap * infObject (void) const { return (elementOf_GGS_M_modesMap *) mInfPtr ; }
  public : inline elementOf_GGS_M_modesMap * supObject (void) const { return (elementOf_GGS_M_modesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_modesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@ListForModes'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ListForModes : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_uint  mSourceMode ;
  public : GGS_uint  mTargetMode ;
//--- Constructor
  public : elementOf_GGS_ListForModes (const GGS_uint & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_ListForModes * nextObject (void) const { return (elementOf_GGS_ListForModes *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_ListForModes * previousObject (void) const { return (elementOf_GGS_ListForModes *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_ListForModes ;
} ;

//---------------------------------------------------------------------------*

#include "include_C_substractiveModalCompositionComponent.h"

//---------------------------------------------------------------------------*

#include "include_C_additiveModalCompositionComponent.h"

//---------------------------------------------------------------------------*

#include "include_C_trans.h"

//---------------------------------------------------------------------------*

#include "include_C_importMachine.h"

//---------------------------------------------------------------------------*

#include "include_C_explicitAutomatonDefinition.h"

//---------------------------------------------------------------------------*

#include "include_C_boolToSeqExpression.h"

//---------------------------------------------------------------------------*

#include "include_C_existsDefinition.h"

//---------------------------------------------------------------------------*

#include "include_C_forallDefinition.h"

//---------------------------------------------------------------------------*

#include "include_C_parallelComposition.h"

//---------------------------------------------------------------------------*

#include "include_C_orComposition.h"

//---------------------------------------------------------------------------*

#include "include_C_strongModalComposition.h"

//---------------------------------------------------------------------------*

#include "include_C_weakModalComposition.h"

//---------------------------------------------------------------------------*

#include "include_C_fullSaturationOperation.h"

//---------------------------------------------------------------------------*

#include "include_C_complementationOperation.h"

//---------------------------------------------------------------------------*

#include "include_C_suppressTerminalStatesOperation.h"

//---------------------------------------------------------------------------*

#include "include_C_suppressInitialStatesOperation.h"

//---------------------------------------------------------------------------*

#include "include_AC_job.h"

//---------------------------------------------------------------------------*

#include "include_C_machineDisplayStates.h"

//---------------------------------------------------------------------------*

#include "include_C_machineDisplayInitialStates.h"

//---------------------------------------------------------------------------*

#include "include_C_machineDisplayTerminalStates.h"

//---------------------------------------------------------------------------*

#include "include_C_machineDisplayTransitions.h"

//---------------------------------------------------------------------------*

#include "include_C_machineCheck.h"

//---------------------------------------------------------------------------*

#include "include_C_machineCheckIdentical.h"

//---------------------------------------------------------------------------*

#include "include_C_machineComponent.h"

//---------------------------------------------------------------------------*

#include "include_C_machineDefinedByAdditiveModalComp.h"

//---------------------------------------------------------------------------*

#include "include_C_machineDefinedBySubstractiveModalComp.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@L_inputConfigurationForScenario'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_inputConfigurationForScenario : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_luint  mInputValue ;
//--- Constructor
  public : elementOf_GGS_L_inputConfigurationForScenario (const GGS_luint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_inputConfigurationForScenario * nextObject (void) const { return (elementOf_GGS_L_inputConfigurationForScenario *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_inputConfigurationForScenario * previousObject (void) const { return (elementOf_GGS_L_inputConfigurationForScenario *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_inputConfigurationForScenario ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@L_inputScenario'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_inputScenario : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_L_inputConfigurationForScenario  mInputConfiguration ;
//--- Constructor
  public : elementOf_GGS_L_inputScenario (const GGS_L_inputConfigurationForScenario & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_inputScenario * nextObject (void) const { return (elementOf_GGS_L_inputScenario *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_inputScenario * previousObject (void) const { return (elementOf_GGS_L_inputScenario *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_inputScenario ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@L_scenarioList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_scenarioList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mScenarioTitle ;
  public : GGS_L_inputScenario  mInputScenario ;
//--- Constructor
  public : elementOf_GGS_L_scenarioList (const GGS_lstring & ,
                                const GGS_L_inputScenario & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_scenarioList * nextObject (void) const { return (elementOf_GGS_L_scenarioList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_scenarioList * previousObject (void) const { return (elementOf_GGS_L_scenarioList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_scenarioList ;
} ;

//---------------------------------------------------------------------------*

#include "include_C_scenarioComponent.h"

//---------------------------------------------------------------------------*

#include "include_typeUse_AND.h"

//---------------------------------------------------------------------------*

#include "include_typeUse_ITE.h"

//---------------------------------------------------------------------------*

#include "include_typeUse_AND_ITE.h"

//---------------------------------------------------------------------------*

#include "include_typeResize_AND_cache.h"

//---------------------------------------------------------------------------*

#include "include_typeResize_ITE_cache.h"

//---------------------------------------------------------------------------*

#include "include_typeResizeMap.h"

//---------------------------------------------------------------------------*

#include "include_typeDisplayBDDstats.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of list '@L_jobList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_jobList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_AC_job  mComponent ;
//--- Constructor
  public : elementOf_GGS_L_jobList (const GGS_AC_job & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_jobList * nextObject (void) const { return (elementOf_GGS_L_jobList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_jobList * previousObject (void) const { return (elementOf_GGS_L_jobList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_L_jobList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@M_machinesMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_machinesMap {
  public : GGS_uint  mIndex ;
  public : GGS_uint  mInputVariableCount ;
  public : GGS_uint  mInputAndInternalVariableCount ;
  public : GGS_M_variablesMap  mVariablesMap ;

  public : e_M_machinesMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_machinesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_machinesMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_M_machinesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_machinesMap * nextObject (void) const { return (elementOf_GGS_M_machinesMap *) mNextItem ; }
  public : inline elementOf_GGS_M_machinesMap * infObject (void) const { return (elementOf_GGS_M_machinesMap *) mInfPtr ; }
  public : inline elementOf_GGS_M_machinesMap * supObject (void) const { return (elementOf_GGS_M_machinesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_machinesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Declarations for 'semanticContext' struct                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticContext ;

//---------------------------------------------------------------------------*

class GGS_semanticContext : public GGS__root {
//--- Default constructor
  public : GGS_semanticContext (void) ;

//--- Virtual destructor
  public : virtual ~GGS_semanticContext (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_semanticContext * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_semanticContext * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_semanticContext & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_semanticContext & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticContext castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_semanticContext constructor_new (const GGS_L_jobList & argument_0,
                 const GGS_M_machinesMap & argument_1) ;

//--- Readers
  public : inline GGS_L_jobList 
  reader_componentsMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return componentsMap ;
  }

  public : inline GGS_M_machinesMap 
  reader_machinesMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return machinesMap ;
  }

//--- Attributes
  public : GGS_L_jobList  componentsMap ;
  public : GGS_M_machinesMap  machinesMap ;
} ;

//---------------------------------------------------------------------------*

#endif
