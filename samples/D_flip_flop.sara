$bascule_rs (r, s)()(q, qb) := (q = ~ (qb & s)) & (qb = ~ (r & q)) ;

$bascule_rs_modifiee (r, s)()(q, qb) :=
  auto {
    state zero, un, deux, trois_un, trois_deux ;
    first zero, un, deux, trois_un ;
    last zero, un, deux, trois_un, trois_deux ;
    zero : ~r & ~s & q & qb {
     ~r &  s goto un ;
      r & ~s goto deux ;
      r &  s goto trois_un ;
    }
    un : ~r & s & ~q & qb {
     ~r & ~s goto zero ;
      r & ~s goto deux ;
      r &  s goto trois_un ;
    }
    deux : r & ~s & q & ~qb {
     ~r & ~s goto zero ;
     ~r &  s goto un ;
      r &  s goto trois_deux ;
    }
    trois_un : r & s & q & ~qb {
     ~r & ~s goto zero ;
     ~r &  s goto un ;
      r & ~s goto deux ;
    }
    trois_deux : r & s & ~q & qb {
     ~r & ~s goto zero ;
     ~r &  s goto un ;
      r & ~s goto deux ;
    }
  }
;

$d_flip_flop (d, clk)()(q, qb) := 
 ? x, y, z, t, u, v (
  (x = ~ (d & clk)) & (y = ~ (x & clk)) &
  $bascule_rs (x, y)()(t, z)   &
  (u = ~ (z & ~clk)) & (v = ~ (t & ~ clk)) &
  $bascule_rs (u, v)()(qb, q)
 )
;
check $d_flip_flop ;

$d_flip_flop_modifie (d, clk)()(q, qb) := 
 ? x, y, z, t, u, v (
  (x = ~ (d & clk)) & (y = ~ (x & clk)) &
  $bascule_rs_modifiee (x, y)()(t, z)   &
  (u = ~ (z & ~clk)) & (v = ~ (t & ~ clk)) &
  $bascule_rs_modifiee (u, v)()(qb, q)
 )
;
check $d_flip_flop_modifie ;
