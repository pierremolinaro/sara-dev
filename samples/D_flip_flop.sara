$bascule_rs (r, s)()(q, qb) := bool {(q = ~ (qb & s)) & (qb = ~ (r & q))} ;
check $bascule_rs ;

$bascule_rs_modifiee (r, s)()(q, qb) :=
  auto {
    state zero, un, deux, trois_un, trois_deux ;
    first zero, un, deux, trois_un ;
    last zero, un, deux, trois_un, trois_deux ;
    zero : ~r & ~s & q & qb {
     ~r &  s goto un ;
      r & ~s goto deux ;
      r &  s goto trois_un ;
    }
    un : ~r & s & ~q & qb {
     ~r & ~s goto zero ;
      r & ~s goto deux ;
      r &  s goto trois_un ;
    }
    deux : r & ~s & q & ~qb {
     ~r & ~s goto zero ;
     ~r &  s goto un ;
      r &  s goto trois_deux ;
    }
    trois_un : r & s & q & ~qb {
     ~r & ~s goto zero ;
     ~r &  s goto un ;
      r & ~s goto deux ;
    }
    trois_deux : r & s & ~q & qb {
     ~r & ~s goto zero ;
     ~r &  s goto un ;
      r & ~s goto deux ;
    }
  }
;
check $bascule_rs_modifiee ;

$d_flip_flop (d, clk)()(q, qb) := 
 ? x, y, z, t, u, v (
  bool {(x = ~ (d & clk)) & (y = ~ (x & clk))} ||
  $bascule_rs (x, y)()(t, z)  ||
  bool {(u = ~ (z & ~clk)) & (v = ~ (t & ~ clk))} ||
  $bascule_rs (u, v)()(qb, q)
 )
;
check $d_flip_flop ;

$d_flip_flop_modifie (d, clk)()(q, qb) := 
 ? x, y, z, t, u, v (
  bool {(x = ~ (d & clk)) & (y = ~ (x & clk))} ||
  $bascule_rs_modifiee (x, y)()(t, z) ||
  bool {(u = ~ (z & ~clk)) & (v = ~ (t & ~ clk))} ||
  $bascule_rs_modifiee (u, v)()(qb, q)
 )
;
check $d_flip_flop_modifie ;

scenario $d_flip_flop_modifie (d, clk)()(q, qb) {
 "comptage" :0,0:1,0:1,1:0,1:0,0:1,0:1,1:0,1:0,0 ;
 "d et clk synchrones" :0,0:1,1:0,0 ;
}

$simple_d_flip_flop (d, clk)()(q) := 
? qb ($d_flip_flop_modifie (d, clk)()(q, qb)) ;

check $simple_d_flip_flop ;

#---- COMPTEUR MODULO 5 SYNCHRONE
$synchronousMod5UpCounter (clk)()(s2, s1, s0) :=
 ? b2, b1, b0 (
  $simple_d_flip_flop (b2, clk)()(s2) ||
  $simple_d_flip_flop (b1, clk)()(s1) ||
  $simple_d_flip_flop (b0, clk)()(s0) ||
  bool {
    (~s2 & ~s1 & ~s0 & ~b2 & ~b1 &  b0) |
    (~s2 & ~s1 &  s0 & ~b2 &  b1 & ~b0) |
    (~s2 &  s1 & ~s0 & ~b2 &  b1 &  b0) |
    (~s2 &  s1 &  s0 &  b2 & ~b1 & ~b0) |
    ( s2 & ~s1 & ~s0 & ~b2 & ~b1 & ~b0)
  }
 )
;

check $synchronousMod5UpCounter ;

